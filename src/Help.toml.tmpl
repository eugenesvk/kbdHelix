# chezmoi:template:left-delimiter="#◊" right-delimiter="◊"
# Help —————————————————————————————————————————————————————————————————————————————————————————————
  # At most one section each of 'keys.normal', 'keys.insert' and 'keys.select'
  # ®registers /LastSearch :LastCommand "LastCopiedText _BlackHole
  # g = { a = 'code_action' } # Maps `ga` to show possible code actions
  # Default commands @ github.com/helix-editor/helix/blob/master/helix-term/src/commands.rs at the invocation of static_commands! macro and the TypableCommandList
  # [keys.normal.g.l]
  # 'd' = 'cmd1'  # gld
  # 'r' = 'cmd2'  # glr
  # [keys.normal.z]
  # '$' = 'cmd1'  # z$

  # Key name          	Representation
  # Control Shift Alt 	'C-' 'S-' 'A-' # prefix-only
  # Escape            	'esc'
  # Backspace         	'backspace'
  # Space             	'space'
  # Return/Enter      	'ret'
  # -                 	'minus'
  # Left Right Up Down	'left' 'right' 'up' 'down'
  # Home End          	'home' 'end'
  # PageUp            	'pageup'
  # PageDown          	'pagedown'
  # Tab               	'tab'
  # Delete            	'del'
  # Insert            	'ins'
  # Null              	'null'
  # Keys can be disabled by binding them to the no_op command

  #Unimpaired help
    # [n                      Go to the previous SCM conflict marker or diff/patch hunk Try d[n inside a conflict
    # ]n                      Go to the next     SCM conflict marker or diff/patch hunk Try d]n inside a conflict
    # ENCODING AND DECODING
    # Each of these operations has a map that takes a motion, a map that targets [count] lines, and a visual mode map.  The linewise variant integrates with repeat.vim.
    # Mnemonic: encoding always comes before decoding; "[" always comes before "]".
    # [x{motion}              XML encode.  *[x* *[xx* *v_[x*
    # [xx                     <foo bar="baz"> => &lt;foo bar=&quot;baz&quot;&gt;
    # {Visual}[x
    # ]x{motion}              XML decode.  HTML entities are handled as well. *]x* *]xx* *v_]x*
    # ]xx
    # {Visual}]x
    # [u{motion}              URL encode. *[u* *[uu* *v_[u*
    # [uu                     foo bar => foo%20bar
    # {Visual}[u
    # ]u{motion}              URL decode. *]u* *]uu* *v_]u*
    # ]uu
    # {Visual}]u
    # [y{motion}              C String encode.  Backslash escape control *[y* *[yy* *v_[y* *[C* *[CC* *v_[C*
    # [yy                     characters, quotation marks, and backslashes.
    # {Visual}[y
    # [C{motion}
    # [CC
    # {Visual}[C
    #                                         *]y* *]yy* *v_]y* *]C* *]CC* *v_]C*
    # ]y{motion}              C String decode.
    # ]yy
    # {Visual}]y
    # ]C{motion}
    # ]CC
    # {Visual}]C
