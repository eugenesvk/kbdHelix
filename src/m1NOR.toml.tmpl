# chezmoi:template:left-delimiter="#◊" right-delimiter="◊"
#◊/* key	= command	# Icon Comment	≝「key for ←cmd」	「	cmd ←←key」 */ -◊
[keys.normal] #Ⓝ
  #Ⓝ Test ——————————————————————————————————————————————————————————————————————
    'C-q'  	= ':quit!'                         	# Control-q → typable command :q! (:quit!)
    # 'G'  	= 'move_prev_word_end'             	# Backward a word                                                    	「⇧I.⎇b, ⎇◀」	「goto_line」
    # '0'  	= 'univeral_arg'                   	# ∀* number prefix to treat all the following numbers as # of repeats	「  」       	「0」  !!!missing ∀*
    # 'C-j'	= ['page_down','align_view_center']	# ⇟ Move      page down                                              	   「 ⎈d」   	「」
    # 'C-k'	= ['page_up','align_view_center']  	# ⇞ Move      page up                                                	   「 ⎈u」   	「」

    'C-l'  	= 'suspend'    	# 💤 Suspend job      	「⎈z」    	「」
    # 'C-K'	= "insert_char"	# ⇞ Move      page up	   「 ⎈u」	「」

  #Ⓝ Free ——————————————————————————————————————————————————————————————————————
    'C-u'	= 'no_op'           	#                        	「   」 	「half_page_up」
    'A-C'	= 'no_op'           	#                        	「⇧   」	「copy_selection_on_prev_line」
    'A-('	= 'no_op'           	#                        	「⇧⎇9」 	「rotate_selection_contents_backward」
    'A-)'	= 'no_op'           	#                        	「⇧⎇0」 	「rotate_selection_contents_forward」
    'A-K'	= 'no_op'           	#                        	「⇧   」	「remove_selections」
    'C-i'	= 'no_op'           	#                        	「   」 	「jump_forward」
    'b'  	= 'no_op'           	#                        	「⇧   」	「replace_with_yanked」
    '~'  	= "no_op"           	#                        	「⇧   」	「switch_case」
    'A-`'	= "no_op"           	#                        	「   」 	「switch_to_uppercase」
    # 'X'	= 'change_selection'	# Δ (delete,enter Insert)	「⇧  c」	「extend_to_line_bounds」
    # 'Z'	=  'N/A'            	# ☰👁ₛ                    	「   」 	「view mode sticky」
  #Ⓝ Major modes ——————————————————————————————————————————————————————————————————————
    # 'i'	= 'insert_mode'	# ⁁⤸ Insert before sel                  	「  i」	「insert_mode」
    # 'e'	= 'select_mode'	# Ⓢ ✠ Enter select (extend) mode (←↑↓→ in Web)	「  v」	「move_next_word_end」  <i class='fa fa-arrows'></i>
  #Ⓝ Minor modes / menu dialogs ———————————————————————————————————————————————————————
    #'p'    	                   	 ☰👁 View mode            	Ⓝ「  z」  	「paste_after」
    #'P'    	                   	 ☰👁ₛ 'sticky', persistent	Ⓝ「⇧ z」  	「paste_before」
    #'Z'    	                   	 ☰👁ₛ 'sticky', persistent	Ⓝ「⇧ z」  	「paste_before」
    #'g'    	                   	 ⓖ☰⮊ Goto mode           	  Ⓝ「  g」	「」
    #'n'    	                   	 ☰🧩  Match mode          	Ⓝ「  m」  	「」 ☰<i class='fa fa-puzzle-piece'></i>
    #'C-w'  	                   	 ☰🗔  Window mode         	  Ⓝ「 ⎈w」	「」
    #'space'	                   	 ☰␠  Space mode          	  Ⓝ「  ␠」	「」
    #'['    	                   	 ☰⧛ Unimpaired           	  Ⓝ「  ]」	「」
    #']'    	                   	 ☰⧚                      	  Ⓝ「  [」	「」
    #'`'    	                   	 ☰𝔸𝕒 Case conversion     	  Ⓝ「  」 	「switch_to_lowercase」
    #':'    	= 'command_mode'   	# Ⓒ Enter command mode   	「⇧ ;」   	「command_mode」
    'R'     	= 'command_palette'	# ☰Ⓒ Command Palette     	「⇧ /」   	「replace_with_yanked」

  #Ⓝ         	Compat with non-modal editors        	 
  'C-o'      	= 'file_picker'                      	# 🗁 Open file picker       	「☰␠  f」	「jump_backward」
  'C-O'      	= 'file_picker_in_current_directory' 	# 🗁 Open file picker@curdir	「☰␠⇧ f」	「」
  'C-s'      	= ['commit_undo_checkpoint',':write']	# 💾 save file              	「  ⎈s」 	「save_selection」
  # 'C-S-s'  	= 'Save As'                          	# ???                      	「⇧⎈s」  	「」
  'C-n'      	= ':new'                             	# 🗋 new buffer             	「 ⎈n」  	「」
  # 'C-S-t'  	= 'open-last-closed'                 	# ???                      	「⇧⎈t」  	「」
  # 'C-+'    	= 'zoom-in'                          	# ??? 🔎⨭                   	「 ⎈+」  	「」
  # 'C-minus'	= 'zoom-out'                         	# ??? 🔎−                   	「 ⎈-」  	「」

  #Ⓝ   	Copy                                	 
  'c'  	= 'yank'                            	# 🗐▋ Copy main sel                      	「  c」  	「change_selection」 <i class='fa fa-copy'></i>
  'C-c'	= 'yank_main_selection_to_clipboard'	# 📋▋ Copy main sel into sys clipboard   	「☰␠,⇧y」	「toggle_comments」 <i class='fa fa-clipboard'></i>
  'C'  	= 'yank_main_selection_to_clipboard'	# 📋▋ Copy main sel into sys clipboard   	「⇧␠,y」 	「copy_selection_on_next_line」 <i class='fa fa-clipboard'></i>
  'A-c'	= 'yank_joined_to_clipboard'        	# ∀▋ Copy all sels to clipboard (joined)	「☰␠ y」 	「change_selection_noyank」 ⨝📋 ∀❚ ∀▋ <i class='fa fa-clipboard'></i>

  #Ⓝ Shell 	                 	 
    # '|'  	= 'shell_pipe'   	# |   Pipe each sel through shell command, replacing with output    	≝「⇧ \」	「shell_pipe」
    "A-\\" 	= 'shell_pipe_to'	# |ᵡ Pipe each sel into    shell command, ignoring       output     	「⇧⎇\」 	「」
    # 'A-|'	= 'shell_pipe_to'	#   Pipe each sel into    shell command, ignoring       output	≝「⇧⎇\」	「shell_pipe_to」

  #Ⓝ Move ——————————————————————————————————————————————————————————————————————
    #    	Cursor@Home
    'j'  	= 'move_line_down'      	# ▼                             	「h/◀」   	「move_line_down」
    'k'  	= 'move_line_up'        	# ▲                             	「j/▼」   	「move_line_up」
    'l'  	= 'move_char_left'      	# ◀                             	「k/▲」   	「move_char_right」
    ';'  	= 'move_char_right'     	# ▶                             	「l/▶」   	「collapse_selection」
    'm'  	= 'half_page_down'      	# ⤈ Move half page down         	   「 ⎈d」	「☰🧩」
    ','  	= 'half_page_up'        	# ⤉ Move half page up           	   「 ⎈u」	「keep_primary_selection」
    'C-j'	= 'page_down'           	# ⇟ Move      page down         	   「 ⎈d」	「」
    'C-k'	= 'page_up'             	# ⇞ Move      page up           	   「 ⎈u」	「」
    'a'  	= 'extend_to_line_start'	# ⭰▋ Move    line start + select	「ⓈHome」 	「append_mode」  # goto_line_start
    'A'  	= 'extend_to_line_end'  	# ⭲▋ Move    line end   + select	「ⓈEnd」  	「insert_at_line_end」  # goto_line_end


    #Ⓝ          	Compat with non-modal editors
    'C-home'    	= 'goto_file_start'     	# ⇱ line number `<n>` else file start	「  g」	「」
    'C-end'     	= 'goto_last_line'      	# ⇲ file end                         	「  e」	「」
    'C-S-tab'   	= 'goto_previous_buffer'	# ⎗                                  	「⇧ⓖp」「」  !!!fail
    'C-tab'     	= 'goto_next_buffer'    	# ⎘                                  	「ⓖn」「」  !!!fail
    'C-pageup'  	= 'goto_previous_buffer'	# ⎗                                  	「   」	「」
    'C-pagedown'	= 'goto_next_buffer'    	# ⎘                                  	「   」	「」
    'A-pageup'  	= 'jump_backward'       	# ⎗̡                                 	「   」	「」
    'A-pagedown'	= 'jump_forward'        	# ⎘̡                                 	「   」	「」
    # 'C-j'     	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist   	「 ⎈o」	「」
    # 'C-;'     	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist   	「 ⎈i」	「」 !!!fail

    '1'  	= 'goto_previous_buffer'	# ⎗ !!!missing ∀*                 	「ⓖp」 	「<1>」
    '2'  	= 'goto_next_buffer'    	# ⎘ !!!missing ∀*                 	「ⓖn」 	「<2>」
    'A-1'	= 'goto_previous_buffer'	# ⎗                               	「ⓖp」 	「」
    'A-2'	= 'goto_next_buffer'    	# ⎘                               	「ⓖn」 	「」
    '3'  	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist	「 ⎈o」	「<3>」 !!!missing ∀*
    '4'  	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist	「 ⎈i」	「<4>」 !!!missing ∀*
    'A-3'	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist	「 ⎈o」	「」
    'A-4'	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist	「 ⎈i」	「」

    #Ⓝ       	word
    'd'      	= 'move_prev_word_start'       	# 🢔ω  Move this word start                           	「  b」	「delete_selection」
    'f'      	= 'move_next_word_end'         	# ω🢖  Move this word end                             	「  e」	「find_next_char」
    'A-d'    	= 'move_prev_word_end'         	# ⤝ω Move prev word end   (this start + ␠)           	ⓘ「⎇b」	「delete_selection_noyank」
    'A-f'    	= 'move_next_word_start'       	# ω⤞ Move next word start (this end   + ␠)           	「  w」	「」
    'D'      	= 'move_prev_long_word_start'  	# 🢔W  Move this WORD start                           	「⇧ b」	「」
    'F'      	= 'move_next_long_word_end'    	# W🢖  Move this WORD end                             	「⇧ e」	「find_prev_char」
    # 'f'    	= 'move_next_word_start'       	# ω⤞ Move next word start (this end + ␠)             	「  w」	「find_next_char」
    'A-D'    	= 'move_prev_long_word_start'  	# 🢔W  Move this WORD start                           	「⇧ b」	「」
    'A-F'    	= 'move_next_long_word_start'  	# W⤞ Move next WORD end   (this end + ␠)             	「⇧ w」	「find_prev_char」
    'C-d'    	= ['move_prev_long_word_start',	# ⤝W  Move prev WORD end                             	「⇧ b」	「half_page_down」
             	   'extend_prev_word_start',   	#                                                    	 
             	   'extend_next_word_start']   	# !!!move_prev_long_word_end missing                 	 
    'C-f'    	= 'move_next_long_word_start'  	# W⤞ Move next WORD end   (this end + ␠)             	「⇧ w」	「page_down」
    # 'C-f'  	= ['collapse_selection',       	# W⤞ Move next WORD end   (this end + ␠)             	「⇧ w」	「page_down」
    #        	   'extend_next_long_word_end']	#                                                    	 
    # 'G'    	= 'goto_line'                  	# ⮊⎯ go to line # <n> (set <n> in advance), use Ⓒ<n>⏎	「⇧ g」   	「goto_line」
    'C-left' 	= 'move_prev_long_word_start'  	# 🢔W  Move this WORD start                           	   「⇧ b」	「」
    'C-right'	= 'move_next_long_word_start'  	# W⤞ Move next WORD end   (this end + ␠)             	「⇧ w」   	「」
    'A-left' 	= 'move_prev_word_end'         	# ⤝ω Move prev word end   (this start + ␠)           	ⓘ「⎇◀」   	「」
    'A-right'	= 'move_next_word_start'       	# ω⤞ Move next word start (this end   + ␠)           	ⓘ「⎇▶」   	「」

    #Ⓝ      	Line
    ':'     	= 'command_mode'   	# Ⓒ Enter command mode         	≝「⇧ ;」	「command_mode」
    # 'Home'	= 'goto_line_start'	# Move to the start of the line	「Home」	「goto_line_start」
    # 'End' 	= 'goto_line_end'  	# Move to the end of the line  	「End」 	「goto_line_end」

    #Ⓝ   	Block
    # '>'	= 'goto_prev_paragraph'	# 🢔¶ Move paragraph start	「[p  」	「indent」
    # '?'	= 'goto_next_paragraph'	# ¶🢖 Move paragraph end  	「]p  」	「rsearch」
    # !!! remove after .Repeat can be rebound
    '{'	= 'goto_prev_paragraph'	# 🢔¶ Move paragraph start           	「[p  」  	「」
    '}'	= 'goto_next_paragraph'	# ¶🢖 Move paragraph end             	「]p  」  	「」
    '>'	= 'search_prev'        	# 🢔◎ ◎͔ Select previous search match	   「⇧ n」	「indent」
    '?'	= 'search_next'        	# ◎🢖 ◎͕ Select next     search match	   「  n」	「rsearch」

    'r'	= 'repeat_last_motion'	# ∞ Repeat last motion (f/t/m)	「 ⎇.」	「replace」

    #Ⓝ   	Find
    'w'  	= 'find_next_char'    	# 🔎   Find       next     char           	「  f」   	「move_next_word_start」     	<i class='mss mss-Search-3'></i>
    'W'  	= 'find_prev_char'    	# 🔍   Find       previous char           	「⇧ f」   	「move_next_long_word_start」	<i class='fa fa-search'></i>
    'A-w'	= 'find_till_char'    	# 🔎₋₁ Find 'till next     char           	「  t」   	「」                         	<i class='mss mss-Search-3'></i>₋
    'A-W'	= 'till_prev_char'    	# 🔍₋₁ Find 'till previous char           	「⇧ t」   	「」                         	<i class='fa fa-search'></i>₋
    'S'  	= 'rsearch'           	# 🔍𝖗 for previous regex pattern          	「⇧ /」   	「split_selection」
    's'  	= 'search'            	# 🔎𝖗 for          regex pattern          	「⇧  /」  	「select_regex」
    '.'  	= 'search_prev'       	# 🢔◎ ◎͔ Select previous search match     	   「⇧ n」	「repeat_last_change!!!」   !!! blocked by .Repeat
    '/'  	= 'search_next'       	# ◎🢖 ◎͕ Select next     search match     	   「  n」	「search」
    # 'N'	= 'search_prev'       	# 🢔◎ ◎͔ Select previous search match     	  「⇧ n」 	「search_prev」
    # 'n'	= 'search_next'       	# ◎🢖 ◎͕ Select next     search match     	   「  n」	「search_next」
    '8'  	= 'search_selection'  	# 𝖗🢔▋ Use sel as the search pattern      	   「⇧ 8」	「<8>」   !!! blocked by ∀*
    # '*'	= 'search_selection'  	# 𝖗🢔▋ Use sel as the search pattern	  「⇧ 8」 	「search_selection」
    '*'  	= ['select_mode'      	#
      ,  	'move_prev_word_start'	#
      ,  	'move_next_word_end'  	#
      ,  	'search_selection'    	#
      ,  	'extend_search_next'  	#
      ,  	'exit_select_mode'    	#
      ]  	                      	# = find_under_expand


  #Ⓝ Select ——————————————————————————————————————————————————————————————————————
    'e'	= 'select_mode'	# Ⓢ ✠ Enter select (extend) mode (←↑↓→ in Web) alt「  v」	「move_next_word_end」 <i class='fa fa-arrows'></i>

    #Ⓝ       	Compat with non-modal editors    	 
    'C-a'    	= ['save_selection','select_all']	# 🖈∀▋                                             	「⇧ 5」  「increment」
    'A-down' 	= 'copy_selection_on_next_line'  	# 🠷 Copy sel onto the next     line (add cursor ↓)	「⇧ c」  「」
    'A-up'   	= 'copy_selection_on_prev_line'  	# 🠵 Copy sel onto the previous line (add cursor ↑)	「⇧⎇c」 	「」
    'S-left' 	= 'extend_char_left'             	#                                                 	「Ⓢh/◀」	「」
    'S-down' 	= 'extend_line_down'             	#                                                 	「Ⓢj/▼」	「」
    'S-up'   	= 'extend_line_up'               	#                                                 	「Ⓢk/▲」	「」
    'S-right'	= 'extend_char_right'            	#                                                 	「Ⓢl/▶」	「」


    'A-g'	= 'jumplist_picker'	# ☰🖈 List jumplist          	「☰␠ j」	「」
    'C-g'	= 'save_selection' 	# 🖈 Save cur sel to jumplist	「  ⎈s」	「」
    'G'  	= 'save_selection' 	# 🖈 Save cur sel to jumplist	「  ⎈s」	「goto_line」

    'J'  	= 'extend_line_below'      	# ⮒ Select current line/extend to next    if selected	「  x」 	「join_selections」
    'A-r'	= 'extend_line'            	# ⭿ Select current line/extend to another if selected	「  」  	「」
    'E'  	= 'extend_to_line_bounds'  	# ━ Extend sel to line bounds (line-wise sel)⎯       	「⇧  x」	「move_next_long_word_end」
    'A-e'	= ['select_mode'           	# ω₌ "Extend" sel to same word                       	「   」 	「」
      ,  	 'move_next_word_end'      	# 1st since word_start command might select previous word
      ,  	 'move_prev_word_start'    	#
      ,  	 'search_selection'        	#
      ,  	 'make_search_word_bounded'	#
      ,  	 'extend_search_next'      	#
      ,  	 'normal_mode'             	#
      ]  	                           	# = Sublime's find_under_expand
    # '' 	= 'expand_selection'       	# Expand sel to parent syntax node (TS)	「   」	「expand_selection」  TODO: pick a key
    # '5'	= 'select_paragraph'       	# ¶▋ Select this paragraph             	「   」	「<5>」  !!!missing ∀* !!!missing command
    # '%'	= 'select_all'             	# ∀▋ Select entire file                	「⇧ 5」	「select_all」

    'A-j'	= 'copy_selection_on_next_line'	# 🠷 Copy sel onto the next     line (add cursor below)  	「⇧ c」	「」
    'A-k'	= 'copy_selection_on_prev_line'	# 🠵 Copy sel onto the previous line (add cursor above)  	「⇧⎇c」	「」
    'A-l'	= 'select_prev_sibling'        	# 🢔⸙ Select previous sibling node in syntax tree 🌳TS    	「⎇ p」	「」 🌳🌲🌴𐇲🎄⸙🌿
    'A-;'	= 'select_next_sibling'        	# ⸙🢖 Select next     sibling node in syntax tree 🌳TS    	「⎇ m」	「flip_selections」
    'M'  	= 'shrink_selection'           	# ⸙− Shrink syntax tree object sel          🌳TS ⸙₋	「⎇ i」	「」
    '<'  	= 'expand_selection'           	# ⸙₊ Expand sel to parent syntax node       🌳TS ⸙₊	「⎇ o」	「」
    'A-s'	= 'select_regex'               	# 𝖗▋ Select all regex matches inside sels               	「  s」	「split_selection_on_newline」
    'N'  	= 'split_selection'            	# ䷖𝖗 on regex matches                                   	「⇧ s」	「search_prev」
    'A-n'	= 'split_selection_on_newline' 	# ䷖␤ (﹨␤)                                               	「 ⎇s」	「」

    "'"   	= 'collapse_selection'        	# 🢖🢔 Collapse sel onto a single cursor            	「  ;」 	「」
    "A-'" 	= 'flip_selections'           	# ⮀ Flip sel cursor and anchor                    	「 ⎇;」 	「」
    'A-a' 	= 'flip_selections'           	# ⮀ Flip sel cursor and anchor                    	⇧[ ⎇;」	「」
    'A-A' 	= 'flip_selections'           	# ⮀ Flip sel cursor and anchor                    	⇧[ ⎇;」	「」
    'A-p' 	= 'ensure_selections_forward' 	# ↠ Flip sel forward: cursor after anchor         	「⇧⎇;」 	「」
    #'A-:'	= 'ensure_selections_forward' 	# ↠ Flip sel forward: cursor after anchor         	「⇧⎇;」 	「」
    #'A-l'	= 'rotate_selections_backward'	# ⟲ Rotate main sel backward (← with many columns)	「⇧ 9」 	「」
    #'A-;'	= 'rotate_selections_forward' 	# ⟳ Rotate main sel forward  (→ with many columns)	「⇧ 0」 	「flip_selections」
    'A-m' 	= 'rotate_selections_forward' 	# ⟳ Rotate main sel forward  (↓ with many lines)  	「⇧ 0」 	「」
    'A-,' 	= 'rotate_selections_backward'	# ⟲ Rotate main sel backward (↑ with many lines)  	「⇧ 9」 	「remove_primary_selection」
    'A-u' 	= 'remove_primary_selection'  	# ᵡ         the primary sel                       	「 ⎇,」 	「earlier」
    'A-i' 	= 'keep_primary_selection'    	# ᵡ∀ all but the primary sel (keep only)          	「  ,」 	「」
    'A-U' 	= 'no_op'                     	# ᵡᵡ undo remove sel                              	「⇧ ⎇,」	「earlier」 !!!missing
    'K'   	= 'keep_selections'           	# ᵏ𝖗 sels not matching the regex (keep)           	「⇧ k」 	「keep_selections」
    'L'   	= 'remove_selections'         	# ᵡ𝖗 sels     matching the regex                  	「⇧⎇k」 	「」
    'A-Z' 	=['keep_primary_selection'    	# 🢗🢔 collapse everything to a single cursor       	「  」  	「」		 
      ,   	  'collapse_selection']       	                                                  	      	#

    'minus'	= 'trim_selections'             	# ✁Trim whitespace from the sel                    	「⇧ -」 	「」
    '_'    	= 'merge_consecutive_selections'	# ⛙ Merge consecutive sels ⨝                       	「⇧⎇ -」	「trim_selections」
    # '+'  	= 'dupe_selections'             	# 🗐Duplicate sel (currently nonfunctional/disabled)	「⇧ =」 	「dupe_selections」


  #Ⓝ Change ——————————————————————————————————————————————————————————————————————
    #            	Compat with non-modal editors
    'A-del'      	= 'delete_word_forward'          	# ⌦ω ᵡ word →                     	 ⓘ「  ⎇d」	「」
    'C-del'      	= ['extend_next_long_word_end',  	# ⌦W                              	「   」   	「」
                 	   'delete_selection']           	# ᵡ Word →                        	 
    'A-backspace'	= 'delete_word_backward'         	# ⌫ω ᵡ word ←                     	ⓘ「 ⎈w」	「」
    'C-backspace'	= ['extend_prev_long_word_start',	# ⌫W                              	「   」 	「」
                 	   'delete_selection']           	# ᵡ Word ←                        	 
    # 'del'      	= 'delete_selection'             	# ᵡ▋                              	「  d」	「」
    'S-del'      	= 'delete_selection_noyank'      	# 🕱▋                              	「 ⎇d」	「」
    'S-ret'      	= ['open_below','normal_mode']   	# ⭣␤ Open new line below sel	「  o」	「」
    'ret'        	= ['open_above','normal_mode']   	# ⭡␤ Open new line above sel	「⇧ o」	「」
    'C-ret'      	= ':reflow'                      	# ↪ Hard-wrap selected lines ䷖↪   	「   」	「」

    # '.'      	= 'N/A'                              	# ∞ Repeat last change            	「.」     	「n/a」
    '6'        	= 'delete_char_forward'              	# ⌦ !!!missing ∀*                 	「 ⌦」    	「<5>」
    'x'        	= 'delete_selection'                 	# ᵡ▋                              	「  d」   	「extend_line_below」
    'A-x'      	= 'delete_selection_noyank'          	# 🕱▋ (...without copying)         	「 ⎇d」   	「」
    # 'A-c'    	= 'change_selection'                 	# Δ                               	「  c」   	「change_selection_noyank」
    'h'        	= 'delete_char_backward'             	# ⌫c ᵡ char ←                     	「⌫」     	「move_char_left」
    'H'        	= 'delete_char_forward'              	# ⌦c ᵡ char →                     	「⇧⌦」    	「」
    'A-h'      	= 'delete_word_backward'             	# ⌫ω ᵡ word ←                     	ⓘ「 ⎈w」  	「」
    'A-H'      	= 'delete_word_forward'              	# ⌦ω ᵡ word →                     	 ⓘ「  ⎇d」	「」
    'C-h'      	= ['move_prev_long_word_start',      	# ⌫W                              	「   」   	「」
               	   'delete_selection']               	# ᵡ Word ←                        	 
    'C-x'      	= ['yank_main_selection_to_clipboard'	                                  	,
               	   'delete_selection']               	#                                 	      	×📋 cut to clipboard <i class='fa fa-clipboard'></i>	「   」	「decrement」
    'backspace'	= 'delete_char_backward'             	# ⌫                               	「I.bs」	「」
    'X'        	= 'join_selections'                  	# ᵡ␤ ⨝ Join lines inside sel	「⇧ j」 	「extend_to_line_bounds」
    'A-X'      	= 'join_selections_space'            	# ᵡ␤,␠ Join lines,select space    	「⇧⎇ j」	「」

    # 'backspace'	= 'delete_char_backward'	# ⌫c ᵡ char ←	「backspace」	「delete_char_backward」
    # 'C-h'      	= 'delete_char_backward'	# ⌫c ᵡ char ←	「C-h」      	「delete_char_backward」
    'del'        	= 'delete_char_forward' 	# ⌦c ᵡ char →	「delete」   	「delete_char_forward」
    # 'C-d'      	= 'delete_char_forward' 	# ⌦c ᵡ char →	「C-d」      	「delete_char_forward」

    't'  	= 'replace'                          	# 🗘c  Replace with a character               	   「  r」	「find_till_char」
    'T'  	= 'replace_with_yanked'              	# 🗘📋 Replace with copied text                	「⇧ r」   	「till_prev_char」  <i class='fa fa-copy'></i>
    'A-t'	= 'replace_selections_with_clipboard'	# 🗘📋 Replace sels by clipboard contents	「☰␠ ⇧r」 	「」 <i class='fa fa-clipboard'></i>

    #'`' 	= ''                   	# ☰𝔸𝕒 Case conversion mode	「  」  	「switch_to_lowercase」 !!!missing aliases
    '⎈'  	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)          	「 ⎇`」 	「」
    'B'  	= 'switch_to_lowercase'	# 𝔸𝕒 (selection)          	「⇧  `」	「」
    'C-b'	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)          	「 ⎇`」 	「」

    'A-.'	= 'unindent'	# ⇚ (selection)	「⇧,」	「repeat_last_motion」
    'A-/'	= 'indent'  	# ⇛ (selection)	「⇧.」	「」

    'q'	= 'record_macro'   	# ⏺ Start/stop  macro recording to the selected register  	≝「  q」	「record_macro」
    'Q'	= 'replay_macro'   	# ▶  Play back a recorded macro from the selected register	≝「⇧ q」 replay_macro]
    '"'	= 'select_register'	# ®  Select a register to copy/paste from                 	≝「  '<reg>」	「select_register」

    # 'b'	= 'repeat_last_change'   	# ∞ Repeat last change        	「  .」 	「move_prev_word_start」 !!!missing
    'i'  	= 'insert_mode'          	# ⁁⤸ Insert before sel        	≝「  i」	「insert_mode」
    'o'  	= 'append_mode'          	# ⤹⎀ Insert after sel (append)	「  a」 	「open_above」
    'I'  	= 'open_above'           	# ⭡␤ Open new line above sel  	「⇧ o」 	「insert_at_line_start」
    'O'  	= 'open_below'           	# ⭣␤ Open new line below sel  	「  o」 	「insert_at_line_end」
    'u'  	= 'undo'                 	# ⎌ Undo change               	「  u」 	「undo mode」
    'y'  	= 'redo'                 	# ↷ Redo change               	「⇧ u」 	「yank」
    'U'  	= 'earlier'              	# 🕘 Move backward in history  	「⇧ ⎇u」	「redo」   <i class='fa fa-history'></i>
    'Y'  	= 'later'                	# 🕒 Move forward  in history  	「⇧⎇u」 	「」 ⏱ <i class='fa fa-clock-o'></i>
    'C-y'	= 'redo'                 	# ↷ Redo change               	「⇧ u」 	「」
    'v'  	= 'paste_after'          	# 📋⤹ Paste after sel          	「  p」 	「select_mode」 ⤹<i class='fa fa-copy'></i>
    'C-v'	= 'paste_clipboard_after'	# 📋⤹ Paste after sel          	「☰␠ p」	「」  <i class='fa fa-copy'></i>⤹
    'V'  	= 'paste_before'         	# ⤸📋 Paste before sel         	「⇧ p」 	「」  <i class='fa fa-clipboard'></i>⤹
    'C-z'	= 'undo'                 	# ⎌ Undo change               	「  u」 	「」
    'C-Z'	= 'redo'                 	# ↷ Redo change               	「⇧ u」 	「」!!!fail
    #'I' 	= 'insert_at_line_start' 	# ⁁⭰ Insert at line start     	≝「⇧ i」	「insert_at_line_start」
    #'A' 	= 'insert_at_line_end'   	# ⭲⎀ Insert at line end       	≝「⇧ a」	「insert_at_line_end」

    'A-I'	=["split_selection_on_newline"	# ⭰䷖ Line: split & insert @ start	「」	「」
     ,   	  "insert_at_line_start"]     	#                                	  	 
    'A-O'	=["split_selection_on_newline"	# ䷖⭲ Line: split & insert @ end  	「」	「」
     ,   	  "insert_at_line_end"]       	#                                	  	 

  #Ⓝ Select manipulation ————————————————————————————————————————————————————————————————————
    '('	= 'rotate_selection_contents_backward'	# ⟲ Rotate sel contents backward      	「⇧⎇9」 	「rotate_selections_backward」
    ')'	= 'rotate_selection_contents_forward' 	# ⟳ Rotate sel contents forward       	「⇧⎇0」 	「rotate_selections_forward」
    '7'	= 'align_selections'                  	# ⥂ Align sel in columns !!!missing ∀*	「⇧ 7」 	「<7>」
    '&'	= 'align_selections'                  	# ⥂ Align sel in columns              	≝「⇧ 7」	「align_selections」
    '='	= 'format_selections'                 	# ℱ Format sel (!!!missing) (LSP)     	≝「  =」	「format_selections」

  #Ⓝ   	Misc                        	 
  'z'  	= 'toggle_comments'         	# un-/comment sels                           	「 ⎈c」	「☰👁」
  'C-/'	= 'toggle_comments'         	# un-/comment sels                           	「 ⎈c」	「」 !!!fail
  'C-m'	= 'decrement'               	# ⊖ o̠ Decrement object (number) under cursor	「 ⎈x」	「」 <span class='cd'>o&#800;</span>
  'C-,'	= 'increment'               	# ⊕ o̟ Increment object (number) under cursor	「 ⎈a」	「」 <span class='cd'>o&#799;</span> !!!fails
  '\'  	= ':toggle soft-wrap.enable'	# ↪   toggle soft wrap                       	「」   	「」

  '$'	= 'shell_keep_pipe'	# $ᵏ| Pipe each sel into shell command, keep sels where command returned 0	≝「⇧ 4」	「shell_keep_pipe」

  #Ⓝ space mode
  # "'"	= 'last_picker'	# 「collapse_selection」 Open last fuzzy picker

  #Ⓝ Shell	#                      	#
  '!'     	= 'shell_insert_output'	# 🢔$ Run shell cmd, inserting output before each sel	「⇧  1」	≝「shell_insert_output」
  '@'     	= 'shell_append_output'	# $🢖 Run shell cmd, appending output after  each sel	「⇧⎇1」 	「」
  'A-!'   	= 'shell_append_output'	# $🢖 Run shell cmd, appending output after  each sel	「⇧⎇1」 	≝「shell_append_output」

  ###Ⓝ ☰Minor modes  Accessible from Normal mode, typically switch back to Normal mode after a command

  #◊ includeTemplate (joinPath .cfg "nHelp.toml.tmpl") (dict "m" "normal" "i" "Ⓝ ☰?" "k" "F1" "cfg" .cfg) ◊

  #◊ includeTemplate (joinPath .cfg "nCaseConv.toml.tmpl") (dict "m" "normal" "i" "Ⓝ ☰𝔸𝕒" "k" "`" "cfg" .cfg) ◊

  #◊ includeTemplate (joinPath .cfg "nView.toml.tmpl") (dict "m" "normal" "i" "Ⓝ ☰👁" "k" "p" "cfg" .cfg) ◊
    # 'p'	= 'view_mode_sticky'	# ☰👁ₛ 'sticky', persistent	「   」	「」
  #◊ includeTemplate (joinPath .cfg "nView.toml.tmpl") (dict "m" "normal" "i" "Ⓝ 👁ₛ" "k" "P" "cfg" .cfg) ◊
  #◊ includeTemplate (joinPath .cfg "nView.toml.tmpl") (dict "m" "normal" "i" "Ⓝ 👁ₛ" "k" "Z" "cfg" .cfg) ◊

  #◊ includeTemplate (joinPath .cfg "nGoTo.toml.tmpl") (dict "m" "normal" "i" "Ⓝ ⓖ☰⮊" "k" "g" "cfg" .cfg) ◊

  #◊ includeTemplate (joinPath .cfg "nMatch.toml.tmpl") (dict "m" "normal" "i" "Ⓝ ☰🧩" "k" "n" "cfg" .cfg) ◊

  #◊ includeTemplate (joinPath .cfg "nWindow.toml.tmpl") (dict "m" "normal" "i" "Ⓝ ☰🗔" "k" "C-w" "ksp" "" "cfg" .cfg) ◊

  #◊ includeTemplate (joinPath .cfg "nSpace.toml.tmpl") (dict "m" "normal" "i" "Ⓝ" "k" "space" "cfg" .cfg) ◊


  #◊ includeTemplate (joinPath .cfg "nUnimpaired.toml.tmpl") (dict "m" "normal" "i" "Ⓝ" "k1" "[" "k0" "]" "cfg" .cfg) ◊



  # [keys.prompt] #Ⓝ ⧁ Prompt
  #   # !!! Remapping currently not supported
  #   'A-b'	= "no_op"	#	「   」	「move_prev_word_end」
  #   'C-b'	= "no_op"	#	「   」	「Backward a char」
  #   'C-f'	= "no_op"	#	「   」	「Forward a char」
  #   'C-a'	= "no_op"	#	「   」	「Move prompt start」
  #   'C-e'	= "no_op"	#	「   」	「Move prompt end」
  #   'C-w'	= "no_op"	#	「   」	「Delete previous word」
  #   'A-d'	= "no_op"	#	「   」	「Delete next word」
  #   'C-h'	= "no_op"	#	「   」	「Delete previous char」
  #   'C-d'	= "no_op"	#	「   」	「Delete next char」
  #   'C-s'	= "no_op"	#	「   」	「Insert a word」
  #   'C-p'	= "no_op"	#	「   」	「Select previous history」
  #   'C-n'	= "no_op"	#	「   」	「Select next history」

  #   'Escape'	= "Close prompt" 	# Close prompt 	≝「$!」	「Close prompt」
  #   'C-c'   	= "Close prompt" 	# Close prompt 	≝「⎈ c」	「Close prompt]
  #   'Enter' 	= "Open selected"	# Open selected	≝「$!」	「Open selected」

  #   #⧁ Move ——————————————————————————————————————————————————————————————————————
  #   #        	Char                         	                                            	 
  #   'A-l'    	= 'move_prev_char'           	# 🢔c Move   prev char                       	「⎈ b」	「」
  #   'A-;'    	= 'move_next_char'           	# c🢖 Move   next char                       	「⎈ f」	「」
  #   #        	Word                         	                                            	 
  #   'A-d'    	= 'move_prev_word_start'     	# 🢔ω Move   this word start                 	「⎇ d」 	「delete next word」
  #   'A-f'    	= 'move_next_word_end'       	# ω🢖 Move   this word end                   	≝「⎇ f」	「Forward a word」
  #   'A-D'    	= 'move_prev_long_word_start'	# 🢔W Move   this WORD start                 	「⇧ b」 	「」
  #   'A-F'    	= 'move_next_long_word_start'	# W⤞ Move   next WORD end   (this end + ␠)  	「⇧ w」 	「」
  #   'C-left' 	= 'move_prev_long_word_start'	# 🢔W Move   this WORD start                 	「⇧ b」 	「」
  #   'C-right'	= 'move_next_long_word_start'	# W⤞ Move   next WORD end   (this end + ␠)  	「⇧ w」 	「」
  #   'Left'   	= "move_prev_char"           	# 🢔c Move   prev char                       	「  ◀」 	「」
  #   'Right'  	= "move_next_char"           	# c🢖 Move   next char                       	「  ▶」 	「」
  #   'A-left' 	= 'move_prev_word_end'       	# ⤝ω Move   prev word end   (this start + ␠)	「⎇◀」  	「」
  #   'A-right'	= 'move_next_word_start'     	# ω⤞ Move   next word start (this end   + ␠)	「⎇▶」  	「」
  #   #        	Line                         	                                            	 
  #   'A-a'    	= 'move_to_prompt_start'     	# ⭰▋ Move   line start                      	「⭰」 	「Move prompt start」
  #   'A-A'    	= 'move_to_prompt_end'       	# ⭲▋ Move   line end                        	「⭲」 	「Move prompt end」
  #   'End'    	= "Move prompt end"          	# ⭰▋ Move   line start                      	≝「⭰」	「Move prompt start」
  #   'Home'   	= "Move prompt start"        	# ⭲▋ Move   line end                        	≝「⭲」	「Move prompt end」

  #   #⧁ Change ——————————————————————————————————————————————————————————————————————
  #   'A-x'      	= 'delete_selection'       	# ᵡ▋                     	「  」	「」
  #   #          	Char                       	                         	 
  #   'A-h'      	= 'delete_char_backward'   	# ⌫c ᵡ char ←            	≝「⎈ h」	「delete_char_backward」
  #   'A-6'      	= 'delete_char_forward'    	# ⌦c ᵡ char →            	≝「⎈ d」	「delete_char_forward」
  #   'backspace'	= 'delete_char_backward'   	# ⌫c ᵡ char ←            	≝「⌫」  	「delete_char_backward」
  #   'del'      	= 'delete_char_forward'    	# ⌦c ᵡ char →            	≝「⌦」  	「delete_char_forward」
  #   #          	Word                       	                         	 
  #   #          	Line                       	                         	 
  #   'C-u'      	= "Delete to start of line"	# Delete to start of line	「   」	「」
  #   'C-k'      	= "Delete to end of line"  	# Delete to end of line  	「   」	「」

  #   'C-v'	= 'paste_before'	# ⤸📋 Paste before sel 「⎈ s」	「」 <i class='fa fa-clipboard'></i>⤹

  # [keys              	.prompt]                	#Ⓝ ⧁ Prompt !!! Remapping no supported
    # 'C-n'            	= 'no_op'               	#                            	「」    	「History next」
    # 'C-p'            	= 'no_op'               	#                            	「」    	「History previous」
    # 'C-b'            	= 'no_op'               	#                            	「」    	「move char backward」
    # 'C-f'            	= 'no_op'               	#                            	「」    	「move char forward」
    # 'C-a'            	= 'no_op'               	#                            	「」    	「move prompt start」
    # 'C-e'            	= 'no_op'               	#                            	「」    	「move prompt end」
    # 'C-w'            	= 'no_op'               	#                            	「」    	「del word left」
    # 'A-d'            	= 'no_op'               	#                            	「」    	「del word right」
    # 'C-h'            	= 'no_op'               	#                            	「」    	「del char left」
    # 'C-d'            	= 'no_op'               	#                            	「」    	「del char right」
    # 'C-u'            	= 'no_op'               	#                            	「」    	「del line start」
    # 'A-a'            	= 'extend_to_line_start'	# ⭰▋ Move line start + select	「   」 	「」
    # 'A-A'            	= 'extend_to_line_end'  	# ⭲▋ Move line end   + select	「   」 	「」
    # 'A-j'            	= 'N/A'                 	# 📜🢖 History next            	「⎈ n」 	「」
    # 'A-k'            	= 'N/A'                 	# 🢔📜 History previous        	「⎈ p」 	「」
    # 'Down'           	= 'N/A'                 	# 📜🢖 History next            	≝「 ▼」 	「History next」
    # 'Up'             	= 'N/A'                 	# 🢔📜 History previous        	≝「 ▲」 	「History previous」
    # 'Tab'            	= 'N/A'                 	# ⎁🢖 Completion next         	≝「 ⭾」 	「Completion next」
    # 'BackTab'        	= 'N/A'                 	# 🢔⎁ Completion previous     	≝「⇧$!」	「Completion previous」
    # 'Escape'         	= 'N/A'                 	# ⎋⧁ Close prompt            	≝「⎋」  	「Close prompt」
    # 'Enter'          	= 'N/A'                 	# Open selected              	≝「⏎」  	「Open selected」
    # 'C-c'            	= 'N/A'                 	# ⎋⧁ Close prompt            	≝「⎈ c」	「Close prompt」
    # 'A-b'            	= 'N/A'                 	# 🢔ω word backward           	≝「⎇b」 	「move word backward」
    # 'A-f'            	= 'N/A'                 	# ω🢖 word forward            	≝「⎇f」 	「move word forward」
    # 'C-left'         	= 'N/A'                 	# 🢔ω word backward           	≝「⎈◀」 	「move word backward」
    # 'C-Right'        	= 'N/A'                 	# ω🢖 word forward            	≝「⎈▶」 	「move word forward」
    # 'Left'           	= 'N/A'                 	# ◀ Backward a char          	≝「◀」  	「move char backward」
    # 'Right'          	= 'N/A'                 	# ▶ Forward a char           	≝「▶」  	「move char forward」
    # 'Home'           	= 'N/A'                 	# ⭰⧁ prompt start            	≝「⇤」  	「move prompt start」
    # 'End'            	= 'N/A'                 	# ⧁⭲ prompt end              	≝「⇥」  	「move prompt end」
    # 'Backspace'      	= 'N/A'                 	# ⌫ ᵡ char                   	≝「␈」  	「del char left」
    # 'Shift-Backspace'	= 'N/A'                 	# ⌫ ᵡ char                   	≝「⇧␈」 	「del char left」
    # 'C-l'            	= 'N/A'                 	# ⌫ ᵡ char                   	「⎈h」  	「」
    # 'C-;'            	= 'N/A'                 	# ⌦ ᵡ char                   	「⎈d」  	「」
    # 'Delete'         	= 'N/A'                 	# ⌦ ᵡ char                   	≝「␡」  	「del char right」
    # 'C-Backspace'    	= 'N/A'                 	# ⌫ω ᵡ word                  	≝「⎈␈」 	「del word left」
    # 'A-h'            	= 'N/A'                 	# ⌫ω ᵡ word                  	≝「⎈w」 	「del word left」
    # 'A-Backspace'    	= 'N/A'                 	# ⌫ω ᵡ word                  	≝「⎇␈」 	「del word left」
    # 'A-H'            	= 'N/A'                 	# ⌦ω ᵡ word                  	「⎇d」  	「」
    # 'A-del'          	= 'N/A'                 	# ⌦ω ᵡ word                  	≝「⎇␡」 	「del word right」
    # 'C-del'          	= 'N/A'                 	# ⌦ω ᵡ word                  	≝「⎈␡」 	「del word right」
    # 'C-j'            	= 'N/A'                 	# ⌫━⭰ ᵡ line start           	≝「⎈u」 	「del line start」
    # 'C-k'            	= 'N/A'                 	# ⌦━⭲ ᵡ line end             	≝「⎈d」 	「del line end」
    # 'C-s'            	= 'N/A'                 	# Insert a word under doc cursor, may be changed to C-r C-w later
    # 'C-r'            	= 'N/A'                 	# Insert the content of the register selected by following input char


  # [keys        	.picker] 	#Ⓝ 🅟 Picker !!! Remapping no supported
    # 'C-k'      	= "no_op"	#                            	「   」 	「Previous entry」
    # 'C-p'      	= "no_op"	#                            	「   」 	「Previous entry」
    # 'C-j'      	= "no_op"	#                            	「   」 	「Next entry」
    # 'C-n'      	= "no_op"	#                            	「   」 	「Next entry」
    # 'C-s'      	= "no_op"	#                            	「   」 	「Open horizontally」
    # 'C-v'      	= "no_op"	#                            	「   」 	「Open vertically」
    # 'Escape'   	= "close"	# Close picker               	≝「$!」 	「Close picker」
    # 'C-c'      	= "close"	# Close picker               	≝「⎈ c」	「Close picker」
    # 'Down'     	= 'N/A'  	# i🢖 Entry Next              	≝「 ▼」 	「」
    # 'Up'       	= 'N/A'  	# 🢔i Entry Previous          	≝「 ▲」 	「」
    # 'A-j'      	= 'N/A'  	# i🢖 Entry Next              	「⎈ j」 	「」
    # 'A-k'      	= 'N/A'  	# 🢔i Entry Previous          	「⎈ k」 	「」
    # 'A-f'      	= 'N/A'  	# i🢖 Entry Next              	「⎈ p」 	「」
    # 'A-d'      	= 'N/A'  	# 🢔i Entry Previous          	「⎈ n」 	「」
    # 'A-f'      	= 'N/A'  	#  🗗→ Open right  (Vertical) 	「⎈ v」 	「」
    # 'A-m'      	= 'N/A'  	# 🗗↓ Open bottom (Horizontal)	「⎈ s」 	「」
    # 'C-t'      	= 'N/A'  	# Toggle preview
    # 'C-space'  	= 'N/A'  	# Filter options	≝「⎈ ␠」	「Filter options」
    # 'Enter'    	= 'N/A'  	# Open selected 	≝「  ⏎」	「Open selected」
    # 'Shift-Tab'	= 'N/A'  	# Previous entry	#'Up' 'C-p'
    # 'Tab'      	= 'N/A'  	# Next entry    	#'Down' 'C-n'
    # 'PageUp'   	= 'N/A'  	# Page up       	#'C-u'
    # 'PageDown' 	= 'N/A'  	# Page down     	#'C-d'
    # 'Home'     	= 'N/A'  	# Go to first entry
    # 'End'      	= 'N/A'  	# Go to last entry
