# 🧬Helix 0.6, ⌨ modiƒew 0.3

# 'key'	= 'command'	# Icon Comment 「default key for this command」 「default command for this key」
# —————————————————————————————————————————————————————————————————————————————————————————————————



[keys.normal] #Ⓝ
  #Ⓝ Test ——————————————————————————————————————————————————————————————————————
    'C-q'	= ':quit!'            	# Control-q → typable command :q! (:quit!)
    # 'G'	= 'move_prev_word_end'	# Backward a word                                                    	⇧「I.⌥b, ⌥◀」 「goto_line」
    # '0'	= 'univeral_arg'      	# ∀* number prefix to treat all the following numbers as # of repeats	「  」 「0」  !!!missing ∀*
  #Ⓝ Free ——————————————————————————————————————————————————————————————————————
    'C-u'	= 'no_op'           	#                        	 「   」 「half_page_up」
    'A-C'	= 'no_op'           	#                        	⇧「   」 「copy_selection_on_prev_line」
    'A-c'	= 'no_op'           	#                        	 「   」 「change_selection_noyank」
    'A-('	= 'no_op'           	#                        	⇧「⇧⌥9」 「rotate_selection_contents_backward」
    'A-)'	= 'no_op'           	#                        	⇧「⇧⌥0」 「rotate_selection_contents_forward」
    'A-K'	= 'no_op'           	#                        	⇧「   」 「remove_selections」
    'A-d'	= 'no_op'           	#                        	 「 ⌥d」 「delete_selection_noyank」
    'C-i'	= 'no_op'           	#                        	 「   」 「jump_forward」
    'R'  	= 'no_op'           	#                        	⇧「   」 「replace_with_yanked」
    'b'  	= 'no_op'           	#                        	⇧「   」 「replace_with_yanked」
    '`'  	= "no_op"           	#                        	 「   」 「switch_to_lowercase」
    '~'  	= "no_op"           	#                        	⇧「   」 「switch_case」
    'A-`'	= "no_op"           	#                        	 「   」 「switch_to_uppercase」
    # 'X'	= 'change_selection'	# Δ (delete,enter Insert)	⇧「  c」 「extend_to_line_bounds」
    # 'Z'	=  'N/A'            	# ☰👁ₛ                    	 「   」 「view mode sticky」
  #Ⓝ Major modes ——————————————————————————————————————————————————————————————————————
    # 'i'	= 'insert_mode' 	# ⁁⤸ Insert before selection                  	 「  i」 「insert_mode」
    # 'e'	= 'select_mode' 	# Ⓢ ✠ Enter select (extend) mode (←↑↓→ in Web)	 「  v」 「move_next_word_end」  <i class='fa fa-arrows'></i>
    # ':'	= 'command_mode'	# Ⓒ Enter command mode                        	 「⇧ ;」 「command_mode」
  #Ⓝ Minor modes / menu dialogs ———————————————————————————————————————————————————————
    # 'p'    	 #☰👁 View mode            	Ⓝ 「  z」 「paste_after」
    # 'P'    	 #☰👁ₛ 'sticky', persistent	Ⓝ⇧「⇧ z」 「paste_before」
    # 'Z'    	 #☰👁ₛ 'sticky', persistent	Ⓝ⇧「⇧ z」 「paste_before」
    # 'g'    	 #ⓖ☰⮊ Goto mode           	  Ⓝ 「  g」 「」
    # 'n'    	 #☰🧩  Match mode          	Ⓝ 「  m」 「」 ☰<i class='fa fa-puzzle-piece'></i>
    # 'C-w'  	#☰🗔  Window mode          	  Ⓝ 「 ^w」 「」
    # 'space'	#☰␣  Space mode           	  Ⓝ 「  ␣」 「」
    # '['    	#☰⧛ Unimpaired            	  Ⓝ 「  ]」 「」
    # ']'    	#☰⧚                       	  Ⓝ 「  [」 「」
    # '`'    	#☰𝔸𝕒 Case conversion      	  Ⓝ 「  」 「switch_to_lowercase」

  #Ⓝ         	Compat with non-modal editors	 
  'C-o'      	= 'file_picker'              	# 🗁 Open file   picker	 「␣ f」 「jump_backward」
  'C-s'      	= ':write'                   	# 💾 save file         	 「  ^s」 「save_selection」
  # 'C-S-s'  	= 'Save As'                  	# ???                 	⇧「⇧^s」 「」
  'C-n'      	= ':new'                     	# 🗋 new buffer        	 「 ^n」 「」
  # 'C-S-t'  	= 'open-last-closed'         	# ???                 	⇧「⇧^t」 「」
  # 'C-plus' 	= 'zoom-in'                  	# ??? 🔎⨭              	 「 ^+」 「」
  # 'C-minus'	= 'zoom-out'                 	# ??? 🔎−              	 「 ^-」 「」

  #Ⓝ   	Copy                                	 
  'c'  	= 'yank'                            	# 🗐▋ Copy main selection <i class='fa fa-copy'></i>                                    	 「  c」 「change_selection」
  'C-c'	= 'yank_main_selection_to_clipboard'	# 📋▋ Copy main selection into system clipboard <i class='fa fa-clipboard'></i>         	 「␣,⇧y」 「toggle_comments」
  'C'  	= 'yank_main_selection_to_clipboard'	# 📋▋ Copy main selection into system clipboard <i class='fa fa-clipboard'></i>         	⇧「␣,⇧y」 「copy_selection_on_next_line」
  'A-c'	= 'yank_joined_to_clipboard'        	# ∀▋ Copy all selections to clipboard (joined) ⨝📋 <i class='fa fa-clipboard'></i> ∀❚ ∀▋	 「␣ y」 「」

  #Ⓝ Shell 	                 	 
    # '|'  	= 'shell_pipe'   	# |   Pipe each selection through shell command, replacing with output	⇧「⇧ \」 「shell_pipe」
    "A-\\" 	= 'shell_pipe_to'	# |to Pipe each selection into    shell command, ignoring       output	 「 ⌥\」 「」
    # 'A-|'	= 'shell_pipe_to'	#   Pipe each selection into    shell command, ignoring       output  	⇧「⇧⌥\」 「shell_pipe_to」

  #Ⓝ Move ——————————————————————————————————————————————————————————————————————
    #    	Cursor@Home
    'j'  	= 'move_line_down'      	# ▼                             	 「h/◀」 「move_line_down」
    'k'  	= 'move_line_up'        	# ▲                             	 「j/▼」 「move_line_up」
    'l'  	= 'move_char_left'      	# ◀                             	 「k/▲」 「move_char_right」
    ';'  	= 'move_char_right'     	# ▶                             	 「l/▶」 「collapse_selection」
    'm'  	= 'half_page_down'      	# ⤈ Move half page down         	   「 ^d」 「☰🧩」
    ','  	= 'half_page_up'        	# ⤉ Move half page up           	   「 ^u」 「keep_primary_selection」
    'C-j'	= 'page_down'           	# ⇟ Move      page down         	   「 ^d」 「」
    'C-k'	= 'page_up'             	# ⇞ Move      page up           	   「 ^u」 「」
    'a'  	= 'extend_to_line_start'	# ⭰▋ Move    line start + select	 「ⓈHome」 「append_mode」  # goto_line_start
    'A'  	= 'extend_to_line_end'  	# ⭲▋ Move    line end   + select	 「ⓈEnd」 「append_to_line」  # goto_line_end

    #Ⓝ          	Compat with non-modal editors
    'C-home'    	= 'goto_file_start'     	# ⇱ line number `<n>` else file start	 「  g」 「」
    'C-end'     	= 'goto_last_line'      	# ⇲ file end                         	 「  e」 「」
    'C-S-tab'   	= 'goto_previous_buffer'	# ⎗                                  	⇧「ⓖp」「」  !!!fail
    'C-tab'     	= 'goto_next_buffer'    	# ⎘                                  	 「ⓖn」「」  !!!fail
    'C-pageup'  	= 'goto_previous_buffer'	# ⎗                                  	 「   」 「」
    'C-pagedown'	= 'goto_next_buffer'    	# ⎘                                  	 「   」 「」
    'A-pageup'  	= 'jump_backward'       	# ⎗̡                                 	 「   」 「」
    'A-pagedown'	= 'jump_forward'        	# ⎘̡                                 	 「   」 「」
    # 'C-j'     	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist   	 「 ^o」 「」
    # 'C-;'     	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist   	 「 ^i」 「」 !!!fail

    '1'  	= 'goto_previous_buffer'	# ⎗ !!!missing ∀*                               	 「ⓖp」 「<1>」
    '2'  	= 'goto_next_buffer'    	# ⎘ !!!missing ∀*                               	 「ⓖn」 「<2>」
    'A-1'	= 'goto_previous_buffer'	# ⎗                                             	 「ⓖp」 「」
    'A-2'	= 'goto_next_buffer'    	# ⎘                                             	 「ⓖn」 「」
    '3'  	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist !!!missing ∀*	 「 ^o」 「<3>」
    '4'  	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist !!!missing ∀*	 「 ^i」 「<4>」
    'A-3'	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist              	 「 ^o」 「」
    'A-4'	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist              	 「 ^i」 「」

    #Ⓝ       	word
    'd'      	= 'move_prev_word_start'       	# 🢔w  Move this word start                           	 「  b」 「delete_selection」
    'f'      	= 'move_next_word_end'         	# w🢖  Move this word end                             	 「  e」 「find_next_char」
    'A-d'    	= 'move_prev_word_end'         	# ⤝w Move prev word end   (this start + ␣)       	 「ⓘ⌥b」 「delete_selection_noyank」
    'A-f'    	= 'move_next_word_start'       	# w⤞ Move next word start (this end   + ␣)       	 「  w」 「」
    'D'      	= 'move_prev_long_word_start'  	# 🢔W  Move this WORD start                           	⇧「⇧ b」 「」
    'F'      	= 'move_next_long_word_end'    	# W🢖  Move this WORD end                             	⇧「⇧ e」 「find_prev_char」
    # 'f'    	= 'move_next_word_start'       	# w⤞ Move next word start (this end + ␣)         	 「  w」 「find_next_char」
    'A-D'    	= 'move_prev_long_word_start'  	# 🢔W  Move this WORD start                           	⇧「⇧ b」 「」
    'A-F'    	= 'move_next_long_word_start'  	# W⤞ Move next WORD end   (this end + ␣)         	⇧「⇧ w」 「find_prev_char」
    'C-d'    	= ['move_prev_long_word_start',	# ⤝W  Move prev WORD end                             	⇧「⇧ b」 「half_page_down」
             	   'extend_prev_word_start',   	#                                                    	 
             	   'extend_next_word_start']   	# !!!move_prev_long_word_end missing                 	 
    'C-f'    	= 'move_next_long_word_start'  	# W⤞ Move next WORD end   (this end + ␣)         	⇧「⇧ w」 「page_down」
    # 'C-f'  	= ['collapse_selection',       	# W⤞ Move next WORD end   (this end + ␣)         	⇧「⇧ w」 「page_down」
    #        	   'extend_next_long_word_end']	#                                                    	 
    # 'G'    	= 'goto_line'                  	# ⮊⎯ go to line # <n> (set <n> in advance), use Ⓒ<n>⏎	⇧「⇧ g」 「goto_line」
    'C-left' 	= 'move_prev_long_word_start'  	# 🢔W  Move this WORD start                           	   「⇧ b」 「」
    'C-right'	= 'move_next_long_word_start'  	# W⤞ Move next WORD end   (this end + ␣)         	 「⇧ w」 「」
    'A-left' 	= 'move_prev_word_end'         	# ⤝w Move prev word end   (this start + ␣)       	 「ⓘ⌥◀」 「」
    'A-right'	= 'move_next_word_start'       	# w⤞ Move next word start (this end   + ␣)       	 「ⓘ⌥▶」 「」

    #Ⓝ      	Line
    # ':'   	= 'command_mode'   	# Ⓒ Enter command mode         	 「⇧ ;」 「command_mode」
    # 'Home'	= 'goto_line_start'	# Move to the start of the line	 「Home」 「goto_line_start」
    # 'End' 	= 'goto_line_end'  	# Move to the end of the line  	 「End」 「goto_line_end」

    #Ⓝ  	Block
    #'>'	= 'no_op'	# 🢔¶ Move paragraph start	「⇧ [」 「indent」 	!!!missing
    #'?'	= 'no_op'	# ¶🢖 Move paragraph end  	「⇧ ]」 「rsearch」	!!!missing

    'r'	= 'repeat_last_motion'	# ∞ Repeat last motion (f/t/m)	 「 ⌥.」 「replace」

    #Ⓝ   	Find
    'w'  	= 'find_next_char'  	# 🔎   Find       next     char           	 「  f」 「move_next_word_start」     	<i class='mss mss-Search-3'></i>
    'W'  	= 'find_prev_char'  	# 🔍   Find       previous char           	⇧「⇧ f」 「move_next_long_word_start」	<i class='fa fa-search'></i>
    'A-w'	= 'find_till_char'  	# 🔎₋₁ Find 'till next     char           	 「  t」 「」                         	<i class='mss mss-Search-3'></i>₋
    'A-W'	= 'till_prev_char'  	# 🔍₋₁ Find 'till previous char           	⇧「⇧ t」 「」                         	<i class='fa fa-search'></i>₋
    'S'  	= 'rsearch'         	# 🔍𝖗 for previous regex pattern          	 「⇧ /」 「split_selection」
    's'  	= 'search'          	# 🔎𝖗 for          regex pattern          	⇧「  /」 「select_regex」
    '.'  	= 'search_prev'     	# 🢔◎ ◎͔ Select previous search match     	   「⇧ n」 「repeat_last_change!!!」   !!! blocked by .Repeat
    '/'  	= 'search_next'     	# ◎🢖 ◎͕ Select next     search match     	   「  n」 「search」
    '>'  	= 'search_prev'     	# 🢔◎ ◎͔ Select previous search match     	   「⇧ n」 「indent」   !!! blocked by .Repeat
    '?'  	= 'search_next'     	# ◎🢖 ◎͕ Select next     search match     	   「  n」 「rsearch」   !!! remove after .Repeat
    # 'N'	= 'search_prev'     	# 🢔◎ ◎͔ Select previous search match     	  ⇧「⇧ n」 「search_prev」
    # 'n'	= 'search_next'     	# ◎🢖 ◎͕ Select next     search match     	   「  n」 「search_next」
    '8'  	= 'search_selection'	# 𝖗🢔▋ Use selection as the search pattern	   「⇧ 8」 「<8>」   !!! blocked by ∀*
    # '*'	= 'search_selection'	# 𝖗🢔▋ Use selection as the search pattern	  ⇧「⇧ 8」 「search_selection」


  #Ⓝ Select ——————————————————————————————————————————————————————————————————————
    'e'	= 'select_mode'	# Ⓢ ✠ Enter select (extend) mode (←↑↓→ in Web) alt <i class='fa fa-arrows'></i>	 「  v」 「move_next_word_end」

    #Ⓝ       	Compat with non-modal editors    	 
    'C-a'    	= ['save_selection','select_all']	# 🖈∀▋                                                       	「⇧ 5」  「increment」
    'A-down' 	= 'copy_selection_on_next_line'  	# 🠷 Copy selection onto the next     line (add cursor below)	「⇧ c」  「」
    'A-up'   	= 'copy_selection_on_prev_line'  	# 🠵 Copy selection onto the previous line (add cursor above)	 「⇧⌥c」 「」
    'S-left' 	= 'extend_char_left'             	#                                                           	「Ⓢh/◀」 「」
    'S-down' 	= 'extend_line_down'             	#                                                           	「Ⓢj/▼」 「」
    'S-up'   	= 'extend_line_up'               	#                                                           	「Ⓢk/▲」 「」
    'S-right'	= 'extend_char_right'            	#                                                           	「Ⓢl/▶」 「」


    'A-g'	= 'save_selection'	# 🖈 Save the current selection to the jumplist	 「  ^s」 「」
    'C-g'	= 'save_selection'	# 🖈 Save the current selection to the jumplist	 「  ^s」 「」
    'G'  	= 'save_selection'	# 🖈 Save the current selection to the jumplist	 「  ^s」 「goto_line」

    'J'  	= 'extend_line'          	# ⮒ Select current line/extend to next line if selected  	⇧「  x」 「join_selections」
    'E'  	= 'extend_to_line_bounds'	# ⎯ Extend selection to line bounds (line-wise selection)	⇧「  x」 「move_next_long_word_end」
    'A-e'	= 'extend_to_line_bounds'	# ⎯ Extend selection to line bounds (line-wise selection)	 「⇧ x」 「」
    # '' 	= 'expand_selection'     	# Expand selection to parent syntax node (TS)            	 「   」 「expand_selection」  TODO: pick a key
    # '5'	= 'select_paragraph'     	# ¶▋ Select this paragraph                               	 「   」 「<5>」  !!!missing ∀* !!!missing command
    # '%'	= 'select_all'           	# ∀▋ Select entire file                                  	⇧「⇧ 5」 「select_all」

    'A-j'	= 'copy_selection_on_next_line'	# 🠷 Copy selection onto the next     line (add cursor below)	 「⇧ c」 「」
    'A-k'	= 'copy_selection_on_prev_line'	# 🠵 Copy selection onto the previous line (add cursor above)	 「⇧⌥c」 「」
    'A-s'	= 'select_regex'               	# 𝖗▋ Select all regex matches inside selections             	 「  s」 「split_selection_on_newline」
    'N'  	= 'split_selection'            	# ䷖𝖗 on regex matches                                       	⇧「⇧ s」 「search_prev」
    'A-n'	= 'split_selection_on_newline' 	# ䷖␤ (﹨␤)                                                   	 「 ⌥s」 「」

    "'"    	= 'collapse_selection'        	# 🢖🢔 Collapse selection onto a single cursor            	 「  ;」 「」
    "A-'"  	= 'flip_selections'           	# ⮀ Flip selection cursor and anchor                    	 「 ⌥;」 「」
    'A-a'  	= 'flip_selections'           	# ⮀ Flip selection cursor and anchor                    	⇧[ ⌥;」 「」
    'A-A'  	= 'flip_selections'           	# ⮀ Flip selection cursor and anchor                    	⇧[ ⌥;」 「」
    'A-l'  	= 'rotate_selections_backward'	# ⟲ Rotate main selection backward (← with many columns)	 「⇧ 9」 「」
    'A-;'  	= 'rotate_selections_forward' 	# ⟳ Rotate main selection forward  (→ with many columns)	 「⇧ 0」 「flip_selections」
    'A-m'  	= 'rotate_selections_forward' 	# ⟳ Rotate main selection forward  (↓ with many lines)  	 「⇧ 0」 「」
    'A-,'  	= 'rotate_selections_backward'	# ⟲ Rotate main selection backward (↑ with many lines)  	 「⇧ 9」 「remove_primary_selection」
    'A-u'  	= 'remove_primary_selection'  	# ×         the primary selection                       	 「 ⌥,」 「earlier」
    'A-i'  	= 'keep_primary_selection'    	# ×∀ all but the primary selection (keep only)          	 「  ,」 「」
    'A-U'  	= 'no_op'                     	# ×× undo remove selection (!!!missing yet)             	⇧「 ⌥,」 「earlier」
    'K'    	= 'keep_selections'           	# ᵏ𝖗 selections not matching the regex (keep)           	⇧「⇧ k」 「keep_selections」
    'L'    	= 'remove_selections'         	# ×𝖗 selections     matching the regex                  	⇧「⇧⌥k」 「」
    # 'A-:'	= 'ensure_selections_forward' 	# ???                                                   	⇧「⇧⌥;」 「」

    # '_'  	= 'trim_selections'	# ✁Trim whitespace from the selection                    	⇧「⇧ -」 「trim_selections」
    'minus'	= 'trim_selections'	# ✁Trim whitespace from the selection                    	 「⇧ -」 「」
    # '+'  	= 'dupe_selections'	# 🗐Duplicate selection (currently nonfunctional/disabled)	⇧「⇧ =」 「dupe_selections」


  #Ⓝ Change ——————————————————————————————————————————————————————————————————————
    #            	Compat with non-modal editors
    'A-del'      	= ['extend_next_word_end',       	# ⌦w                              	 「   」 「」
                 	   'delete_selection']           	# × word →                        	 
    'C-del'      	= ['extend_next_long_word_end',  	# ⌦W                              	 「   」 「」
                 	   'delete_selection']           	# × Word →                        	 
    'A-backspace'	= ['extend_prev_word_start',     	# ⌫w                              	 「   」 「」
                 	   'delete_selection']           	# × word ←                        	 
    'C-backspace'	= ['extend_prev_long_word_start',	# ⌫W                              	 「   」 「」
                 	   'delete_selection']           	# × Word ←                        	 
    # 'del'      	= 'delete_selection'             	# ×▋                              	 「  d」 「」
    'S-del'      	= 'delete_selection_noyank'      	# 🕱▋                              	 「 ⌥d」 「」
    'S-ret'      	= ['open_below','normal_mode']   	# ⭣␤ Open new line below selection	 「  o」 「」
    'ret'        	= ['open_above','normal_mode']   	# ⭡␤ Open new line above selection	⇧「⇧ o」 「」

    # '.'      	= 'N/A'                              	# ∞ Repeat last change            	 「.」 「n/a」
    '6'        	= 'delete_char_forward'              	# ⌦ !!!missing ∀*                 	 「 ⌦」 「<5>」
    'x'        	= 'delete_selection'                 	# ×▋                              	 「  d」 「extend_line」
    'A-x'      	= 'delete_selection_noyank'          	# 🕱▋ (...without copying)         	 「 ⌥d」 「」
    'A-c'      	= 'change_selection'                 	# Δ                               	 「  c」 「change_selection_noyank」
    'h'        	= 'delete_char_backward'             	# ⌫c × char ←                     	 「⌫」 「move_char_left」
    'H'        	= 'delete_char_forward'              	# ⌦c × char →                     	⇧「⌦」 「」
    'A-h'      	= ['move_prev_word_start',           	# ⌫w                              	 「   」 「」
               	   'delete_selection']               	# × word ←                        	 
    'A-H'      	= ['move_next_word_end',             	# ⌦w                              	 「   」 「」
               	   'delete_selection']               	# × word →                        	 
    'C-h'      	= ['move_prev_long_word_start',      	# ⌫W                              	 「   」 「」
               	   'delete_selection']               	# × Word ←                        	 
    'C-x'      	= ['yank_main_selection_to_clipboard'	                                  	,
               	   'delete_selection']               	#                                 		×📋 cut to clipboard <i class='fa fa-clipboard'></i>	「   」 「decrement」
    'backspace'	= 'delete_char_backward'             	# ⌫                               	 「I.bs」 「」
    'X'        	= 'join_selections'                  	# ×␤ ⨝ Join lines inside selection	⇧「⇧ j」 「extend_to_line_bounds」

    # 'backspace'	= 'delete_char_backward'	# ⌫c × char ←	 「backspace」 「delete_char_backward」
    # 'C-h'      	= 'delete_char_backward'	# ⌫c × char ←	 「C-h」 「delete_char_backward」
    'del'        	= 'delete_char_forward' 	# ⌦c × char →	 「delete」 「delete_char_forward」
    # 'C-d'      	= 'delete_char_forward' 	# ⌦c × char →	 「C-d」 「delete_char_forward」

    't'  	= 'replace'                          	# 🗘c  Replace with a character               	   「  r」 「find_till_char」
    'T'  	= 'replace_with_yanked'              	# 🗘📋 Replace with copied text                	⇧「⇧ r」 「till_prev_char」  <i class='fa fa-copy'></i>
    'A-t'	= 'replace_selections_with_clipboard'	# 🗘📋 Replace selections by clipboard contents	 「␣ ⇧r」 「」 <i class='fa fa-clipboard'></i>

    #'`' 	= ''                   	# ☰𝔸𝕒 Case conversion mode	「  」 「switch_to_lowercase」 !!!missing aliases
    '^'  	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)          	 「 ⌥`」 「」
    'B'  	= 'switch_to_lowercase'	# 𝔸𝕒 (selection)          	⇧「  `」 「」
    'C-b'	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)          	 「 ⌥`」 「」

    'A-.'	= 'unindent'	# ⇚ (selection)	「⇧,」 「repeat_last_motion」
    'A-/'	= 'indent'  	# ⇛ (selection)	「⇧.」 「」

    # 'q'	= 'record_macro'   	# ⏺ Start/stop macro recording to the selected register   	 「  q」 「record_macro」
    # 'Q'	= 'replay_macro'   	# ▶  Play back a recorded macro from the selected register	⇧「⇧ q」 replay_macro]
    # '"'	= 'select_register'	# ®  Select a register to copy/paste from                 	 「  '<reg>」 「select_register」

    # 'b'	= 'N/Arepeat_last_change' 	# ∞ Repeat last change !!! no command yet	⇧「  .」 「move_prev_word_start」
    # '.'	=  'N/Arepeat_last_change'	# ∞ Repeat last change	 「  .」 「n/arepeat_last_change」
    # 'i'	= 'insert_mode'           	# ⁁⤸ Insert before selection	 「  i」 「insert_mode」
    'o'  	= 'append_mode'           	# ⤹⎀ Insert after selection (append)	 「  a」 「open_above」
    'I'  	= 'open_above'            	# ⭡␤ Open new line above selection	⇧「⇧ o」 「prepend_to_line」
    'O'  	= 'open_below'            	# ⭣␤ Open new line below selection	 「  o」 「append_to_line」
    'u'  	= 'undo'                  	# ⎌ Undo change	 「  u」 「undo mode」
    'y'  	= 'redo'                  	# ↷ Redo change	 「⇧ u」 「yank」
    'U'  	= 'earlier'               	# 🕘 Move backward in history   <i class='fa fa-history'></i>	⇧「 ⌥u」 「redo」
    'Y'  	= 'later'                 	# 🕒 Move forward in history ⏱ <i class='fa fa-clock-o'></i>	⇧「⇧⌥u」 「」
    'C-y'	= 'redo'                  	# ↷ Redo change	 「⇧ u」 「」
    'v'  	= 'paste_after'           	# 📋⤹ Paste after selection ⤹<i class='fa fa-copy'></i>	 「  p」 「select_mode」
    'C-v'	= 'paste_clipboard_after' 	# 📋⤹ Paste after selection  <i class='fa fa-copy'></i>⤹	 「␣ p」 「」
    'V'  	= 'paste_before'          	# ⤸📋 Paste before selection <i class='fa fa-clipboard'></i>⤹	 「⇧ p」 「」
    'C-z'	= 'undo'                  	# ⎌ Undo change	 「  u」 「」
    'C-Z'	= 'redo'                  	# ↷ Redo change !!!fail	⇧「⇧ u」 「」
    # 'I'	= 'prepend_to_line'       	# ⁁⭰ Insert at the start of the line	⇧「⇧ i」 「prepend_to_line」
    # 'A'	= 'append_to_line'        	# ⭲⎀ Insert at the end of the line	⇧「⇧ a」 「append_to_line」

  #Ⓝ Select manipulation ————————————————————————————————————————————————————————————————————
    '('  	= 'rotate_selection_contents_backward'	# ⟲ Rotate selection contents backward                       	⇧「⇧⌥9」 「rotate_selections_backward」
    ')'  	= 'rotate_selection_contents_forward' 	# ⟳ Rotate selection contents forward                        	⇧「⇧⌥0」 「rotate_selections_forward」
    '7'  	= 'align_selections'                  	# ⥂ Align selection in columns !!!missing ∀*                 	 「⇧ 7」 「<7>」
    # '&'	= 'align_selections'                  	# ⥂ Align selection in columns                               	⇧「⇧ 7」 「align_selections」
    # '='	= 'format_selections'                 	# ℱ Format selection (currently nonfunctional/disabled) (LSP)	 「  =」 「format_selections」

  #Ⓝ   	Misc               	 
  'z'  	= 'toggle_comments'	# un-/comment the selections                 	「 ^c」 「☰👁」
  'C-/'	= 'toggle_comments'	# un-/comment the selections                 	「 ^c」 「」 !!!fail
  'C-m'	= 'decrement'      	# ⊖ o̠ Decrement object (number) under cursor	「 ^x」 「」 <span class='cd'>o&#800;</span>
  'C-,'	= 'increment'      	# ⊕ o̟ Increment object (number) under cursor	「 ^a」 「」 <span class='cd'>o&#799;</span> !!!fails

  # '$'	= 'shell_keep_pipe'	# $ᵏ| Pipe each selection into shell command, keep selections where command returned 0	「Ⓝ⇧ 4」 「shell_keep_pipe」

  #Ⓝ space mode
  # "'"	= 'last_picker'	# 「collapse_selection」 Open last fuzzy picker

  #Ⓝ Shell	#                      	#
  # '!'   	= 'shell_insert_output'	# 🢔$ Run shell command, inserting output before each selection	⇧「⇧  1」 「shell_insert_output」
  '@'     	= 'shell_append_output'	# $🢖 Run shell command, appending output after  each selection	⇧「⇧⌥1」 「」
  # 'A-!' 	= 'shell_append_output'	# $🢖 Run shell command, appending output after  each selection	 「⇧⌥1」 「shell_append_output」

  ###Ⓝ ☰Minor modes  Accessible from Normal mode, typically switch back to Normal mode after a command

  [keys.normal.'`'] #Ⓝ ☰𝔸𝕒 Case conversion mode
    '`'  	= 'switch_case'        	# 𝕒⇋𝔸 (selection)             	 「⇧ `」 「」
    'j'  	= 'switch_to_lowercase'	# 𝔸𝕒 (selection)              	 「  `」 「」
    'k'  	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)              	 「 ⌥`」 「」
    # 'l'	= 'switch_to_sentence' 	# 𝔸𝕒 𝔹𝕓 (selection) !!!missing	 「 」 「」
    # ';'	= 'switch_to_camel'    	# ℂ𝕒𝕄𝕖𝕝 (selection) !!!missing	 「 」 「」

  [keys.normal.'p'] #Ⓝ 'view' ☰👁 View mode intended for scrolling and manipulating the view without changing the selection 「$!」 「paste_after」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	#                                               	 「   」 「page_up」  !!!duplciate with align_view_bottom
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	「up」 「scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」
    # 'p'     	= 'view_mode_sticky' 	# ☰👁ₛ 'sticky', persistent                      	 「   」 「」
  [keys.normal.'P'] #Ⓝ ☰👁ₛ 'sticky', persistent ⇧「$!」 「paste_before」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	#                                               	 「   」 「page_up」 !!!duplciate with align_view_bottom
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	「up」   [scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」
  [keys.normal.'Z'] #Ⓝ ☰👁ₛ 'sticky', persistent ⇧「$!」 「paste_before」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	# !!!duplciate with align_view_bottom           	 「   」 「page_up」
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「up」   [scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」

  [keys.normal.'g'] #Ⓝ ⓖ☰⮊ Goto mode Jumps to various locations 「$!」 「」
    'b'  	= 'no_op'                   	#                                    	   「   」 「goto_window_bottom」
    'h'  	= 'no_op'                   	#                                    	   「   」 「goto_line_start」
    'p'  	= 'no_op'                   	#                                    	   「   」 「goto_previous_buffer」
    'j'  	= 'goto_last_line'          	# ⇲ file end                         	   「  e」 「」
    'k'  	= 'goto_file_start'         	# ⇱ line number `<n>` else file start	   「  g」 「goto_line_end」
    # 'g'	= 'goto_file_start'         	# ⇱ line number `<n>` else file start	   「  g」 「goto_file_start」
    # 's'	= 'goto_first_nonwhitespace'	# line start 1ₛₜ non-whitespace char 	   「  s」 「goto_first_nonwhitespace」
    'a'  	= 'goto_first_nonwhitespace'	# line start 1ₛₜ non-whitespace char 	   「  s」 「goto_last_accessed_file」
    'l'  	= 'goto_line_start'         	# line start ⭰                       	   「  h」 「」 !!! change to 🢔¶ when implemented
    ';'  	= 'goto_line_end'           	# line end   ⭲                       	   「  l」 「」 !!! change to ¶🢖 when implemented
    # 'f'	= 'goto_file'               	# files in the selection             	   「  f」 「goto_file」
    'm'  	= 'goto_window_bottom'      	# 🗔⭳ screen bottom                   	 「  b」 「goto_last_modified_file」
    ','  	= 'goto_window_top'         	# 🗔⭱ screen top                      	 「  t」 「」
    'n'  	= 'goto_window_center'      	# 🗔· screen middle                   	 「  c」 「goto_next_buffer」
    # 'd'	= 'goto_definition'         	# ≝      definition (LSP)            	   「  d」 「goto_definition」
    'F12'	= 'goto_definition'         	# ≝      definition (LSP)            	   「  d」 「」
    'e'  	= 'goto_type_definition'    	# ≝ type definition (LSP)            	   「  y」 「goto_last_line」
    # 'y'	= 'goto_type_definition'    	# ≝ type definition (LSP)            	   「  y」 「goto_type_definition」
    # 'r'	= 'goto_reference'          	# 🅁※ references (LSP)                	 「  r」 「goto_reference」
    # 'i'	= 'goto_implementation'     	# 🄸 implementation (LSP)             	   「  i」 「goto_implementation」
    't'  	= 'goto_implementation'     	# 🄸 implementation (LSP)             	   「  i」 「goto_window_top」
    'c'  	= 'goto_last_accessed_file' 	# 🕮␜ file last accessed/alternate    	 「  a」 「goto_window_center」
    'v'  	= 'goto_last_modified_file' 	# ✎␜ file last modified/alternate    	 「  m」 「」
    '1'  	= 'goto_previous_buffer'    	# buffer previous                    	   「  p」 「」 !!! blocked by ∀* universal argument
    '2'  	= 'goto_next_buffer'        	# buffer next                        	   「  n」 「」 !!! blocked by ∀* universal argument
    '3'  	= 'jump_backward'           	# ⎗̡ Jump backward on the jumplist   	   「   」 「」 !!!missing ∀*
    '4'  	= 'jump_forward'            	# ⎘̡ Jump forward  on the jumplist   	   「   」 「」 !!!missing ∀*
    'u'  	= 'goto_last_modification'  	# 🕘 last modification in current file	 「  .」 「」 <i class='fa fa-history'></i>
    # '.'	= 'goto_last_modification'  	# 🕘 last modification in current file	 「  .」 「goto_last_modification」 <i class='fa fa-history'></i>
    # "'"	= 'goto-char#'              	# c#                                 	   「   」 「」 !!! not available

  [keys.normal.'n'] #Ⓝ ☰🧩  Match mode ☰<i class='fa fa-puzzle-piece'></i> 「$!」 「」
    'n'	= 'match_brackets'          	# 🢔()🢖 Goto matching   bracket (TS)              	 「  m」 「」
    '.'	= 'match_brackets'          	# 🢔(   Goto next left  bracket (TS)              	 「  」 「」 !!!missing
    '/'	= 'match_brackets'          	#   )🢖 Goto next right bracket (TS)              	 「  」 「」 !!!missing
    'i'	= 'surround_add'            	# (+)  Surround current selection with <char>    	 「  s」 「」
    't'	= 'surround_replace'        	# (🗘) Replace surround character <from> with <to>	 「  r」 「」
    'x'	= 'surround_delete'         	# (×)  Delete  surround character <char>         	 「  d」 「」
    'e'	= 'select_textobject_around'	# 🢔O🢖  Select around textobject                  	 「  a」 「」
    'a'	= 'select_textobject_inner' 	# 🢖O🢔  Select inside textobject                  	 「  i」 「」

  [keys.normal.'C-w'] #Ⓝ ☰🗔  Window mode 「Ⓝ^ w」 「」
    's'      	= 'no_op'           	#                                      	   「  」 「hsplit」
    'C-s'    	= 'no_op'           	#                                      	   「  」 「hsplit」
    'v'      	= 'no_op'           	#                                      	   「  」 「vsplit」
    'C-v'    	= 'no_op'           	#                                      	   「  」 「vsplit」
    'F'      	= 'no_op'           	#                                      	  ⇧「  」 「goto_file」
    'j'      	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「  j」 「jump_view_down」
    'k'      	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「  k」 「jump_view_up」
    'l'      	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「  h」 「jump_view_right」
    ';'      	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「  l」 「」
    'C-j'    	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「 ^j」 「jump_view_down」
    'C-k'    	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「 ^k」 「jump_view_up」
    'C-l'    	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「 ^h」 「jump_view_right」
    'C-;'    	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「 ^l」 「」 #!!!fails
    'C-down' 	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	 「▼」 「」
    'C-up'   	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	 「▲」 「」
    'C-left' 	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「◀」 「」
    'C-right'	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「▶」 「」
    'w'      	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「  w」 「rotate_view」
    'C-w'    	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「 ^w」 「rotate_view」
    'f'      	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「  v」 「vsplit」
    'C-f'    	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「 ^v」 「vsplit」
    'm'      	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「  s」 「」
    'C-m'    	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「 ^s」 「」
    'h'      	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'C-h'    	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'g'      	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'C-g'    	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'q'      	= 'wclose'          	# ×🗔  Close         current window     	 「  q」 「wclose」
    'C-q'    	= 'wclose'          	# ×🗔  Close         current window     	 「 ^q」 「wclose」
    'o'      	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「  o」 「wonly」
    'C-o'    	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「 ^o」 「wonly」
    'x'      	= 'wonly'           	# ×∀🗔 Close all but current window     	 「  o」 「」
    'C-x'    	= 'wonly'           	# ×∀🗔 Close all but current window     	 「 ^o」 「」
    'down'   	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「▼」 「jump_view_down」
    'up'     	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「▲」 「jump_view_up」
    'left'   	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	≝「◀」 「jump_view_left」
    'right'  	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	≝「▶」 「jump_view_right」

  [keys.normal.'space'] #Ⓝ ☰␣  Space mode 「Ⓝ ␣」 「」
    # 'space'	= 'insert_mode'            	# ⁁⤸ Insert before selection                      	 「  i」 「」 !!!panick! !!!missing
    'ret'    	= 'command_mode'           	# Ⓒ Enter command mode                            	 「  ⎋」 「」
    'P'      	= 'no_op'                  	#                                                 	⇧「   」 「paste_clipboard_before」
    'Y'      	= 'no_op'                  	#                                                 	 「   」 「yank_main_selection_to_clipboard」
    'R'      	= 'no_op'                  	#                                                 	⇧「   」 「replace_selections_with_clipboard」
    'S'      	= 'no_op'                  	#                                                 	⇧「   」 「workspace_symbol_picker」
    # Home   	row                        	                                                  	 
    'j'      	= 'extend_line'            	# ⮒ Select current/next(if selected) line         	 「  x」 「」
    'k'      	= 'keep_selections'        	# ᵏ𝖗 selections not matching the regex (keep)     	   「⇧ k」 「」
    'l'      	= 'remove_selections'      	# ×𝖗 selections     matching the regex            	   「⇧⌥k」 「」
    ';'      	= 'command_mode'           	# Ⓒ Enter command mode                            	 「⇧ ;」 「」
    # 'f'    	= 'mode_file'              	# ☰␜ File mode                                    	 「   」 「file_picker」 !!!missing_aliases
    # 'd'    	= 'mode_bracket'           	# ☰⟪ Insert various brackets                      	 「   」 「」 !!!missing_aliases
    's'      	= 'select_regex'           	# 𝖗▋ Select all regex matches inside selections   	   「  s」 「symbol_picker」
    'a'      	= ['save_selection',       	# 🖈∀▋                                             	 「⇧ 5」 「」
             	   'select_all']           	# Save current position, select everything        	 
    'h'      	= ['kill_to_line_start',   	# ×⎯                                              	 「   」 「」
             	   'kill_to_line_end']     	# Delete this line                                	 
    'g'      	= 'save_selection'         	# 🖈 Save the current selection to the jumplist    	 「  ^s」 「」
    # Upper  	row                        	                                                  	 
    # 'u'    	= 'mode_U'                 	# ☰u TBD LSPs? or list_kills like z               	 「   」 「」  !!!missing_aliases
    # 'i'    	= 'mode_Register'          	# ☰® Register/copy/paste etc.                     	 「   」 「」
    'o'      	= 'hover'                  	# ? Show documentation for item under cursor (LSP)	 「  k」 「」
    # 'p'    	= 'mode_P'                 	# ☰p TBD                                          	 「」「paste_clipboard_after」 !!!missing_aliases
    'r'      	= 'rename_symbol'          	# ✎ Rename symbol (LSP)                           	≝「   」 「rename_symbol]
    'e'      	= 'extend_to_line_bounds'  	# ⎯ Extend selection to line bounds               	 「  x」 「」
    #'w'     	= 'mode_window'            	# ☰🗔 Window mode                                  	 「␣ w」 「mode_window」 !!!missing_aliases
    # 'q'    	= '???'                    	#                                                 	 「  q」 「」
    'y'      	= 'code_action'            	# Ⓐ Apply code action (LSP)                       	 「␣ a」 「yank_joined_to_clipboard」
    't'      	= 'replace_with_yanked'    	# 🗘📋 Replace with copied text                     	 「⇧ r」 「」  <i class='fa fa-copy'></i>
    # Lower  	row                        	                                                  	 
    'm'      	= 'symbol_picker'          	# 🅂🗋 Open document  symbol picker (LSP) ⚛Ⓢ        	 「␣ s」 「」
    ','      	= 'workspace_symbol_picker'	# 🅂🗍 Open workspace symbol picker (LSP) ⚛Ⓢ        	 「␣⇧s」 「」

    '/'      	= 'global_search'                     	# 🔎🗁 Global search in workspace folder           	≝「␣ /」 「global_search」
    'v'      	= 'paste_clipboard_after'             	# 📋⤹ Paste after selections                      	 「␣ p」 「」
    'c'      	= 'yank_main_selection_to_clipboard'  	# 📋▋ Copy main selection into system clipboard   	 「␣ ⇧y」  <i class='fa fa-clipboard'></i>▋
    'x'      	= ['yank_main_selection_to_clipboard',	# ×📋 ▋                                           	 「   」 「」 <i class='fa fa-clipboard'></i>
             	   'delete_selection']                	# cut to clipboard                               	 「   」 「」  create a new buffer and paste a buffer there !!! not available yet
    # 'z'    	= 'list_kills'                        	# 🕱☰ new buffer with clipboard content           	 「   」 「」	 !!!missing
    'n'      	= 'split_selection'                   	# ䷖𝖗 on regex matches                            	 「⇧ s」 「」
    'b'      	= 'switch_to_lowercase'               	# 𝔸𝕒  (selection)                                	 「  `」 「buffer_picker」
    "'"      	= 'flip_selections'                   	# ⮀ Flip selection cursor and anchor             	 「 ⌥;」 「」
    '\'      	= 'shell_pipe'                        	# Pipe selections thru shell, replace with output	 「⇧ \」 「」
    # Numbers	row                                   	                                                 	 
    # "'"    	= 'last_picker'                       	# ☰☾ ∞Open last fuzzy picker                     	 「  」 「」
    '6'      	= 'switch_to_uppercase'               	# 𝕒𝔸 (selection)                                 	 「⇧⌥`」 「」 !!! change to Sentence Case
    # '7'    	= 'toggle_spellcheck'                 	# ⇝ spell check                                  	 「   」 「」  !!!missing

  [keys.normal.'space'.'f'] #Ⓝ ☰␜ File mode in Space mode 「␣ f」 「」
    'j'  	= ':write'                 	# 💾 save file
    'k'  	= 'file_picker'            	# 🗁 Open file   picker	 「␣ f」
    # 'l'	= 'open file at cursor'    	# ❚␜ open file at cursor
    'f'  	= 'buffer_picker'          	# ☰b Open buffer picker	 「  b」 「」
    # 'd'	= 'show in desktop'        	# show in desktop
    's'  	= ':write'                 	# 💾 save file
    'S'  	= ':write-all'             	# 💾∀v all views
    'a'  	= 'goto_last_accessed_file'	# 🕮 file last accessed/alternate	「ⓖ a」
    # 'g'	= 'bookmark bmenu list'    	# ☰🖈bookmark bmenu list
    # 'h'	= 'bookmark set'           	# 🖈 bookmark set
    # 'u'	= 'open last closed'       	# open last closed
    # 'o'	= 'open file fast'         	# prompt toopen a file from bookmark
    # 'r'	= 'rename_file'            	# ✎ rename current file
    # 'e'	= 'open in external app'   	# open in external app
    # 'w'	= 'find_file'              	# 🔎 Find file  <i class='mss mss-Search-3'></i>
    # 'q'	= 'mode_fs_close'          	# ☰× Close buffers/files saved/unsaved
    'v'  	= 'goto_last_modified_file'	# ✎ file last modified/alternate	「ⓖ m」
    # 'c'	= 'copy file path'         	# 📋C:\ copy file path <i class='fa fa-clipboard'>C:\
    # 't'	= 'list recently closed'   	# list recently closed
    # 'y'	= 'open recently closed'   	# open recently closed
    'o'  	= 'file_picker'            	# 🗁 Open file   picker	「␣ f」
    'n'  	= ':new'                   	# 🗋 new empty buffer  	「Ⓝ^n」
    # 'b'	= 'recentf open files'     	# recentf open files
    # '\'	= 'open in terminal'       	# open in terminal
    '`'  	= ':reload'                	# 🗘 Discard, Reload from source
  [keys.normal.'space'.'f'.'q'] #Ⓝ ☰␜☰× Close mode in File mode in Space mode
    'x'	= ':buffer-close'   	# ×b buffer current
    'f'	= ':buffer-close'   	# ×b buffer current
    'r'	= ':buffer-close!'  	# 🕱b buffer current (kill unsaved)
    'd'	= ':quit'           	# ×v view   current
    'e'	= ':quit!'          	# 🕱v view   current
    'a'	= ':quit-all'       	# ×∀v view  all
    'q'	= ':quit-all!'      	# 🕱∀v view  all
    's'	= ':write-quit'     	# 💾×v view current
    'w'	= ':write-quit!'    	# 💾🕱v view current
    'j'	= ':write-quit'     	# 💾×v view current
    'u'	= ':write-quit!'    	# 💾🕱v view current
    'k'	= ':write-quit-all' 	# 💾∀v view all, ×∀v view all
    'i'	= ':write-quit-all!'	# 💾∀v view all, 🕱∀v view all
    ';'	= ':cquit'          	# Quit with exit code (default 1)
  [keys.normal.'space'.'f'.'x'] #Ⓝ ☰␜☰× Close mode in File mode in Space mode
    'x'	= ':buffer-close'   	# ×b buffer current
    'f'	= ':buffer-close'   	# ×b buffer current
    'r'	= ':buffer-close!'  	# 🕱b buffer current (kill unsaved)
    'd'	= ':quit'           	# ×v view   current
    'e'	= ':quit!'          	# 🕱v view   current
    'a'	= ':quit-all'       	# ×∀v view  all
    'q'	= ':quit-all!'      	# 🕱∀v view  all
    's'	= ':write-quit'     	# 💾×v view current
    'w'	= ':write-quit!'    	# 💾🕱v view current
    'j'	= ':write-quit'     	# 💾×v view current
    'u'	= ':write-quit!'    	# 💾🕱v view current
    'k'	= ':write-quit-all' 	# 💾∀v view all, ×∀v view all
    'i'	= ':write-quit-all!'	# 💾∀v view all, 🕱∀v view all
    ';'	= ':cquit'          	# Quit with exit code (default 1)

  [keys.normal.'space'.'i'] #Ⓝ ☰®  Register/copy/paste etc.
    'i'  	= 'select_register'                  	# ®  Select a register to copy/paste from '<reg> ??? make sticky? for further reg ops or use the main layer
    # '7'	= 'append_to_register 1'             	# ®1⎀ Append current line/selection to reg 1
    # '8'	= 'clear_register 1'                 	# ®1× x
    # '9'	= 'copy_to_register 1'               	# ®1🗐 x
    # '0'	= 'paste_from_register 1'            	# ®1📋 x
    # '1'	= 'append_to_register 2'             	# ®2⎀ Append current line/selection to reg 2
    # '2'	= 'clear_register 2'                 	# ®2× x
    # '3'	= 'copy_to_register 2'               	# ®2🗐 x
    # '4'	= 'paste_from_register 2'            	# ®2📋 x
    't'  	= 'replace_selections_with_clipboard'	# 🗘▋📋 Replace selections by clipboard contents    	「␣⇧r」 <i class='fa fa-clipboard'></i>▋
    'x'  	= 'join_selections'                  	# ×␤ ⨝ Join lines inside selection                	「Ⓝ⇧j」
    'v'  	= 'paste_clipboard_before'           	# ⤸📋 Paste after  selections                      	「␣⇧p」 ⤸<i class='fa fa-clipboard'></i>
    'c'  	= 'yank_joined_to_clipboard'         	# 📋∀▋ Copy all selections to clipboard (joined) ⨝📋	「␣ y」 <i class='fa fa-clipboard'></i> ∀❚ ∀▋
    # 'a'	= ':clipboard-yank'                  	# Copy main   sel to system         clipboard
    # 'a'	= ':clipboard-yank-join'             	# Copy joined sel to system         clipboard with sep \n
    # 'a'	= ':primary-clipboard-yank'          	# Copy main   sel to system primary clipboard
    # 'a'	= ':primary-clipboard-yank-join'     	# Copy joined sel to system primary clipboard with sep \n
    # 'a'	= ':clipboard-paste-after'           	# Paste system  clipboard after   selections
    # 'a'	= ':clipboard-paste-before'          	# Paste system  clipboard before  selections
    # 'a'	= ':clipboard-paste-replace'         	# Paste system  clipboard replace selections
    # 'a'	= ':primary-clipboard-paste-after'   	# Paste primary clipboard after   selections
    # 'a'	= ':primary-clipboard-paste-before'  	# Paste primary clipboard before  selections
    # 'a'	= ':primary-clipboard-paste-replace' 	# Paste primary clipboard replace selections
    # 'a'	= ':show-clipboard-provider'         	# Show clipboard provider name in status bar
    'j'  	= ':sort'                            	# 𝕒🢖𝕫 Sort ranges in selection 𝟙𝟚𝟛
    'k'  	= ':rsort'                           	# 𝕫🢖𝕒 Sort ranges in selection in reverse order 𝟛𝟚𝟙
    # 'd'	='list-matching-lines'               	# !!!missing
    # 'f'	='delete-matching-lines'             	# !!!missing
    # 'g'	='delete-non-matching-lines'         	# !!!missing
    # 't'	='delete-duplicate-lines'            	# !!!missing
    # 'n'	='reformat-to-sentence-lines'        	# !!!missing
    # 'o'	='copy-rectangle-to-register'        	# !!!missing
    # 'r'	='query-replace-regexp'              	# !!!missing
    # 'h'	='mark-defun'                        	# !!!missing
    # ';'	='escape-quotes'                     	# Add \ before " in current line/selection

  # [keys.normal.'space'.'d'] #Ⓝ ☰⟪ Bracket mode in Space mode (place cursor in between)
    # 'RET'	= 'insert char'   	#
    # 'SPC'	= 'insert unicode'	#
    # 'd'  	= '()'            	# () parenthesis
    # 'f'  	= '[]'            	# [] square bracket
    # 'j'  	= '{}'            	# {} brace
    # 'k'  	= '""'            	# "" regular double quote
    # 'l'  	= "''"            	# '' regular single quote
    # 'r'  	= '‹›'            	# ‹› single angle quote (single chevrons)
    # 't'  	= '«»'            	# «» double angle quote (double chevrons)
    # 'n'  	= '【】'            	# 【】 black lenticular bracket
    # 'm'  	= '「」'            	# 「」 corner bracket
    # 'o'  	= '〔〕'            	# 〔〕 tortoise shell bracket
    # ','  	= '〈〉'            	# 〈〉 angle bracket or math ⟨⟩
    # '.'  	= '⟪⟫'            	# ⟪⟫ double angle bracket
    # '<'  	= '⟪⟫'            	# ⟪⟫ double angle bracket
    # 'g'  	= '‘’'            	# ‘’ curly single quote
    # 'h'  	= '“”'            	# “” double curly quote
    # 'y'  	= "`'"            	# `' emacs quote
    # ';'  	= '=""'           	# ="" string assignment
    # 'z'  	= '⸨⸩'            	# ⸨⸩ Double Parenthesis
    # 'c'  	= 'date'          	# 📆📅current date
    # 'p'  	= 'u+000C'        	# ␌ formfeed

  [keys.normal.'space'.'w'] #Ⓝ ☰🗔  Window mode in Space mode 「Ⓝ^ w」 「」
    's'      	= 'no_op'           	#                                      	   「  」 「hsplit」
    'C-s'    	= 'no_op'           	#                                      	   「  」 「hsplit」
    'v'      	= 'no_op'           	#                                      	   「  」 「vsplit」
    'C-v'    	= 'no_op'           	#                                      	   「  」 「vsplit」
    'F'      	= 'no_op'           	#                                      	  ⇧「  」 「goto_file」
    'j'      	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「  j」 「jump_view_down」
    'k'      	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「  k」 「jump_view_up」
    'l'      	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「  h」 「jump_view_right」
    ';'      	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「  l」 「」
    'C-j'    	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「 ^j」 「jump_view_down」
    'C-k'    	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「 ^k」 「jump_view_up」
    'C-l'    	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「 ^h」 「jump_view_right」
    'C-;'    	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「 ^l」 「」 #!!!fails
    'C-down' 	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	 「▼」 「」
    'C-up'   	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	 「▲」 「」
    'C-left' 	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「◀」 「」
    'C-right'	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「▶」 「」
    'w'      	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「  w」 「rotate_view」
    'C-w'    	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「 ^w」 「rotate_view」
    'f'      	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「  v」 「vsplit」
    'C-f'    	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「 ^v」 「vsplit」
    'm'      	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「  s」 「」
    'C-m'    	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「 ^s」 「」
    'h'      	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'C-h'    	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'g'      	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'C-g'    	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'q'      	= 'wclose'          	# ×🗔  Close         current window     	 「  q」 「wclose」
    'C-q'    	= 'wclose'          	# ×🗔  Close         current window     	 「 ^q」 「wclose」
    'o'      	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「  o」 「wonly」
    'C-o'    	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「 ^o」 「wonly」
    'x'      	= 'wonly'           	# ×∀🗔 Close all but current window     	 「  o」 「」
    'C-x'    	= 'wonly'           	# ×∀🗔 Close all but current window     	 「 ^o」 「」
    'down'   	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「▼」 「jump_view_down」
    'up'     	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「▲」 「jump_view_up」
    'left'   	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	≝「◀」 「jump_view_left」
    'right'  	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	≝「▶」 「jump_view_right」

  [keys.normal.'space'.'u'] #Ⓝ 🌐 ☰ⓤ LSPs and various ones
    'u'  	= 'remove_primary_selection'	# ×          the primary selection                   	「 ⌥,」
    'i'  	= 'keep_primary_selection'  	# ×∀ all but the primary selection (keep only)       	「  ,」
    # LSP	                            	                                                     	 
    'a'  	= 'format_selections'       	# ℱ  Format selection (LSP)                          	「  =」 !!!missing
    'q'  	= ':format'                 	# ℱ∀ Format the file using the LSP formatter         	 「  」
    'j'  	= 'code_action'             	# Ⓐ  Apply code action (LSP)                         	「␣ a」
    's'  	= 'symbol_picker'           	# 🅂🗋 Open document  symbol picker (LSP) ⚛Ⓢ           	「␣ s」
    'w'  	= 'workspace_symbol_picker' 	# 🅂🗍 Open workspace symbol picker (LSP) ⚛Ⓢ           	「␣⇧s」
    'r'  	= 'rename_symbol'           	# ✎  Rename symbol (LSP)                             	「␣ r」
    'l'  	= 'goto_prev_diag'          	# 🢔🛠  Diagnostic previous (LSP) !!! make these sticky	「⧛ d」
    ';'  	= 'goto_next_diag'          	# 🛠🢖  Diagnostic next     (LSP) !!! make these sticky	「⧚ d」
    '.'  	= 'goto_first_diag'         	# ⭰🛠 Diagnostic first    in document (LSP)           	「⧛⇧d」
    '/'  	= 'goto_last_diag'          	# 🛠⭲ Diagnostic last     in document (LSP)           	「⧚⇧d」

  # [keys.normal.'space'.'p']	#Ⓝ ☰ⓟ TBD



  [keys.normal.'['] #Ⓝ ☰⧛ Unimpaired
    'd'    	= 'goto_prev_diag'         	# 🢔🛠  Diagnostic previous (LSP)           	  ≝「  d」 「goto_prev_diag」
    'D'    	= 'goto_first_diag'        	# ⭰🛠 Diagnostic first    in document (LSP)	≝「⇧ d」 「goto_first_diag」
    'f'    	= 'goto_first_diag'        	# ⭰🛠 Diagnostic first    in document (LSP)	 「⇧ d」 「」
    'space'	= 'add_newline_above'      	# ⭡␤  Add newline above                   	   「  ␣」 「add_newline_above」
    'm'    	= ['extend_to_line_bounds',	# Exchange the current line with [n] lines above it (!!!missing n)
           	   'delete_selection',     	#
           	   'move_line_up',         	#
           	   'paste_before']         	#
  [keys.normal.'['.'c'] #Ⓝ ☰⧛ℂ Unimpaired Config toggle
    'e'	= ':set-option line-number absolute'	# #⭳  Line number display: absolute
    's'	= ':set-option smart-case true'     	# 𝖗𝕒  Smart case regex searching (case insensitive unless pattern contains upper case characters)
    'd'	= ':set-option auto-pairs true'     	# ⟪⟫  Auto insertion of pairs to parentheses, brackets, etc
    'a'	= ':set-option auto-completion true'	# ⎁  Auto pop up of auto-completion
    'i'	= ':set-option auto-info true'      	# 🛈  Display infoboxes
    # !!!fails
    # 'h'	= ':set-option file_picker_config.hidden true'	# Ignore hidden files
    # 'k'	= ':set-option parents true'                  	# Read ignore files from parent directories
    # 'l'	= ':set-option ignore true'                   	# Read .ignore files
    # ';'	= ':set-option git-ignore true'               	# Read .gitignore files
    # ','	= ':set-option git-global true'               	# Read global .gitignore (path: core.excludefile option of git's config)
    # '.'	= ':set-option git-exclude true'              	# Read .git/info/exclude files

  [keys.normal.']'] #Ⓝ ☰⧚
    'd'    	= 'goto_next_diag'         	# 🛠🢖  Diagnostic next (LSP)            	≝「  d」 「goto_next_diag」
    'D'    	= 'goto_last_diag'         	# 🛠⭲ Diagnostic last  in document (LSP)	≝「⇧ d」 「goto_last_diag」
    'f'    	= 'goto_last_diag'         	# 🛠⭲ Diagnostic last  in document (LSP)	 「⇧ d」 「」
    'space'	= 'add_newline_below'      	# ⭣␤  Add newline below                	   「  ␣」 「add_newline_below」
    'm'    	= ['extend_to_line_bounds',	# Exchange the current line with [n] lines below it (!!!missing n)
           	   'delete_selection',     	#
           	   'goto_line_end',        	#
           	   'paste_after']          	#
  [keys.normal.']'.'c'] #Ⓝ ☰⧛ℂ Unimpaired Config toggle
    'e'	= ':set-option line-number relative' 	# #⭥  Line number display: relative
    's'	= ':set-option smart-case false'     	# 𝖗𝔸  Smart case regex searching (case insensitive unless pattern contains upper case characters)
    'd'	= ':set-option auto-pairs false'     	# ⟪  Auto insertion of pairs to parentheses, brackets, etc
    'a'	= ':set-option auto-completion false'	# ⎁  Auto pop up of auto-completion
    'i'	= ':set-option auto-info false'      	# 🛈  Display infoboxes

    # [n                      Go to the previous SCM conflict marker or diff/patch hunk. Try d[n inside a conflict
    # ]n                      Go to the next SCM conflict marker or diff/patch hunk    . Try d]n inside a conflict.
    # ENCODING AND DECODING
    # Each of these operations has a map that takes a motion, a map that targets [count] lines, and a visual mode map.  The linewise variant integrates with repeat.vim.
    # Mnemonic: encoding always comes before decoding; "[" always comes before "]".
    # [x{motion}              XML encode.  *[x* *[xx* *v_[x*
    # [xx                     <foo bar="baz"> => &lt;foo bar=&quot;baz&quot;&gt;
    # {Visual}[x
    # ]x{motion}              XML decode.  HTML entities are handled as well. *]x* *]xx* *v_]x*
    # ]xx
    # {Visual}]x
    # [u{motion}              URL encode. *[u* *[uu* *v_[u*
    # [uu                     foo bar => foo%20bar
    # {Visual}[u
    # ]u{motion}              URL decode. *]u* *]uu* *v_]u*
    # ]uu
    # {Visual}]u
    # [y{motion}              C String encode.  Backslash escape control *[y* *[yy* *v_[y* *[C* *[CC* *v_[C*
    # [yy                     characters, quotation marks, and backslashes.
    # {Visual}[y
    # [C{motion}
    # [CC
    # {Visual}[C
    #                                         *]y* *]yy* *v_]y* *]C* *]CC* *v_]C*
    # ]y{motion}              C String decode.
    # ]yy
    # {Visual}]y
    # ]C{motion}
    # ]CC
    # {Visual}]C



  # [keys.prompt] #Ⓝ ⧁ Prompt
  #   # !!! Remapping currently not supported
  #   'A-b'	= "no_op"	#	 「   」 「move_prev_word_end」
  #   'C-b'	= "no_op"	#	 「   」 「Backward a char」
  #   'C-f'	= "no_op"	#	 「   」 「Forward a char」
  #   'C-a'	= "no_op"	#	 「   」 「Move prompt start」
  #   'C-e'	= "no_op"	#	 「   」 「Move prompt end」
  #   'C-w'	= "no_op"	#	 「   」 「Delete previous word」
  #   'A-d'	= "no_op"	#	 「   」 「Delete next word」
  #   'C-h'	= "no_op"	#	 「   」 「Delete previous char」
  #   'C-d'	= "no_op"	#	 「   」 「Delete next char」
  #   'C-s'	= "no_op"	#	 「   」 「Insert a word」
  #   'C-p'	= "no_op"	#	 「   」 「Select previous history」
  #   'C-n'	= "no_op"	#	 「   」 「Select next history」

  #   'Escape'	= "Close prompt" 	# Close prompt 	≝「$!」 「Close prompt」
  #   'C-c'   	= "Close prompt" 	# Close prompt 	≝「^ c」 「Close prompt]
  #   'Enter' 	= "Open selected"	# Open selected	≝「$!」 「Open selected」

  #   #⧁ Move ——————————————————————————————————————————————————————————————————————
  #   #        	Char                         	                                                	 
  #   'A-l'    	= 'move_prev_char'           	# 🢔c Move   prev char                           	 「^ b」 「」
  #   'A-;'    	= 'move_next_char'           	# c🢖 Move   next char                           	 「^ f」 「」
  #   #        	Word                         	                                                	 
  #   'A-d'    	= 'move_prev_word_start'     	# 🢔w Move   this word start                     	 「⌥ d」 「delete next word」
  #   'A-f'    	= 'move_next_word_end'       	# w🢖 Move   this word end                       	≝「⌥ f」 「Forward a word」
  #   'A-D'    	= 'move_prev_long_word_start'	# 🢔W Move   this WORD start                     	⇧「⇧ b」 「」
  #   'A-F'    	= 'move_next_long_word_start'	# W⤞ Move   next WORD end   (this end + ␣)  	⇧「⇧ w」 「」
  #   'C-left' 	= 'move_prev_long_word_start'	# 🢔W Move   this WORD start                     	⇧「⇧ b」 「」
  #   'C-right'	= 'move_next_long_word_start'	# W⤞ Move   next WORD end   (this end + ␣)  	⇧「⇧ w」 「」
  #   'Left'   	= "move_prev_char"           	# 🢔c Move   prev char                           	 「  ◀」 「」
  #   'Right'  	= "move_next_char"           	# c🢖 Move   next char                           	 「  ▶」 「」
  #   'A-left' 	= 'move_prev_word_end'       	# ⤝w Move   prev word end   (this start + ␣)	 「⌥◀」 「」
  #   'A-right'	= 'move_next_word_start'     	# w⤞ Move   next word start (this end   + ␣)	 「⌥▶」 「」
  #   #        	Line                         	                                                	 
  #   'A-a'    	= 'move_to_prompt_start'     	# ⭰▋ Move   line start                          	 「⭰」 「Move prompt start」
  #   'A-A'    	= 'move_to_prompt_end'       	# ⭲▋ Move   line end                            	 「⭲」 「Move prompt end」
  #   'End'    	= "Move prompt end"          	# ⭰▋ Move   line start                          	≝「⭰」 「Move prompt start」
  #   'Home'   	= "Move prompt start"        	# ⭲▋ Move   line end                            	≝「⭲」 「Move prompt end」

  #   #⧁ Change ——————————————————————————————————————————————————————————————————————
  #   'A-x'      	= 'delete_selection'       	# ×▋                     	 「  」 「」
  #   #          	Char                       	                         	 
  #   'A-h'      	= 'delete_char_backward'   	# ⌫c × char ←            	≝「^ h」 「delete_char_backward」
  #   'A-6'      	= 'delete_char_forward'    	# ⌦c × char →            	≝「^ d」 「delete_char_forward」
  #   'backspace'	= 'delete_char_backward'   	# ⌫c × char ←            	≝「⌫」 「delete_char_backward」
  #   'del'      	= 'delete_char_forward'    	# ⌦c × char →            	≝「⌦」 「delete_char_forward」
  #   #          	Word                       	                         	 
  #   #          	Line                       	                         	 
  #   'C-u'      	= "Delete to start of line"	# Delete to start of line	「   」 「」
  #   'C-k'      	= "Delete to end of line"  	# Delete to end of line  	「   」 「」

  #   'C-v'	= 'paste_before'	# ⤸📋 Paste before selection <i class='fa fa-clipboard'></i>⤹	 「^ s」 「」

  #   #⧁ Select ——————————————————————————————————————————————————————————————————————
  #   'A-a'    	= 'extend_to_line_start'           	# ⭰▋ Move     line start + select	 「   」 「」
  #   'A-A'    	= 'extend_to_line_end'             	# ⭲▋ Move     line end   + select	 「   」 「」
  #   'A-j'    	= "Select next history"            	# Select next history            	 「^ n」 「」
  #   'A-k'    	= "Select previous history"        	# Select previous history        	 「^ p」 「」
  #   'Down'   	= "Select next history"            	# Select next history            	≝「 ▼」 「」
  #   'Up'     	= "Select previous history"        	# Select previous history        	≝「 ▲」 「」
  #   'Tab'    	= "Select next completion item"    	# Select next completion item    	≝「 ⭾」 「」
  #   'BackTab'	= "Select previous completion item"	# Select previous completion item	≝⇧「$!」 「」


  # [keys.picker] #Ⓝ 🅟 Picker
  # !!! Remapping currently not supported
  #   'Escape'	= "Close picker"	# Close picker	≝「$!」 「Close picker」
  #   'C-c'   	= "Close picker"	# Close picker	≝「^ c」 「Close picker」
  #   'C-k'   	= "no_op"       	#             	 「   」 「Previous entry」
  #   'C-j'   	= "no_op"       	#             	 「   」 「Next entry」
  #   'C-p'   	= "no_op"       	#             	 「   」 「Previous entry」
  #   'C-n'   	= "no_op"       	#             	 「   」 「Next entry」
  #   'C-s'   	= "no_op"       	#             	 「   」 「Open horizontally」
  #   'C-v'   	= "no_op"       	#             	 「   」 「Open vertically」

  #   'Down' 	= "N/A"	# Select Next entry    	≝「 ▼」 「」
  #   'Up'   	= "N/A"	# Select Previous entry	≝「 ▲」 「」
  #   'A-j'  	= "N/A"	# Select Next entry    	 「^ j」 「」
  #   'A-k'  	= "N/A"	# Select Previous entry	 「^ k」 「」
  #   # 'A-f'	= "N/A"	# Select Next entry    	 「^ p」 「」
  #   # 'A-d'	= "N/A"	# Select Previous entry	 「^ n」 「」

  #   'A-f'	= 'vsplit'	#  🗗→ Open right  (Vertical) 	「^ v」 「」
  #   'A-m'	= 'hsplit'	# 🗗↓ Open bottom (Horizontal)	「^ s」 「」

  #   'C-space'	= "N/A"	# Filter options	≝「^ ␣」 「Filter options」
  #   'Enter'  	= "N/A"	# Open selected 	≝「  ⏎」 「Open selected」


# —————————————————————————————————————————————————————————————————————————————————————————————————



[keys.select] #Ⓢ Select/Extend mode
  #'esc'	= 'exit_select_mode'	#	「  ⎋」 「exit_select_mode」
  'e'   	= 'normal_mode'     	#	「  v」 「extend_next_word_end」
  #Ⓢ Test ——————————————————————————————————————————————————————————————————————
  #Ⓢ Free ——————————————————————————————————————————————————————————————————————

  'C-a'	= ['save_selection','select_all']	# 🖈∀▋	 「   」 「」
  # 'A'	= ['save_selection','select_all']	# 🖈∀▋	⇧「   」 「」


  #Ⓢ           	Compat with non-modal editors	 
    'C-o'      	= 'file_picker'              	# ☰␜ Open file picker	 「␣ f」 「jump_backward」
    'C-s'      	= ':write'                   	# save file          	 「  ^s」 「save_selection」 <i class='fa fa-save'></i>
    # 'C-S-s'  	= 'Save As'                  	# ???                	⇧[⇧^s」 「」
    'C-n'      	= ':new'                     	# 🗋 new buffer       	「 ^n」 「」
    # 'C-S-t'  	= 'open-last-closed'         	# ???                	⇧[⇧^t」 「」
    # 'C-plus' 	= 'zoom-in'                  	# ??? 🔎⨭             	「 ^+」 「」
    # 'C-minus'	= 'zoom-out'                 	# ??? 🔎−             	「 ^-」 「」

  #Ⓢ   	Misc               	 
  'z'  	= 'toggle_comments'	# un-/comment the selections              	「 ^c」 「☰👁」
  'C-/'	= 'toggle_comments'	# un-/comment the selections              	「 ^c」 「」 !!!fail
  'C-m'	= 'decrement'      	# ⊖ Decrement object (number) under cursor	「 ^x」 「」  o̠ <span class='cd'>o&#800;</span>
  'C-,'	= 'increment'      	# ⊕ Increment object (number) under cursor	「 ^a」 「」  o̟ <span class='cd'>o&#799;</span> !!!fails

  #Ⓢ   	Copy                                	 
  'c'  	= 'yank'                            	# 🗐 Copy selection <i class='fa fa-copy'></i>                                     	 「  c」 「change_selection」
  'C-c'	= 'yank_main_selection_to_clipboard'	# 📋 Copy main selection into system clipboard <i class='fa fa-clipboard'></i>     	 「␣⇧y」 「toggle_comments」
  'C'  	= 'yank_main_selection_to_clipboard'	# 📋 Copy main selection into system clipboard <i class='fa fa-clipboard'></i>     	⇧「␣⇧y」 「copy_selection_on_next_line」
  'A-c'	= 'yank_joined_to_clipboard'        	# ∀▋📋 Copy all selections to clipboard (joined) ⨝📋 <i class='fa fa-clipboard'></i>	 「␣ y」 「」

  #Ⓢ Shell 	                 	 
    # '|'  	= 'shell_pipe'   	# Pipe each selection through shell command, replacing with output	⇧「⇧ \」 「shell_pipe」
    "A-\\" 	= 'shell_pipe_to'	# Pipe each selection into    shell command, ignoring       output	 「 ⌥\」 「」
    # 'A-|'	= 'shell_pipe_to'	# Pipe each selection into    shell command, ignoring       output	⇧「⇧⌥\」 「shell_pipe_to」

  #Ⓢ Move ——————————————————————————————————————————————————————————————————————
    #Ⓢ Cursor@Home
    'j'  	= 'extend_line_down' 	# ▼                    	 「  h」 「extend_line_down」
    'k'  	= 'extend_line_up'   	# ▲                    	 「  j」 「extend_line_up」
    'l'  	= 'extend_char_left' 	# ◀                    	 「  k」 「extend_char_right」
    ';'  	= 'extend_char_right'	# ▶                    	 「  l」 「」
    'm'  	= 'half_page_down'   	# ⤈ Move half page down	 「 ^d」 「☰🧩」
    ','  	= 'half_page_up'     	# ⤉ Move half page up  	 「 ^u」 「keep_primary_selection」
    'C-j'	= 'page_down'        	# ⇟ Move      page down	 「 ^d」 「」
    'C-k'	= 'page_up'          	# ⇞ Move      page up  	 「 ^u」 「」

    #Ⓢ        	word
    'd'       	= 'extend_prev_word_start'     	# 🢔w Extend   this word start                 	   「  b」 「」
    'f'       	= 'extend_next_word_end'       	# w🢖 Extend   this word end                   	   「  e」 「extend_next_char」
    'A-d'     	= 'extend_prev_word_start'     	# 🢔w Extend   this word start                 	   「   」 「」
    # 'A-d'   	= 'extend_prev_word_end'       	# ⤝w Extend   prev word end   (this start + ␣)	 「   」 「」 !!!missing
    'A-f'     	= 'extend_next_word_start'     	# w⤞ Extend   next word start (this end   + ␣)	 「  w」 「」
    'D'       	= 'extend_prev_long_word_start'	# 🢔W Extend   this WORD start                 	  ⇧「⇧ b」 「」
    'F'       	= 'extend_next_long_word_end'  	# W🢖 Extend   this WORD end                   	  ⇧「⇧ e」 「extend_prev_char」
    'A-D'     	= 'extend_prev_long_word_start'	# 🢔W Extend   this WORD start                 	  ⇧「⇧ b」 「」
    'A-F'     	= 'extend_next_long_word_start'	# W⤞ Extend   next WORD end   (this end + ␣)  	⇧「⇧ w」 「」
    # 'r'     	= 'extend_next_word_start'     	# W⤞ Extend   next WORD start (this end + ␣)  	 「⇧ w」 「」
    # 'R'     	= 'extend_next_long_word_start'	# W⤞ Extend   next WORD start (this end + ␣)  	 「⇧ w」 「」
    # 'A-r'   	= 'extend_next_word_start'     	# W⤞ Extend   next WORD start (this end + ␣)  	 「⇧ w」 「」
    # 'A-R'   	= 'extend_next_long_word_start'	# W⤞ Extend   next WORD start (this end + ␣)  	 「⇧ w」 「」
    'C-left'  	= 'extend_prev_long_word_start'	# 🢔W Extend   this WORD start                 	   「⇧ b」 「」
    'C-right' 	= 'extend_next_long_word_start'	# W⤞ Extend   next WORD end   (this end + ␣)  	 「⇧ w」 「」
    # 'A-left'	= 'extend_prev_word_end'       	# ⤝w Extend   prev word end   (this start + ␣)	 「   」 「」 !!!missing
    'A-left'  	= 'extend_prev_word_start'     	# 🢔w Extend   this word start                 	   「   」 「」
    'A-right' 	= 'extend_next_word_start'     	# w⤞ Extend   next word start (this end   + ␣)	 「  w」 「」

    #Ⓢ      	Line
    # 'home'	= 'extend_to_line_start'	# ⭰▋ Extend     line start	 「home」 「extend_to_line_start」
    # 'end' 	= 'extend_to_line_end'  	# ▋⭲ Extend     line end	 「end」 「extend_to_line_end」
    'a'     	= 'extend_to_line_start'	# ⭰▋ Extend     line start	 「Home」 「」
    'A'     	= 'extend_to_line_end'  	# ▋⭲ Extend     line end	 「End」 「」

    #Ⓢ   	Paragraph
    # '<'	= 'extend_to_para_start'	# 🢔¶ Extend previous paragraph !!!missing	⇧「   」 「」
    # '>'	= 'extend_to_para_end'  	# ¶🢖 Extend next     paragraph !!!missing	⇧「   」 「」

    'r'	= 'repeat_last_motion'	# ∞ Repeat last motion (f/t/m)	 「 ⌥.」 「replace」

    #Ⓢ   	Search
    'w'  	= 'extend_next_char'     	# 🔍   Extend       next     char                               	 「  f」 「extend_next_word_start」
    'W'  	= 'extend_prev_char'     	# 🔎   Extend       previous char                               	⇧「⇧ f」 「extend_next_long_word_start」
    'A-w'	= 'extend_till_char'     	# 🔍₋₁ Extend 'till next     char                               	 「  t」 「」
    'A-W'	= 'extend_till_prev_char'	# 🔎₋₁ Extend 'till previous char                               	⇧「⇧ t」 「」
    'S'  	= 'rsearch'              	# 🔍𝖗 for previous regex pattern                                	 「⇧ /」 「split_selection」
    's'  	= 'search'               	# 🔎𝖗 for          regex pattern                                	⇧「  /」 「select_regex」
    '.'  	= 'extend_search_prev'   	# 🢔◎ ◎͔ Extend previous search match                           	 「⇧ n」 「goto_last_modification!!!」
    '/'  	= 'extend_search_next'   	# ◎🢖 ◎͕ Extend next     search match                           	 「  n」 「search」
    '>'  	= 'extend_search_prev'   	# 🢔¶    Extend paragraph start #!!!missing yet                 	⇧「⇧ [」 「indent」
    '?'  	= 'extend_search_next'   	# ¶🢖    Extend paragraph end   #!!!missing yet                 	⇧[⇧ ]」 「rsearch]
    '8'  	= 'search_selection'     	# 𝖗🢔▋ Use current selection as the search pattern !!!missing ∀*	 「⇧ 8」 「<8>」

    #Ⓢ          	Compat with non-modal editors
    'C-home'    	= 'goto_file_start'     	# ⇱ line number `<n>` else file start	 「  g」 「」
    'C-end'     	= 'goto_last_line'      	# ⇲ file end                         	 「  e」 「」
    'C-S-tab'   	= 'goto_previous_buffer'	# ⎗                                  	⇧[ⓖp」 「」 !!!fail
    'C-tab'     	= 'goto_next_buffer'    	# ⎘                                  	 「ⓖn」 「」 !!!fail
    'C-pageup'  	= 'goto_previous_buffer'	# ⎗                                  	 「   」 「」
    'C-pagedown'	= 'goto_next_buffer'    	# ⎘                                  	 「   」 「」
    'A-pageup'  	= 'jump_backward'       	# ⎗̡                                 	 「   」 「」
    'A-pagedown'	= 'jump_forward'        	# ⎘̡                                 	 「   」 「」
    # 'C-j'     	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist   	 「 ^o」 「」
    # 'C-;'     	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist   	 「 ^i」 「」  !!!fail

    '1'  	= 'goto_previous_buffer'	# ⎗ !!!missing ∀*                               	 「ⓖp」 「<1>」
    '2'  	= 'goto_next_buffer'    	# ⎘ !!!missing ∀*                               	 「ⓖn」 「<2>」
    'A-1'	= 'goto_previous_buffer'	# ⎗                                             	 「ⓖp」 「」
    'A-2'	= 'goto_next_buffer'    	# ⎘                                             	 「ⓖn」 「」
    '3'  	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist !!!missing ∀*	 「 ^o」 「<3>」
    '4'  	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist !!!missing ∀*	 「 ^i」 「<4>」
    'A-3'	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist              	 「 ^o」 「」
    'A-4'	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist              	 「 ^i」 「」

  #Ⓢ Select ——————————————————————————————————————————————————————————————————————
    #Ⓢ       	Compat with non-modal editors    	 
    'C-a'    	= ['save_selection','select_all']	# 🖈, ∀▋                                                     	「⇧ 5」 「increment」
    'A-down' 	= 'copy_selection_on_next_line'  	# 🠷 Copy selection onto the next     line (add cursor below)	「⇧ c」 「」
    'A-up'   	= 'copy_selection_on_prev_line'  	# 🠵 Copy selection onto the previous line (add cursor above)	 「⇧⌥c」 「」
    'S-left' 	= 'extend_char_left'             	#                                                           	「Ⓢh/◀」 「」
    'S-down' 	= 'extend_line_down'             	#                                                           	「Ⓢj/▼」 「」
    'S-up'   	= 'extend_line_up'               	#                                                           	「Ⓢk/▲」 「」
    'S-right'	= 'extend_char_right'            	#                                                           	「Ⓢl/▶」 「」


    'A-g'	= 'save_selection'	# 🖈 Save the current selection to the jumplist	 「  ^s」 「」
    'C-g'	= 'save_selection'	# 🖈 Save the current selection to the jumplist	 「  ^s」 「」
    'G'  	= 'save_selection'	# 🖈 Save the current selection to the jumplist	 「  ^s」 「goto_line」

    'J'  	= 'extend_line'          	# ⮒ Select current line, if already selected, extend to next line       	⇧「  x」 「join_selections」
    'E'  	= 'extend_to_line_bounds'	# ⎯ Extend selection to line bounds (line-wise selection)               	⇧「  x」 「move_next_long_word_end」
    'A-e'	= 'extend_to_line_bounds'	# ⎯ Extend selection to line bounds (line-wise selection)               	 「⇧ x」 「」
    # "" 	= 'expand_selection'     	# Expand selection to parent syntax node TODO: pick a key (**TS**)      	「   」 「expand_selection」
    # '5'	= 'select_paragraph'     	# ¶▋ Select this paragraph !!!missing ∀* !!! command not implemented yet	 「  」 「<5>」
    # '%'	= 'select_all'           	# ∀▋ Select entire file                                                 	⇧「⇧ 5」 「select_all」

    'A-j'	= 'copy_selection_on_next_line'	# 🠷 Copy selection onto the next     line (add cursor below)	「⇧ c」 「」
    'A-k'	= 'copy_selection_on_prev_line'	# 🠵 Copy selection onto the previous line (add cursor above)	 「⇧⌥c」 「」
    'A-s'	= 'select_regex'               	# 𝖗▋ Select all regex matches inside selections	 「  s」 「split_selection_on_newline」
    'N'  	= 'split_selection'            	# ䷖𝖗 on regex matches	⇧「⇧ s」 「search_prev」
    'A-n'	= 'split_selection_on_newline' 	# ䷖␤ (﹨␤)	 「 ⌥s」 「」

    "'"    	= 'collapse_selection'        	# 🢖🢔 Collapse selection onto a single cursor  	 「  ;」 「」
    "A-'"  	= 'flip_selections'           	# ⮀ Flip selection cursor and anchor          	「 ⌥;」 「」
    'A-a'  	= 'flip_selections'           	# ⮀ Flip selection cursor and anchor          	⇧「 ⌥;」 「」
    'A-A'  	= 'flip_selections'           	# ⮀ Flip selection cursor and anchor          	⇧「 ⌥;」 「」
    'A-l'  	= 'rotate_selections_backward'	# ⟲ Rotate main selection backward            	 「⇧ 9」 「」
    'A-;'  	= 'rotate_selections_forward' 	# ⟳ Rotate main selection forward             	 「⇧ 0」 「flip_selections」
    'A-u'  	= 'remove_primary_selection'  	# ×         the primary selection             	 「 ⌥,」 「earlier」
    'A-i'  	= 'keep_primary_selection'    	# ×∀ all but the primary selection (keep only)	 「  ,」 「」
    'A-U'  	= 'no_op'                     	# ×× undo remove selection                    	⇧「 ⌥,」 「earlier」 !!!missing yet
    'K'    	= 'keep_selections'           	# ᵏ𝖗 selections not matching the regex (keep) 	⇧「⇧ k」 「keep_selections」
    'L'    	= 'remove_selections'         	# ×𝖗 selections     matching the regex        	⇧「⇧⌥k」 「」
    # 'A-:'	= 'ensure_selections_forward' 	# ???                                         	⇧「⇧⌥;」 「」

    # '_'  	= 'trim_selections'	# ✁Trim whitespace from the selection	⇧「⇧ -」 「trim_selections」
    'minus'	= 'trim_selections'	# ✁Trim whitespace from the selection	 「⇧ -」 「」
    # '+'  	= 'dupe_selections'	# 🗐Duplicate selection (currently nonfunctional/disabled)	⇧「⇧ =」 「dupe_selections」

  #Ⓢ Change ——————————————————————————————————————————————————————————————————————
    #            	Compat with non-modal editors
    'A-del'      	= ['extend_next_word_end',       	# ⌦w                              	 「   」 「」
                 	   'delete_selection']           	# × word →                        	 
    'C-del'      	= ['extend_next_long_word_end',  	# ⌦W                              	 「   」 「」
                 	   'delete_selection']           	# × Word →                        	 
    'A-backspace'	= ['extend_prev_word_start',     	# ⌫w                              	 「   」 「」
                 	   'delete_selection']           	# × word ←                        	 
    'C-backspace'	= ['extend_prev_long_word_start',	# ⌫W                              	 「   」 「」
                 	   'delete_selection']           	# × Word ←                        	 
    # 'del'      	= 'delete_selection'             	# ×▋                              	 「  d」 「」
    'S-del'      	= 'delete_selection_noyank'      	# 🕱▋                              	 「 ⌥d」 「」
    'S-ret'      	= 'open_below'                   	# ⭣␤ Open new line below selection	 「  o」 「」
    'ret'        	= 'open_above'                   	# ⭡␤ Open new line above selection	⇧「⇧ o」 「」

    # '.'      	= 'N/A'                              	# ∞ Repeat last change            	 「.」 「n/a」
    '6'        	= 'delete_char_forward'              	# ⌦ !!!missing ∀*                 	 「 ⌦」 「<5>」
    'x'        	= 'delete_selection'                 	# ×▋                              	 「  d」 「extend_line」
    'A-x'      	= 'delete_selection_noyank'          	# 🕱▋ (...without yanking)         	 「 ⌥d」 「」
    'A-c'      	= 'change_selection'                 	# Δ                               	 「  c」 「change_selection_noyank」
    'h'        	= 'delete_char_backward'             	# ⌫c × char ←                     	 「⌫」 「move_char_left」
    'H'        	= 'delete_char_forward'              	# ⌦c × char →                     	⇧「⌦」 「」
    'A-h'      	= ['extend_prev_word_start',         	# ⌫w                              	 「   」 「」
               	   'delete_selection']               	# × word ←                        	 
    'A-H'      	= ['extend_next_word_end',           	# ⌦w                              	 「   」 「」
               	   'delete_selection']               	# × word →                        	 
    'C-h'      	= ['extend_prev_long_word_start',    	# ⌫W                              	 「   」 「」
               	   'delete_selection']               	# × Word ←                        	 
    'C-x'      	= ['yank_main_selection_to_clipboard'	                                  	,
               	   'delete_selection']               	#                                 		×📋 cut to clipboard <i class='fa fa-clipboard'></i>	「   」 「decrement」
    'backspace'	= 'delete_char_backward'             	# ⌫                               	 「I.bs」 「」
    'X'        	= 'join_selections'                  	# ×␤ ⨝ Join lines inside selection	⇧「⇧ j」 「extend_to_line_bounds」

    # 'backspace'	= 'delete_char_backward'	# ⌫c × char ←	 「backspace」 「delete_char_backward」
    # 'C-h'      	= 'delete_char_backward'	# ⌫c × char ←	 「C-h」 「delete_char_backward」
    'del'        	= 'delete_char_forward' 	# ⌦c × char →	 「delete」 「delete_char_forward」
    # 'C-d'      	= 'delete_char_forward' 	# ⌦c × char →	 「C-d」 「delete_char_forward」

    't'	= 'replace'            	# 🗘  Replace with a character	 「  r」 「find_till_char」
    'T'	= 'replace_with_yanked'	# 🗘ʸ Replace with yanked text	⇧「⇧ r」 「till_prev_char」

    'B'  	= 'switch_case'        	# 𝕒⇋𝔸 (selection)	 「⇧ `」 「move_prev_long_word_start」
    'C-b'	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)	⇧「⇧⌥`」 「」
    # '~'	= 'switch_case'        	# 𝕒⇋𝔸 (selection)	 「⇧ `」 「switch_case」
    # '`'	= 'switch_to_lowercase'	# 𝕒𝔸  (selection)	 「  `」 「switch_to_lowercase」
    # '`'	= 'switch_case'        	# 𝕒⇋𝔸 (selection)	 「⇧ `」 「switch_to_lowercase」
    # '~'	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)	 「⇧⌥`」 「switch_case」
    '^'  	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)	 「⇧⌥`」 「」
    'A-`'	= 'switch_to_lowercase'	# 𝔸𝕒  (selection)	 「   `」 「switch_to_uppercase」

    'A-,'	= 'unindent'	# ⇚ (selection)	「⇧,」 「remove_primary_selection」
    'A-.'	= 'indent'  	# ⇛ (selection)	「⇧.」 「repeat_last_motion」

    # 'q'	= 'record_macro'   	# ⏺ Start/stop macro recording to the selected register	 「  q」 「record_macro」
    # 'Q'	= 'replay_macro'   	#⇧[⇧ q] replay_macro]                                  	▶  Play back a recorded macro from the selected register
    # '"'	= 'select_register'	# ®  Select a register to yank to or paste from        	 「  '<reg>」 「select_register」

    # 'b'	= 'N/Arepeat_last_change' 	# ∞ Repeat last change !!! no command yet                   	⇧「  .」 「move_prev_word_start」
    # '.'	=  'N/Arepeat_last_change'	# ∞ Repeat last change                                      	 「  .」 「n/arepeat_last_change」
    # 'i'	= 'insert_mode'           	# ⁁⤸ Insert before selection                                	 「  i」 「insert_mode」
    'o'  	= 'append_mode'           	# ⤹⎀ Insert after selection (append)                        	 「  a」 「open_above」
    'I'  	= 'open_above'            	# ⭡␤ Open new line above selection                          	⇧「⇧ o」 「prepend_to_line」
    'O'  	= 'open_below'            	# ⭣␤ Open new line below selection                          	 「  o」 「append_to_line」
    'u'  	= 'undo'                  	# ⎌ Undo change                                             	 「  u」 「undo mode」
    'y'  	= 'redo'                  	# ↷ Redo change                                             	 「⇧ u」 「yank」
    'U'  	= 'earlier'               	# 🕘 Move backward in history   <i class='fa fa-history'></i>	⇧「 ⌥u」 「redo」
    'Y'  	= 'later'                 	# 🕒 Move forward in history ⏱ <i class='fa fa-clock-o'></i> 	⇧「⇧⌥u」 「」
    'C-y'	= 'redo'                  	# ↷ Redo change                                             	 「⇧ u」 「」
    'v'  	= 'paste_after'           	# 📋⤹ Paste after selection                                  	 「  p」 「select_mode」
    'C-v'	= 'paste_clipboard_after' 	# 📋⤹ Paste after selection                                  	 「␣ p」 「」
    'V'  	= 'paste_before'          	# ⤸📋 Paste before selection                                 	 「⇧ p」 「」
    'C-z'	= 'undo'                  	# ⎌ Undo change                                             	 「  u」 「」
    'C-Z'	= 'redo'                  	# ↷ Redo change !!!fail                                     	⇧「⇧ u」 「」
    # 'I'	= 'prepend_to_line'       	# ⁁⭰ Insert at the start of the line                        	⇧「⇧ i」 「prepend_to_line」
    # 'A'	= 'append_to_line'        	# ⭲⎀ Insert at the end of the line                          	⇧「⇧ a」 「append_to_line」

  #Ⓢ Select manipulation ————————————————————————————————————————————————————————————————————
    '('  	= 'rotate_selection_contents_backward'	# ⟲ Rotate selection contents backward	⇧「⇧⌥9」 「rotate_selections_backward」
    ')'  	= 'rotate_selection_contents_forward' 	# ⟳ Rotate selection contents forward	⇧「⇧⌥0」 「rotate_selections_forward」
    '7'  	= 'align_selections'                  	# ⥂ Align selection in columns !!!missing ∀*	 「⇧ 7」 「<7>」
    # '&'	= 'align_selections'                  	# ⥂ Align selection in columns	⇧「⇧ 7」 「align_selections」
    # '='	= 'format_selections'                 	# ℱ Format selection (currently nonfunctional/disabled) (LSP)	 「  =」 「format_selections」

  #Ⓢ Shell	#                      	#
  # '!'   	= 'shell_insert_output'	# 🢔$ Run shell command, inserting output before each selection	⇧「⇧  1」 「shell_insert_output」
  '@'     	= 'shell_append_output'	# $🢖 Run shell command, appending output after  each selection	⇧「⇧⌥1」 「」
  # 'A-!' 	= 'shell_append_output'	# $🢖 Run shell command, appending output after  each selection	「⇧⌥1」 「shell_append_output」


  ##Ⓢ ☰Minor modes

  [keys.select.'p'] #Ⓢ 'view' ☰👁 View mode intended for scrolling and manipulating the view without changing the selection 「$!」 「paste_after」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	「up」 「scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	# !!!duplciate with align_view_bottom           	 「   」 「page_up」
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」
  [keys.select.'P'] #Ⓢ ☰👁ₛ 'sticky', persistent 「$!」 「paste_before」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	「up」 「scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	# !!!duplciate with align_view_bottom           	 「   」 「page_up」
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」
  [keys.select.'Z'] #Ⓢ ☰👁ₛ 'sticky', persistent ⇧「$!」 「paste_before」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	「up」 「scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	# !!!duplciate with align_view_bottom           	 「   」 「page_up」
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」


  [keys.select.'g'] #Ⓢ ☰ Goto mode Jumps to various locations 「$!」 「goto」
    'b'  	= 'no_op'                   	#                                    	 「   」 「goto_window_bottom」
    'h'  	= 'no_op'                   	#                                    	 「   」 「goto_line_start」
    'p'  	= 'no_op'                   	#                                    	 「   」 「goto_previous_buffer」
    'j'  	= 'goto_last_line'          	# ⇲ file end                         	 「  e」 「」
    'k'  	= 'goto_file_start'         	# ⇱ line number `<n>` else file start	 「  g」 「goto_line_end」
    # 'g'	= 'goto_file_start'         	# ⇱ line number `<n>` else file start	 「  g」 「goto_file_start」
    # 's'	= 'goto_first_nonwhitespace'	# line start 1ₛₜ non-whitespace char 	 「  s」 「goto_first_nonwhitespace」
    'a'  	= 'goto_first_nonwhitespace'	# line start 1ₛₜ non-whitespace char 	 「  s」 「goto_last_accessed_file」
    'l'  	= 'goto_line_start'         	# line start ⭰                       	 「  h」 「」 !!! change to 🢔¶ when implemented
    ';'  	= 'goto_line_end'           	# line end   ⭲                       	 「  l」 「」 !!! change to ¶🢖 when implemented
    # 'f'	= 'goto_file'               	# files in the selection             	 「  f」 「goto_file」
    'm'  	= 'goto_window_bottom'      	# 🗔⭳ screen bottom                   	 「  b」 「goto_last_modified_file」
    ','  	= 'goto_window_top'         	# 🗔⭱ screen top                      	 「  t」 「」
    'n'  	= 'goto_window_center'      	# 🗔· screen middle                   	 「  c」 「goto_next_buffer」
    # 'd'	= 'goto_definition'         	# ≝      definition (LSP)            	 「  d」 「goto_definition」
    'F12'	= 'goto_definition'         	# ≝      definition (LSP)            	 「  d」 「」
    'e'  	= 'goto_type_definition'    	# ≝ type definition (LSP)            	 「  y」 「goto_last_line」
    # 'y'	= 'goto_type_definition'    	# ≝ type definition (LSP)            	 「  y」 「goto_type_definition」
    # 'r'	= 'goto_reference'          	# 🅁※ references (LSP)                	 「  r」 「goto_reference」
    # 'i'	= 'goto_implementation'     	# 🄸 implementation (LSP)             	 「  i」 「goto_implementation」
    't'  	= 'goto_implementation'     	# 🄸 implementation (LSP)             	 「  i」 「goto_window_top」
    'c'  	= 'goto_last_accessed_file' 	# 🕮␜ file last accessed/alternate    	 「  a」 「goto_window_center」
    'v'  	= 'goto_last_modified_file' 	# ✎␜ file last modified/alternate    	 「  m」 「」
    '1'  	= 'goto_previous_buffer'    	# buffer previous                    	 「  p」 「」 !!! blocked by ∀* universal argument
    '2'  	= 'goto_next_buffer'        	# buffer next                        	 「  n」 「」 !!! blocked by ∀* universal argument
    '3'  	= 'jump_backward'           	# ⎗̡ Jump backward on the jumplist   	 「   」 「」 !!!missing ∀*
    '4'  	= 'jump_forward'            	# ⎘̡ Jump forward  on the jumplist   	 「   」 「」 !!!missing ∀*
    'u'  	= 'goto_last_modification'  	# 🕘 last modification in current file	 「.」 「」 <i class='fa fa-history'></i>
    # '.'	= 'goto_last_modification'  	# 🕘 last modification in current file	 「.」 「goto_last_modification」 <i class='fa fa-history'></i>
    # "'"	= 'goto-char#'              	# c#                                 	 「   」 「」 !!! not available

  [keys.select.'n'] #Ⓢ ☰🧩  Match mode ☰<i class='fa fa-puzzle-piece'></i> 「$!」 「」
    'n'	= 'match_brackets'          	# 🢔()🢖 Goto matching   bracket (TS)              	 「  m」 「」
    '.'	= 'match_brackets'          	# 🢔(   Goto next left  bracket (TS)              	 「  」 「」 !!!missing
    '/'	= 'match_brackets'          	#   )🢖 Goto next right bracket (TS)              	 「  」 「」 !!!missing
    'i'	= 'surround_add'            	# (+)  Surround current selection with <char>    	 「  s」 「」
    't'	= 'surround_replace'        	# (🗘) Replace surround character <from> with <to>	 「  r」 「」
    'x'	= 'surround_delete'         	# (×)  Delete  surround character <char>         	 「  d」 「」
    'e'	= 'select_textobject_around'	# 🢔O🢖  Select around textobject                  	 「  a」 「」
    'a'	= 'select_textobject_inner' 	# 🢖O🢔  Select inside textobject                  	 「  i」 「」

  [keys.select.'C-w'] #Ⓢ ☰🗔  Window mode 「Ⓝ^ w」 「」
    's'      	= 'no_op'           	#                                      	   「  」 「hsplit」
    'C-s'    	= 'no_op'           	#                                      	   「  」 「hsplit」
    'v'      	= 'no_op'           	#                                      	   「  」 「vsplit」
    'C-v'    	= 'no_op'           	#                                      	   「  」 「vsplit」
    'F'      	= 'no_op'           	#                                      	  ⇧「  」 「goto_file」
    'j'      	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「  j」 「jump_view_down」
    'k'      	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「  k」 「jump_view_up」
    'l'      	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「  h」 「jump_view_right」
    ';'      	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「  l」 「」
    'C-j'    	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「 ^j」 「jump_view_down」
    'C-k'    	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「 ^k」 「jump_view_up」
    'C-l'    	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「 ^h」 「jump_view_right」
    'C-;'    	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「 ^l」 「」 #!!!fails
    'C-down' 	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	 「▼」 「」
    'C-up'   	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	 「▲」 「」
    'C-left' 	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「◀」 「」
    'C-right'	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「▶」 「」
    'w'      	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「  w」 「rotate_view」
    'C-w'    	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「 ^w」 「rotate_view」
    'f'      	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「  v」 「vsplit」
    'C-f'    	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「 ^v」 「vsplit」
    'm'      	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「  s」 「」
    'C-m'    	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「 ^s」 「」
    'h'      	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'C-h'    	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'g'      	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'C-g'    	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'q'      	= 'wclose'          	# ×🗔  Close         current window     	 「  q」 「wclose」
    'C-q'    	= 'wclose'          	# ×🗔  Close         current window     	 「 ^q」 「wclose」
    'o'      	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「  o」 「wonly」
    'C-o'    	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「 ^o」 「wonly」
    'x'      	= 'wonly'           	# ×∀🗔 Close all but current window     	 「  o」 「」
    'C-x'    	= 'wonly'           	# ×∀🗔 Close all but current window     	 「 ^o」 「」
    'down'   	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「▼」 「jump_view_down」
    'up'     	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「▲」 「jump_view_up」
    'left'   	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	≝「◀」 「jump_view_left」
    'right'  	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	≝「▶」 「jump_view_right」

  [keys.select.'space'] #Ⓢ ☰␣  Space mode 「Ⓝ ␣」 「」
    # 'space'	= 'insert_mode'            	# ⁁⤸ Insert before selection                      	 「  i」 「」 !!!panick! !!!missing
    'ret'    	= 'command_mode'           	# Ⓒ Enter command mode                            	 「  ⎋」 「」
    'P'      	= 'no_op'                  	#                                                 	⇧「   」 「paste_clipboard_before」
    'Y'      	= 'no_op'                  	#                                                 	 「   」 「yank_main_selection_to_clipboard」
    'R'      	= 'no_op'                  	#                                                 	⇧「   」 「replace_selections_with_clipboard」
    'S'      	= 'no_op'                  	#                                                 	⇧「   」 「workspace_symbol_picker」
    # Home   	row                        	                                                  	 
    'j'      	= 'extend_line'            	# ⮒ Select current/next(if selected) line         	 「  x」 「」
    'k'      	= 'keep_selections'        	# ᵏ𝖗 selections not matching the regex (keep)     	   「⇧ k」 「」
    'l'      	= 'remove_selections'      	# ×𝖗 selections     matching the regex            	   「⇧⌥k」 「」
    ';'      	= 'command_mode'           	# Ⓒ Enter command mode                            	 「⇧ ;」 「」
    # 'f'    	= 'mode_file'              	# ☰␜ File mode                                    	 「   」 「file_picker」 !!!missing_aliases
    # 'd'    	= 'mode_bracket'           	# ☰⟪ Insert various brackets                      	 「   」 「」 !!!missing_aliases
    's'      	= 'select_regex'           	# 𝖗▋ Select all regex matches inside selections   	   「  s」 「symbol_picker」
    'a'      	= ['save_selection',       	# 🖈∀▋                                             	 「⇧ 5」 「」
             	   'select_all']           	# Save current position, select everything        	 
    'h'      	= ['kill_to_line_start',   	# ×⎯                                              	 「   」 「」
             	   'kill_to_line_end']     	# Delete this line                                	 
    'g'      	= 'save_selection'         	# 🖈 Save the current selection to the jumplist    	 「  ^s」 「」
    # Upper  	row                        	                                                  	 
    # 'u'    	= 'mode_U'                 	# ☰u TBD LSPs? or list_kills like z               	 「   」 「」  !!!missing_aliases
    # 'i'    	= 'mode_Register'          	# ☰® Register/copy/paste etc.                     	 「   」 「」
    'o'      	= 'hover'                  	# ? Show documentation for item under cursor (LSP)	 「  k」 「」
    # 'p'    	= 'mode_P'                 	# ☰p TBD                                          	 「」「paste_clipboard_after」 !!!missing_aliases
    'r'      	= 'rename_symbol'          	# ✎ Rename symbol (LSP)                           	≝「   」 「rename_symbol」
    'e'      	= 'extend_to_line_bounds'  	# ⎯ Extend selection to line bounds               	 「  x」 「」
    #'w'     	= 'mode_window'            	# ☰🗔 Window mode                                  	 「␣ w」 「mode_window」 !!!missing_aliases
    # 'q'    	= '???'                    	#                                                 	 「  q」 「」
    'y'      	= 'code_action'            	# Ⓐ Apply code action (LSP)                       	 「␣ a」 「yank_joined_to_clipboard」
    't'      	= 'replace_with_yanked'    	# 🗘📋 Replace with copied text                     	 「⇧ r」 「」  <i class='fa fa-copy'></i>
    # Lower  	row                        	                                                  	 
    'm'      	= 'symbol_picker'          	# 🅂🗋 Open document  symbol picker (LSP) ⚛Ⓢ        	 「␣ s」 「」
    ','      	= 'workspace_symbol_picker'	# 🅂🗍 Open workspace symbol picker (LSP) ⚛Ⓢ        	 「␣⇧s」 「」

    '/'      	= 'global_search'                     	# 🔎🗁 Global search in workspace folder           	≝「␣ /」 「global_search」
    'v'      	= 'paste_clipboard_after'             	# 📋⤹ Paste after selections                      	 「␣ p」 「」
    'c'      	= 'yank_main_selection_to_clipboard'  	# 📋▋ Copy main selection into system clipboard   	 「␣ ⇧y」  <i class='fa fa-clipboard'></i>▋
    'x'      	= ['yank_main_selection_to_clipboard',	# ×📋 ▋                                           	 「   」 「」 <i class='fa fa-clipboard'></i>
             	   'delete_selection']                	# cut to clipboard                               	 「   」 「」  create a new buffer and paste a buffer there !!! not available yet
    # 'z'    	= 'list_kills'                        	# 🕱☰ new buffer with clipboard content           	 「   」 「」	 !!!missing
    'n'      	= 'split_selection'                   	# ䷖𝖗 on regex matches                            	 「⇧ s」 「」
    'b'      	= 'switch_to_lowercase'               	# 𝔸𝕒  (selection)                                	 「  `」 「buffer_picker」
    "'"      	= 'flip_selections'                   	# ⮀ Flip selection cursor and anchor             	 「 ⌥;」 「」
    '\'      	= 'shell_pipe'                        	# Pipe selections thru shell, replace with output	 「⇧ \」 「」
    # Numbers	row                                   	                                                 	 
    # "'"    	= 'last_picker'                       	# ☰☾ ∞Open last fuzzy picker                     	 「  」 「」
    '6'      	= 'switch_to_uppercase'               	# 𝕒𝔸 (selection)                                 	 「⇧⌥`」 「」 !!! change to Sentence Case
    # '7'    	= 'toggle_spellcheck'                 	# ⇝ spell check                                  	 「   」 「」  !!!missing

  [keys.select.'space'.'f'] #Ⓢ ☰␜ File mode in Space mode 「␣ f」 「」
    'j'  	= ':write'                 	# 💾 save file
    'k'  	= 'file_picker'            	# 🗁 Open file   picker	 「␣ f」
    # 'l'	= 'open file at cursor'    	# ❚␜ open file at cursor
    'f'  	= 'buffer_picker'          	# ☰b Open buffer picker	 「  b」 「」
    # 'd'	= 'show in desktop'        	# show in desktop
    's'  	= ':write'                 	# 💾 save file
    'S'  	= ':write-all'             	# 💾∀v all views
    'a'  	= 'goto_last_accessed_file'	# 🕮 file last accessed/alternate	「ⓖ a」
    # 'g'	= 'bookmark bmenu list'    	# ☰🖈bookmark bmenu list
    # 'h'	= 'bookmark set'           	# 🖈 bookmark set
    # 'u'	= 'open last closed'       	# open last closed
    # 'o'	= 'open file fast'         	# prompt toopen a file from bookmark
    # 'r'	= 'rename_file'            	# ✎ rename current file
    # 'e'	= 'open in external app'   	# open in external app
    # 'w'	= 'find_file'              	# 🔎 Find file  <i class='mss mss-Search-3'></i>
    # 'q'	= 'mode_fs_close'          	# ☰× Close buffers/files saved/unsaved
    'v'  	= 'goto_last_modified_file'	# ✎ file last modified/alternate	「ⓖ m」
    # 'c'	= 'copy file path'         	# 📋C:\ copy file path <i class='fa fa-clipboard'>C:\
    # 't'	= 'list recently closed'   	# list recently closed
    # 'y'	= 'open recently closed'   	# open recently closed
    'o'  	= 'file_picker'            	# 🗁 Open file   picker	「␣ f」
    'n'  	= ':new'                   	# 🗋 new empty buffer  	「Ⓝ^n」
    # 'b'	= 'recentf open files'     	# recentf open files
    # '\'	= 'open in terminal'       	# open in terminal
    '`'  	= ':reload'                	# 🗘 Discard, Reload from source
  [keys.select.'space'.'f'.'q'] #Ⓢ ☰␜☰× Close mode in File mode in Space mode
    'x'	= ':buffer-close'   	# ×b buffer current
    'f'	= ':buffer-close'   	# ×b buffer current
    'r'	= ':buffer-close!'  	# 🕱b buffer current (kill unsaved)
    'd'	= ':quit'           	# ×v view   current
    'e'	= ':quit!'          	# 🕱v view   current
    'a'	= ':quit-all'       	# ×∀v view  all
    'q'	= ':quit-all!'      	# 🕱∀v view  all
    's'	= ':write-quit'     	# 💾×v view current
    'w'	= ':write-quit!'    	# 💾🕱v view current
    'j'	= ':write-quit'     	# 💾×v view current
    'u'	= ':write-quit!'    	# 💾🕱v view current
    'k'	= ':write-quit-all' 	# 💾∀v view all, ×∀v view all
    'i'	= ':write-quit-all!'	# 💾∀v view all, 🕱∀v view all
    ';'	= ':cquit'          	# Quit with exit code (default 1)
  [keys.select.'space'.'f'.'x'] #Ⓢ ☰␜☰× Close mode in File mode in Space mode
    'x'	= ':buffer-close'   	# ×b buffer current
    'f'	= ':buffer-close'   	# ×b buffer current
    'r'	= ':buffer-close!'  	# 🕱b buffer current (kill unsaved)
    'd'	= ':quit'           	# ×v view   current
    'e'	= ':quit!'          	# 🕱v view   current
    'a'	= ':quit-all'       	# ×∀v view  all
    'q'	= ':quit-all!'      	# 🕱∀v view  all
    's'	= ':write-quit'     	# 💾×v view current
    'w'	= ':write-quit!'    	# 💾🕱v view current
    'j'	= ':write-quit'     	# 💾×v view current
    'u'	= ':write-quit!'    	# 💾🕱v view current
    'k'	= ':write-quit-all' 	# 💾∀v view all, ×∀v view all
    'i'	= ':write-quit-all!'	# 💾∀v view all, 🕱∀v view all
    ';'	= ':cquit'          	# Quit with exit code (default 1)

  [keys.select.'space'.'i'] #Ⓢ ☰®  Register/copy/paste etc.
    'i'  	= 'select_register'                  	# ®  Select a register to copy/paste from '<reg> ??? make sticky? for further reg ops or use the main layer
    # '7'	= 'append_to_register 1'             	# ®1⎀ Append current line/selection to reg 1
    # '8'	= 'clear_register 1'                 	# ®1× x
    # '9'	= 'copy_to_register 1'               	# ®1🗐 x
    # '0'	= 'paste_from_register 1'            	# ®1📋 x
    # '1'	= 'append_to_register 2'             	# ®2⎀ Append current line/selection to reg 2
    # '2'	= 'clear_register 2'                 	# ®2× x
    # '3'	= 'copy_to_register 2'               	# ®2🗐 x
    # '4'	= 'paste_from_register 2'            	# ®2📋 x
    't'  	= 'replace_selections_with_clipboard'	# 🗘▋📋 Replace selections by clipboard contents    	「␣⇧r」 <i class='fa fa-clipboard'></i>▋
    'x'  	= 'join_selections'                  	# ×␤ ⨝ Join lines inside selection                	「Ⓝ⇧j」
    'v'  	= 'paste_clipboard_before'           	# ⤸📋 Paste after  selections                      	「␣⇧p」 ⤸<i class='fa fa-clipboard'></i>
    'c'  	= 'yank_joined_to_clipboard'         	# 📋∀▋ Copy all selections to clipboard (joined) ⨝📋	「␣ y」 <i class='fa fa-clipboard'></i> ∀❚ ∀▋
    # 'a'	= ':clipboard-yank'                  	# Copy main   sel to system         clipboard
    # 'a'	= ':clipboard-yank-join'             	# Copy joined sel to system         clipboard with sep \n
    # 'a'	= ':primary-clipboard-yank'          	# Copy main   sel to system primary clipboard
    # 'a'	= ':primary-clipboard-yank-join'     	# Copy joined sel to system primary clipboard with sep \n
    # 'a'	= ':clipboard-paste-after'           	# Paste system  clipboard after   selections
    # 'a'	= ':clipboard-paste-before'          	# Paste system  clipboard before  selections
    # 'a'	= ':clipboard-paste-replace'         	# Paste system  clipboard replace selections
    # 'a'	= ':primary-clipboard-paste-after'   	# Paste primary clipboard after   selections
    # 'a'	= ':primary-clipboard-paste-before'  	# Paste primary clipboard before  selections
    # 'a'	= ':primary-clipboard-paste-replace' 	# Paste primary clipboard replace selections
    # 'a'	= ':show-clipboard-provider'         	# Show clipboard provider name in status bar
    'j'  	= ':sort'                            	# 𝕒🢖𝕫 Sort ranges in selection 𝟙𝟚𝟛
    'k'  	= ':rsort'                           	# 𝕫🢖𝕒 Sort ranges in selection in reverse order 𝟛𝟚𝟙
    # 'd'	='list-matching-lines'               	# !!!missing
    # 'f'	='delete-matching-lines'             	# !!!missing
    # 'g'	='delete-non-matching-lines'         	# !!!missing
    # 't'	='delete-duplicate-lines'            	# !!!missing
    # 'n'	='reformat-to-sentence-lines'        	# !!!missing
    # 'o'	='copy-rectangle-to-register'        	# !!!missing
    # 'r'	='query-replace-regexp'              	# !!!missing
    # 'h'	='mark-defun'                        	# !!!missing
    # ';'	='escape-quotes'                     	# Add \ before " in current line/selection

  # [keys.select.'space'.'d'] #Ⓢ ☰⟪ Bracket mode in Space mode (place cursor in between)
    # 'RET'	= 'insert char'   	#
    # 'SPC'	= 'insert unicode'	#
    # 'd'  	= '()'            	# () parenthesis
    # 'f'  	= '[]'            	# [] square bracket
    # 'j'  	= '{}'            	# {} brace
    # 'k'  	= '""'            	# "" regular double quote
    # 'l'  	= "''"            	# '' regular single quote
    # 'r'  	= '‹›'            	# ‹› single angle quote (single chevrons)
    # 't'  	= '«»'            	# «» double angle quote (double chevrons)
    # 'n'  	= '【】'            	# 【】 black lenticular bracket
    # 'm'  	= '「」'            	# 「」 corner bracket
    # 'o'  	= '〔〕'            	# 〔〕 tortoise shell bracket
    # ','  	= '〈〉'            	# 〈〉 angle bracket or math ⟨⟩
    # '.'  	= '⟪⟫'            	# ⟪⟫ double angle bracket
    # '<'  	= '⟪⟫'            	# ⟪⟫ double angle bracket
    # 'g'  	= '‘’'            	# ‘’ curly single quote
    # 'h'  	= '“”'            	# “” double curly quote
    # 'y'  	= "`'"            	# `' emacs quote
    # ';'  	= '=""'           	# ="" string assignment
    # 'z'  	= '⸨⸩'            	# ⸨⸩ Double Parenthesis
    # 'c'  	= 'date'          	# 📆📅current date
    # 'p'  	= 'u+000C'        	# ␌ formfeed

  [keys.select.'space'.'w'] #Ⓢ ☰🗔  Window mode in Space mode「Ⓝ^ w」 「」
    's'      	= 'no_op'           	#                                      	   「  」 「hsplit」
    'C-s'    	= 'no_op'           	#                                      	   「  」 「hsplit」
    'v'      	= 'no_op'           	#                                      	   「  」 「vsplit」
    'C-v'    	= 'no_op'           	#                                      	   「  」 「vsplit」
    'F'      	= 'no_op'           	#                                      	  ⇧「  」 「goto_file」
    'j'      	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「  j」 「jump_view_down」
    'k'      	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「  k」 「jump_view_up」
    'l'      	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「  h」 「jump_view_right」
    ';'      	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「  l」 「」
    'C-j'    	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「 ^j」 「jump_view_down」
    'C-k'    	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「 ^k」 「jump_view_up」
    'C-l'    	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「 ^h」 「jump_view_right」
    'C-;'    	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「 ^l」 「」 #!!!fails
    'C-down' 	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	 「▼」 「」
    'C-up'   	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	 「▲」 「」
    'C-left' 	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「◀」 「」
    'C-right'	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「▶」 「」
    'w'      	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「  w」 「rotate_view」
    'C-w'    	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「 ^w」 「rotate_view」
    'f'      	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「  v」 「vsplit」
    'C-f'    	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「 ^v」 「vsplit」
    'm'      	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「  s」 「」
    'C-m'    	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「 ^s」 「」
    'h'      	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'C-h'    	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'g'      	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'C-g'    	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'q'      	= 'wclose'          	# ×🗔  Close         current window     	 「  q」 「wclose」
    'C-q'    	= 'wclose'          	# ×🗔  Close         current window     	 「 ^q」 「wclose」
    'o'      	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「  o」 「wonly」
    'C-o'    	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「 ^o」 「wonly」
    'x'      	= 'wonly'           	# ×∀🗔 Close all but current window     	 「  o」 「」
    'C-x'    	= 'wonly'           	# ×∀🗔 Close all but current window     	 「 ^o」 「」
    'down'   	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「▼」 「jump_view_down」
    'up'     	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「▲」 「jump_view_up」
    'left'   	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	≝「◀」 「jump_view_left」
    'right'  	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	≝「▶」 「jump_view_right」

  [keys.select.'space'.'u'] #Ⓢ 🌐 ☰ⓤ LSPs and various ones
    'u'  	= 'remove_primary_selection'	# ×          the primary selection                   	「 ⌥,」
    'i'  	= 'keep_primary_selection'  	# ×∀ all but the primary selection (keep only)       	「  ,」
    # LSP	                            	                                                     	 
    'a'  	= 'format_selections'       	# ℱ  Format selection (LSP)                          	「  =」 !!!missing
    'q'  	= ':format'                 	# ℱ∀ Format the file using the LSP formatter         	 「  」
    'j'  	= 'code_action'             	# Ⓐ  Apply code action (LSP)                         	「␣ a」
    's'  	= 'symbol_picker'           	# 🅂🗋 Open document  symbol picker (LSP) ⚛Ⓢ           	「␣ s」
    'w'  	= 'workspace_symbol_picker' 	# 🅂🗍 Open workspace symbol picker (LSP) ⚛Ⓢ           	「␣⇧s」
    'r'  	= 'rename_symbol'           	# ✎  Rename symbol (LSP)                             	「␣ r」
    'l'  	= 'goto_prev_diag'          	# 🢔🛠  Diagnostic previous (LSP) !!! make these sticky	「⧛ d」
    ';'  	= 'goto_next_diag'          	# 🛠🢖  Diagnostic next     (LSP) !!! make these sticky	「⧚ d」
    '.'  	= 'goto_first_diag'         	# ⭰🛠 Diagnostic first    in document (LSP)           	「⧛⇧d」
    '/'  	= 'goto_last_diag'          	# 🛠⭲ Diagnostic last     in document (LSP)           	「⧚⇧d」

  # [keys.select.'space'.'p']	#Ⓢ ☰ⓟ TBD



  [keys.select.'['] #Ⓢ Ⓝ[ ☰⧛ Unimpaired
    'd'    	= 'goto_prev_diag'   	# 🢔🛠  Diagnostic previous (LSP)           	 「  d」 「goto_prev_diag」
    'D'    	= 'goto_first_diag'  	# ⭰🛠 Diagnostic first    in document (LSP)	 「⇧d」 「goto_first_diag」
    'f'    	= 'goto_first_diag'  	# ⭰🛠 Diagnostic first    in document (LSP)	 「⇧d」 「」
    'space'	= 'add_newline_above'	# ⭡␤  Add newline above                   	 「 ␣」 「add_newline_above」
  [keys.select.']'] #Ⓢ Ⓝ] ☰⧚
    'd'    	= 'goto_next_diag'   	# 🛠🢖  Diagnostic next (LSP)            	「  d」 「goto_next_diag」
    'D'    	= 'goto_last_diag'   	# 🛠⭲ Diagnostic last  in document (LSP)	「 ⇧」 「goto_last_diag」
    'f'    	= 'goto_last_diag'   	# 🛠⭲ Diagnostic last  in document (LSP)	「 ⇧」 「」
    'space'	= 'add_newline_below'	# ⭣␤  Add newline below                	 「 ␣」 「add_newline_below」



# —————————————————————————————————————————————————————————————————————————————————————————————————



[keys.insert] #ⓘ
  ';'	= {j='normal_mode' }	# Maps `;k` to exit insert mode !!!flashes dialog during typing
  #ⓘ Test ——————————————————————————————————————————————————————————————————————
    # 'Escape'	= 'normal_mode'	# Switch to normal mode	「Escape」
    # 'A-x'   	= 'normal_mode'	# Maps Alt-X to enter normal mode
  #ⓘ Free ——————————————————————————————————————————————————————————————————————
    'C-p'  	= 'no_op'	# move to previous line  	 「   」 「move_line_up」
    'C-d'  	= 'no_op'	#                        	 「   」 「delete_char_forward」
    'A-b'  	= 'no_op'	#                        	 「   」 「move_prev_word_end」
    'C-f'  	= 'no_op'	#                        	 「   」 「move_char_right」
    'C-u'  	= 'no_op'	#                        	 「   」 「kill_to_line_start」
    'C-e'  	= 'no_op'	# ???useful vs selections	 「   」 「goto_line_end_newline」
    # 'C-a'	= ''     	# ???useful vs selections	 「C-a」 「goto_line_start」

  #ⓘ   	Compat with non-modal editors	 
  'C-o'	= 'file_picker'              	# 🗁 Open file   picker	 「␣ f」 「jump_backward」
  'C-s'	= ':write'                   	# 💾 save file         	 「  ^s」 「save_selection」
  'C-n'	= ':new'                     	# 🗋 new buffer        	 「 ^n」 「」

  #ⓘ   	Copy                                	 
  'A-c'	= 'yank'                            	# 🗐▋ Copy main selection <i class='fa fa-copy'></i>                                    	 「  c」 「change_selection」
  'C-c'	= 'yank_main_selection_to_clipboard'	# 📋▋ Copy main selection into system clipboard <i class='fa fa-clipboard'></i>         	 「␣,⇧y」 「toggle_comments」
  'A-C'	= 'yank_joined_to_clipboard'        	# ∀▋ Copy all selections to clipboard (joined) ⨝📋 <i class='fa fa-clipboard'></i> ∀❚ ∀▋	 「␣ y」 「」

  #ⓘ Shell 	                 	 
    'A-|'  	= 'shell_pipe'   	# Pipe each selection through shell command, replacing with output	⇧「Ⓝ⇧ \」 「shell_pipe」
    "A-\\" 	= 'shell_pipe_to'	# Pipe each selection into    shell command, ignoring       output	 「Ⓝ ⌥\」 「」
    # 'A-|'	= 'shell_pipe_to'	# Pipe each selection into    shell command, ignoring       output	⇧「Ⓝ⇧⌥\」 「shell_pipe_to」

  #ⓘ Move ——————————————————————————————————————————————————————————————————————
    #ⓘ   	Cursor@Home
    'A-j'	= 'move_line_down'      	# ▼                              	 「ⓘ ^n」 「move_line_down」
    'A-k'	= 'move_line_up'        	# ▲                              	 「ⓘ ^p」 「move_line_up」
    'A-l'	= 'move_char_left'      	# ◀                              	 「ⓘ ^b」 「move_char_right」
    'A-;'	= 'move_char_right'     	# ▶                              	 「ⓘ ^f」 「collapse_selection」
    'A-m'	= 'half_page_down'      	# ⤈ Move half page down          	 「Ⓝ ^d」 「☰🧩」
    'A-,'	= 'half_page_up'        	# ⤉ Move half page up            	 「Ⓝ ^u」 「keep_primary_selection」
    'A-a'	= 'extend_to_line_start'	# ⭰▋ Move     line start + select	 「ⓈHome」 「append_mode」 # goto_line_start
    'A-A'	= 'extend_to_line_end'  	# ⭲▋ Move     line end   + select	 「ⓈEnd」  「append_to_line」 # goto_line_end

    #ⓘ           	Compat with non-modal editors
    'C-home'     	= 'goto_file_start'            	# ⇱ line number `<n>` else file start	 「  g」 「」
    'C-end'      	= 'goto_last_line'             	# ⇲ file end                         	 「  e」 「」
    'C-S-tab'    	= 'goto_previous_buffer'       	# ⎗                                  	⇧「ⓖp」「」  !!!fail
    'C-tab'      	= 'goto_next_buffer'           	# ⎘                                  	 「ⓖn」「」  !!!fail
    'C-pageup'   	= 'goto_previous_buffer'       	# ⎗                                  	 「   」 「」
    'C-pagedown' 	= 'goto_next_buffer'           	# ⎘                                  	 「   」 「」
    'A-pageup'   	= 'jump_backward'              	# ⎗̡                                 	 「   」 「」
    'A-pagedown' 	= 'jump_forward'               	# ⎘̡                                 	 「   」 「」
    'C-left'     	= 'move_prev_long_word_start'  	#                                    	「   」 「」
    'C-right'    	= 'move_next_long_word_start'  	#                                    	「   」 「」
    'S-A-left'   	= 'extend_prev_word_start'     	# w← Extend previous word start      	「Ⓢ  b」 「」
    'S-A-right'  	= 'extend_next_word_end'       	# w⇥ Extend next     word end        	「Ⓢ  e」 「」
    # 'S-A-right'	= 'extend_next_word_start'     	# w→ Extend next     word start      	「Ⓢ  w」 「」
    'S-C-left'   	= 'extend_prev_long_word_start'	# W← Extend previous WORD start      	「Ⓢ ⇧b」 「」
    'S-C-right'  	= 'extend_next_long_word_start'	# W→ Extend next     WORD start      	「Ⓢ ⇧W」 「」
    # 'S-C-right'	= 'extend_next_long_word_end'  	# W⇥ Extend next    WORD end         	「Ⓢ ⇧E」 「」

    # 'C-b'	= 'move_char_left'	#	⌫c × char ←	 「 ^b」 「move_char_left」

    #ⓘ   	File/jumplist
    'A-1'	= 'goto_previous_buffer'	# ⎗                               	 「ⓖp」 「」
    'A-2'	= 'goto_next_buffer'    	# ⎘                               	 「ⓖn」 「」
    'A-3'	= 'jump_backward'       	# ⎗̡ Jump backward on the jumplist	   「Ⓝ^o」 「」
    'A-4'	= 'jump_forward'        	# ⎘̡ Jump forward  on the jumplist	   「Ⓝ^i」 「」

    #ⓘ       	Word
    'A-d'    	= 'move_prev_word_start'       	# 🢔w  Move this word start                	   「Ⓝ b」 「delete_word_forward」
    'A-f'    	= 'move_next_word_end'         	# w🢖  Move this word end                  	   「Ⓝ e」 「move_next_word_start」
    'A-D'    	= 'move_prev_long_word_start'  	# 🢔W Move   this WORD start               	  ⇧「Ⓝ⇧ b」 「」
    'A-F'    	= 'move_next_long_word_end'    	# W🢖 Move   this WORD end                 	  ⇧「Ⓝ⇧ e」 「」
    'C-d'    	= ['move_prev_long_word_start',	# ⤝W  Move prev WORD end                  	⇧「⇧ b」 「half_page_down」
             	   'extend_prev_word_start',   	#                                         	 
             	   'extend_next_word_start']   	# !!!move_prev_long_word_end missing      	 
    'C-f'    	= 'move_next_long_word_start'  	# W⤞ Move next WORD end   (this end + ␣)  	⇧「⇧ w」 「page_down」
    # 'C-f'  	= ['collapse_selection',       	# W⤞ Move next WORD end   (this end + ␣)  	⇧「⇧ w」 「page_down」
    #        	   'extend_next_long_word_end']	#                                         	 
    'C-left' 	= 'move_prev_long_word_start'  	# 🢔W  Move this WORD start                	   「⇧ b」 「」
    'C-right'	= 'move_next_long_word_start'  	# W⤞ Move next WORD end   (this end   + ␣)	 「⇧ w」 「」
    'A-left' 	= 'move_prev_word_end'         	# ⤝w Move prev word end   (this start + ␣)	≝「ⓘ⌥◀」 「move_prev_word_end」
    'A-right'	= 'move_next_word_start'       	# w⤞ Move next word start (this end   + ␣)	≝「ⓘ⌥▶」 「move_next_word_start」
    # 'A-d'  	= 'move_prev_word_end'         	# ⤝w Move   prev word end (this start + ␣)	 「ⓘ⌥b」 「」
    # 'A-f'  	= 'move_next_word_start'       	# w⤞ Move   next word start (this end + ␣)	 「ⓘ⌥f」 「」

    #ⓘ     	Line
    # 'A-G'	= 'goto_line'   	# ⮊⎯ go to line # <n> (set <n> in advance), use Ⓒ<n>⏎	⇧「Ⓝ⇧ g」 「」
    'A-G'  	= 'command_mode'	# Ⓒ Enter command mode                               	⇧「Ⓝ⇧ ;」 「」
    'A-:'  	= 'command_mode'	# Ⓒ Enter command mode                               	⇧「Ⓝ⇧ ;」 「」

    #ⓘ    	Block
    #'A->'	= 'no_op'	# 🢔¶ Move paragraph start #!!!missing yet	 「Ⓝ⇧ [」 「indent」
    #'A-?'	= 'no_op'	# ¶🢖 Move paragraph end   #!!!missing yet	「Ⓝ⇧ ]」 「rsearch」

    'A-r'	= 'repeat_last_motion'	# ∞ Repeat last motion (f/t/m)	 「Ⓝ ⌥.」 「replace」

    #ⓘ   	Find
    'A-w'	= 'find_next_char'  	# 🔎   Find       next     char           	 「Ⓝ  f」 「move_next_word_start」     	<i class='mss mss-Search-3'></i>
    'A-W'	= 'find_prev_char'  	# 🔍   Find       previous char           	⇧「Ⓝ⇧ f」 「move_next_long_word_start」	<i class='fa fa-search'></i>
    'A-S'	= 'rsearch'         	# 🔍𝖗 for previous regex pattern          	 「Ⓝ⇧ /」 「split_selection」
    'A-s'	= 'search'          	# 🔎𝖗 for          regex pattern          	⇧「Ⓝ  /」 「select_regex」
    'A-.'	= 'search_prev'     	# 🢔◎ ◎͔ Select previous search match     	   「Ⓝ⇧ n」 「repeat_last_change!!!」   !!! blocked by .Repeat
    'A-/'	= 'search_next'     	# ◎🢖 ◎͕ Select next     search match     	   「Ⓝ  n」 「search」
    'A-8'	= 'search_selection'	# 𝖗🢔▋ Use selection as the search pattern	   「Ⓝ⇧ 8」 「<8>」   !!! blocked by ∀*

  #ⓘ Select ——————————————————————————————————————————————————————————————————————
    'A-e'	= 'select_mode'	# Ⓢ ✠ Enter select (extend) mode (←↑↓→ in Web)	 「  v」 「move_next_word_end」 <i class='fa fa-arrows'></i>

    # Compat with non-modal editors
    # 'C-a'  	= ['save_selection','select_all']	# 🖈∀▋                                                       	「Ⓝ⇧ 5」  「increment」 ???better than ⭰× × to line ⭰
    'A-down' 	= 'copy_selection_on_next_line'  	# 🠷 Copy selection onto the next     line (add cursor below)	「Ⓝ⇧ c」  「」
    'A-up'   	= 'copy_selection_on_prev_line'  	# 🠵 Copy selection onto the previous line (add cursor above)	 「⇧⌥c」 「」
    'S-left' 	= 'extend_char_left'             	#                                                           	「Ⓢh/◀」 「」
    'S-down' 	= 'extend_line_down'             	#                                                           	「Ⓢj/▼」 「」
    'S-up'   	= 'extend_line_up'               	#                                                           	「Ⓢk/▲」 「」
    'S-right'	= 'extend_char_right'            	#                                                           	「Ⓢl/▶」 「」

    'C-g'  	= 'save_selection'	# 🖈 Save the current selection to the jumplist	 「Ⓝ  ^s」 「」
    # 'A-G'	= 'save_selection'	# 🖈 Save the current selection to the jumplist	 「Ⓝ  ^s」 「」


    'A-E'  	= 'extend_to_line_bounds'	# ⎯ Extend selection to line bounds (line-wise selection)        	⇧「Ⓝ  x」 「move_next_long_word_end」
    'A-J'  	= 'extend_line'          	# ⮒ Select current line, if already selected, extend to next line	 「Ⓝ  x」 「join_selections」
    # 'A-5'	= 'select_paragraph'     	# ¶▋ Select this paragraph                                       	 「Ⓝ   」 「<5>」  !!!missing ∀* !!!missing command
    'A-%'  	= 'select_all'           	# ∀▋ Select entire file                                          	⇧「Ⓝ⇧ 5」 「select_all」

    'A-N'     	= 'split_selection'            	# ䷖𝖗 on regex matches                                       	⇧「Ⓝ⇧ s」 「search_prev」
    'A-S-down'	= 'copy_selection_on_next_line'	# 🠷 Copy selection onto the next     line (add cursor below)	 「Ⓝ⇧ c」 「」
    'A-S-up'  	= 'copy_selection_on_prev_line'	# 🠵 Copy selection onto the previous line (add cursor above)	 「Ⓝ⇧⌥c」 「」

    "A-'"  	= 'collapse_selection'       	# 🢖🢔 Collapse selection onto a single cursor 	 「Ⓝ  ;」 「」
    'A-K'  	= 'keep_selections'          	# ᵏ𝖗 selections not matching the regex (keep)	⇧「Ⓝ⇧ k」 「keep_selections」
    'A-L'  	= 'remove_selections'        	# ×𝖗 selections     matching the regex       	⇧「Ⓝ⇧⌥k」 「」
    # 'A-:'	= 'ensure_selections_forward'	# ???                                        	⇧「Ⓝ⇧⌥;」 「」

    'A-minus'	= 'trim_selections'	# ✁Trim whitespace from the selection                    	 「Ⓝ⇧ -」 「」
    # 'A-+'  	= 'dupe_selections'	# 🗐Duplicate selection (currently nonfunctional/disabled)	⇧「Ⓝ⇧ =」 「dupe_selections」

  #ⓘ Change ——————————————————————————————————————————————————————————————————————
    # 'A-b'	= 'repeat_last_change'	# ∞ Repeat last change	⇧「Ⓝ  .」 「move_prev_word_start」  !!!missing

    'S-ret'	= 'open_below'    	# ⭣␤ Open new line below selection	 ⇧「  o」 「」
    'A-ret'	= 'open_below'    	# ⭣␤ Open new line below selection	  「  o」 「insert_newline」
    'C-ret'	= 'open_below'    	# ⭣␤ Open new line below selection	  「  o」 「insert_newline」
    # 'ret'	= 'insert_newline'	#  ␤ Insert new line              	 ≝「ⓘ ⏎」 「insert_newline」

    #            	Delete
    #ⓘ           	char
    "backspace"  	= 'delete_char_backward'	# ⌫c × char ←    	≝「 ⌫」 「delete_char_backward」
    'C-l'        	= 'delete_char_backward'	# ⌫c × char ←    	 「 ^h」 「」
    'C-;'        	= 'delete_char_forward' 	# ⌦c × char →    	 「 ^d」 「」 !!!fails
    'A-6'        	= 'delete_char_forward' 	# ⌦ !!!missing ∀*	 「Ⓝ ⌦」 「<5>」
    'A-H'        	= 'delete_char_forward' 	# ⌦c × char →    	⇧「 ⌦」 「」
    #ⓘ           	word                    	                 	 
    #            	Compat with non-modal editors
    # 'A-del'    	= 'delete_word_forward'          	# ⌦w × word →   	 「⌥ d」 「」 !!!ignores newlines
    'A-del'      	= ['extend_next_word_end',       	# ⌦w            	 「   」 「」
                 	   'delete_selection']           	# × word →      	 
    'C-del'      	= ['extend_next_long_word_end',  	# ⌦W            	 「   」 「」
                 	   'delete_selection']           	# × Word →      	 
    'A-backspace'	= ['extend_prev_word_start',     	# ⌫w            	 「   」 「」
                 	   'delete_selection']           	# × word ←      	 
    'C-backspace'	= ['extend_prev_long_word_start',	# ⌫W            	 「   」 「」
                 	   'delete_selection']           	# × Word ←      	 
    #            	                                 	                	 
    'C-h'        	= ['extend_prev_long_word_start',	# ⌫W            	 「   」 「delete_char_backward」
                 	   'delete_selection']           	#               	 × Word ←
    # 'A-h'      	= 'delete_word_backward'         	# ⌫w × word ←   	「 ^w」 「」 !!!ignores newlines
    'A-h'        	= ['extend_prev_word_start',     	# ⌫w            	 「   」 「」
                 	   'delete_selection']           	#               	× word ←
    'C-a'        	= 'kill_to_line_start'           	# ⭰× × to line ⭰	 「ⓘ ^u」 「goto_line_start」  ??? better than ∀▋select_all
    'C-A'        	= 'kill_to_line_end'             	# ×⭲ × to line ⭲	 「ⓘ ^k」 「」
    'C-j'        	= 'kill_to_line_start'           	# ⭰× × to line ⭰	 「ⓘ ^u」 「kill_to_line_start」
    'C-k'        	= 'kill_to_line_end'             	# ×⭲ × to line ⭲	 「ⓘ ^k」 「kill_to_line_end」
    #ⓘ           	selection
    'A-x'        	= 'delete_selection'                  	# ×▋                              	 「Ⓝ  d」 「extend_line」
    'del'        	= 'delete_selection'                  	# ×▋                              	 「Ⓝd」 「delete_char_forward」 ??? might be better to delete word/till line ends after selection
    'S-del'      	= 'delete_selection_noyank'           	# 🕱▋                              	  「 ⌥d」 「」
    'A-X'        	= 'join_selections'                   	# ×␤ ⨝ Join lines inside selection	⇧「⇧ j」 「extend_to_line_bounds」
    'C-x'        	= ['yank_main_selection_to_clipboard',	#                                 	×📋	「   」 「completion」
                 	   'delete_selection']                	#                                 	cut to clipboard <i class='fa fa-clipboard'></i>

    'A-t'	= 'replace'            	# 🗘c  Replace with a character	 「Ⓝ  r」 「find_till_char」
    'A-T'	= 'replace_with_yanked'	# 🗘📋 Replace with copied text 	⇧「Ⓝ⇧ r」 「till_prev_char」  <i class='fa fa-copy'></i>

    #ⓘ     	Misc               	                                             	 
    'C-/'  	= 'toggle_comments'	# un-/comment the selections                 	「 ^c」 「」 !!!fail
    'C-m'  	= 'decrement'      	# ⊖ o̠ Decrement object (number) under cursor	「 ^x」 「」 <span class='cd'>o&#800;</span>
    'C-,'  	= 'increment'      	# ⊕ o̟ Increment object (number) under cursor	「 ^a」 「」 <span class='cd'>o&#799;</span> !!!fails
    # 'C-r'	= 'insert_register'	# 📋r Paste register                          	 「ⓘ ^r」 「insert_register」
    'C-i'  	= 'completion'     	# ⎁ Autocomplete                             	 「   」 「」

    #'A-`'	= ''                   	# ☰𝔸𝕒 Case conversion mode	「Ⓝ  」 「switch_to_lowercase」 !!!missing aliases
    'A-^' 	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)          	 「Ⓝ ⌥`」 「」
    'A-B' 	= 'switch_to_lowercase'	# 𝔸𝕒 (selection)          	⇧「Ⓝ  `」 「」
    'C-b' 	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)          	 「Ⓝ ⌥`」 「」

    # 'A-q'	= 'record_macro'   	# ⏺ Start/stop macro recording to the selected register   	 「Ⓝ  q」 「record_macro」
    # 'A-Q'	= 'replay_macro'   	# ▶  Play back a recorded macro from the selected register	⇧「Ⓝ⇧ q」 replay_macro]
    'A-"'  	= 'select_register'	# ®  Select a register to copy/paste from                 	 「Ⓝ  '<reg>」 「select_register」

    'A-I'	= 'open_above'           	# ⭡␤ Open new line above selection	⇧「Ⓝ⇧ o」 「prepend_to_line」
    'A-O'	= 'open_below'           	# ⭣␤ Open new line below selection	 「Ⓝ  o」 「append_to_line」
    'A-u'	= 'undo'                 	# ⎌ Undo change                   	 「Ⓝ  u」 「undo mode」
    'A-y'	= 'redo'                 	# ↷ Redo change                   	 「Ⓝ⇧ u」 「yank」
    'A-U'	= 'earlier'              	# 🕘 Move backward in history      	⇧「Ⓝ ⌥u」 「redo」 <i class='fa fa-history'></i>
    'A-Y'	= 'later'                	# 🕒 Move forward in history ⏱     	⇧「Ⓝ⇧⌥u」 「」 <i class='fa fa-clock-o'></i>
    'C-y'	= 'redo'                 	# ↷ Redo change                   	 「Ⓝ⇧ u」 「」
    'A-v'	= 'paste_after'          	# 📋⤹ Paste after selection        	 「Ⓝ  p」 「select_mode」 ⤹<i class='fa fa-copy'></i>
    'C-v'	= 'paste_clipboard_after'	# 📋⤹ Paste after selection        	 「Ⓝ␣ p」 「」  <i class='fa fa-copy'></i>⤹
    'A-V'	= 'paste_before'         	# ⤸📋 Paste before selection       	 「Ⓝ⇧ p」 「」  <i class='fa fa-clipboard'></i>⤹
    'C-z'	= 'undo'                 	# ⎌ Undo change                   	 「Ⓝ  u」 「」
    'C-Z'	= 'redo'                 	# ↷ Redo change !!!fail           	⇧「Ⓝ⇧ u」 「」

    #ⓘ   	Select manipulation ————————————————————————————————————————————————————————————————————
    'A-('	= 'rotate_selection_contents_backward'	# ⟲ Rotate selection contents backward                       	⇧「Ⓝ⇧⌥9」 「rotate_selections_backward」
    'A-)'	= 'rotate_selection_contents_forward' 	# ⟳ Rotate selection contents forward                        	⇧「Ⓝ⇧⌥0」 「rotate_selections_forward」
    'A-7'	= 'align_selections'                  	# ⥂ Align selection in columns !!!missing ∀*                 	 「Ⓝ⇧ 7」 「<7>」
    'A-&'	= 'align_selections'                  	# ⥂ Align selection in columns                               	⇧「Ⓝ⇧ 7」 「align_selections」
    'A-='	= 'format_selections'                 	# ℱ Format selection (currently nonfunctional/disabled) (LSP)	 「Ⓝ  =」 「format_selections」

    'A-$'	= 'shell_keep_pipe'	# $ᵏ| Pipe each selection into shell command, keep selections where command returned 0	「Ⓝ⇧ 4」 「shell_keep_pipe」

    #ⓘ   	Shell
    'A-!'	= 'shell_insert_output'	# 🢔$ Run shell command, inserting output before each selection	⇧「$!」 「shell_insert_output」
    'A-@'	= 'shell_append_output'	# $🢖 Run shell command, appending output after  each selection	⇧「$!」 「」


  ### ☰Minor modes
  [keys.insert.'A-`'] #ⓘ ☰𝔸𝕒 Case conversion mode
    'A-`'	= 'switch_case'        	# 𝕒⇋𝔸 (selection)             	 「⇧ `」 「」
    '`'  	= 'switch_case'        	# 𝕒⇋𝔸 (selection)             	 「⇧ `」 「」
    'j'  	= 'switch_to_lowercase'	# 𝔸𝕒 (selection)              	 「  `」 「」
    'k'  	= 'switch_to_uppercase'	# 𝕒𝔸 (selection)              	 「 ⌥`」 「」
    # 'l'	= 'switch_to_sentence' 	# 𝔸𝕒 𝔹𝕓 (selection) !!!missing	 「 」 「」
    # ';'	= 'switch_to_camel'    	# ℂ𝕒𝕄𝕖𝕝 (selection) !!!missing	 「 」 「」

  [keys.insert.'A-p'] #ⓘ 'view' ☰👁 View mode intended for scrolling and manipulating the view without changing the selection 「$!」 「paste_after」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	「up」   [scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	# !!!duplciate with align_view_bottom           	 「   」 「page_up」
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」
  [keys.insert.'A-P'] #ⓘ ☰👁ₛ 'sticky', persistent ⇧「$!」 「paste_before」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	「up」   [scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	# !!!duplciate with align_view_bottom           	 「   」 「page_up」
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」
  [keys.insert.'A-Z'] #ⓘ ☰👁ₛ View 'sticky', persistent  ⇧「Ⓝ⇧ z」 「paste_before」
    'u'       	= 'align_view_bottom'	# 🗔⭳ Align line to Screen bottom                	 「  b」 「」
    'i'       	= 'align_view_top'   	# 🗔⭱ Align line to Screen top                   	 「  t」 「」
    'n'       	= 'align_view_center'	# 🗔·| Align line to center (vertically)         	 「  z」 「align_view_center」
    'h'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「align_view_middle」
    'l'       	= 'align_view_middle'	# 🗔·⎯ Align line to Screen middle (horizontally)	 「  m」 「」
    'down'    	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「down」 「scroll_down」
    'up'      	= 'scroll_up'        	# ▲ Scroll ↑                                    	「up」   [scroll_up」
    'j'       	= 'scroll_down'      	# ▼ Scroll ↓                                    	 「  j」 「scroll_down」
    'k'       	= 'scroll_up'        	# ▲ Scroll ↑                                    	 「  k」 「scroll_up」
    'm'       	= 'half_page_down'   	# ⤈ Move half page ↓                            	 「  d」 「align_view_middle」
    ','       	= 'half_page_up'     	# ⤉ Move half page ↑                            	 「  u」 「」
    'J'       	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'K'       	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'C-j'     	= 'page_down'        	# ⇟ Move      page ↓                            	 「  f」 「」
    'C-k'     	= 'page_up'          	# ⇞ Move      page ↑                            	 「  b」 「」
    'pagedown'	= 'page_down'        	# ⇟ Move      page ↓                            	 「pageup」 「page_down」
    'pageup'  	= 'page_up'          	# ⇞ Move      page ↑                            	 「pagedown」 「page_up」
    'z'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    'c'       	= 'no_op'            	#                                               	 「   」 「align_view_center」
    't'       	= 'no_op'            	#                                               	 「   」 「align_view_top」
    'b'       	= 'no_op'            	#                                               	 「   」 「align_view_bottom」
    'b'       	= 'no_op'            	# !!!duplciate with align_view_bottom           	 「   」 「page_up」
    'C-d'     	= 'no_op'            	#                                               	「   」 「half_page_down」
    'C-u'     	= 'no_op'            	#                                               	「   」 「half_page_up」
    'C-f'     	= 'no_op'            	#                                               	「   」 「page_down」
    'C-b'     	= 'no_op'            	#                                               	「   」 「page_up」

  [keys.insert.'A-g'] #ⓘ ⓖ☰⮊ Goto mode Jumps to various locations 「$!」 「」
    'b'  	= 'no_op'                   	#                                    	 「   」 「goto_window_bottom」
    'h'  	= 'no_op'                   	#                                    	 「   」 「goto_line_start」
    'p'  	= 'no_op'                   	#                                    	 「   」 「goto_previous_buffer」
    'j'  	= 'goto_last_line'          	# ⇲ file end                         	 「  e」 「」
    'k'  	= 'goto_file_start'         	# ⇱ line number `<n>` else file start	 「  g」 「goto_line_end」
    # 'g'	= 'goto_file_start'         	# ⇱ line number `<n>` else file start	 「  g」 「goto_file_start」
    # 's'	= 'goto_first_nonwhitespace'	# line start 1ₛₜ non-whitespace char 	 「  s」 「goto_first_nonwhitespace」
    'a'  	= 'goto_first_nonwhitespace'	# line start 1ₛₜ non-whitespace char 	 「  s」 「goto_last_accessed_file」
    'l'  	= 'goto_line_start'         	# line start ⭰                       	 「  h」 「」 !!! change to 🢔¶ when implemented
    ';'  	= 'goto_line_end'           	# line end   ⭲                       	 「  l」 「」 !!! change to ¶🢖 when implemented
    # 'f'	= 'goto_file'               	# files in the selection             	 「  f」 「goto_file」
    'm'  	= 'goto_window_bottom'      	# 🗔⭳ screen bottom                   	 「  b」 「goto_last_modified_file」
    ','  	= 'goto_window_top'         	# 🗔⭱ screen top                      	 「  t」 「」
    'n'  	= 'goto_window_center'      	# 🗔· screen middle                   	 「  c」 「goto_next_buffer」
    # 'd'	= 'goto_definition'         	# ≝      definition (LSP)            	 「  d」 「goto_definition」
    'F12'	= 'goto_definition'         	# ≝      definition (LSP)            	 「  d」 「」
    'e'  	= 'goto_type_definition'    	# ≝ type definition (LSP)            	 「  y」 「goto_last_line」
    # 'y'	= 'goto_type_definition'    	# ≝ type definition (LSP)            	 「  y」 「goto_type_definition」
    # 'r'	= 'goto_reference'          	# 🅁※ references (LSP)                	 「  r」 「goto_reference」
    # 'i'	= 'goto_implementation'     	# 🄸 implementation (LSP)             	 「  i」 「goto_implementation」
    't'  	= 'goto_implementation'     	# 🄸 implementation (LSP)             	 「  i」 「goto_window_top」
    'c'  	= 'goto_last_accessed_file' 	# 🕮␜ file last accessed/alternate    	 「  a」 「goto_window_center」
    'v'  	= 'goto_last_modified_file' 	# ✎␜ file last modified/alternate    	 「  m」 「」
    '1'  	= 'goto_previous_buffer'    	# buffer previous                    	 「  p」 「」 !!! blocked by ∀* universal argument
    '2'  	= 'goto_next_buffer'        	# buffer next                        	 「  n」 「」 !!! blocked by ∀* universal argument
    '3'  	= 'jump_backward'           	# ⎗̡ Jump backward on the jumplist   	 「   」 「」 !!!missing ∀*
    '4'  	= 'jump_forward'            	# ⎘̡ Jump forward  on the jumplist   	 「   」 「」 !!!missing ∀*
    'u'  	= 'goto_last_modification'  	# 🕘 last modification in current file	 「.」 「」 <i class='fa fa-history'></i>
    # '.'	= 'goto_last_modification'  	# 🕘 last modification in current file	 「.」 「goto_last_modification」 <i class='fa fa-history'></i>
    # "'"	= 'goto-char#'              	# c#                                 	 「   」 「」 !!! not available

  [keys.insert.'A-n'] #ⓘ ☰🧩  Match mode ☰<i class='fa fa-puzzle-piece'></i> 「$!」 「」
    'n'  	= 'match_brackets'          	# 🢔()🢖 Goto matching   bracket (TS)              	 「  m」 「」
    '.'  	= 'match_brackets'          	# 🢔(   Goto next left  bracket (TS) !!!missing   	 「  」 「」
    '/'  	= 'match_brackets'          	#   )🢖 Goto next right bracket (TS) !!!missing   	 「  」 「」
    'i'  	= 'surround_add'            	# (+)  Surround current selection with <char>    	 「  s」 「」
    't'  	= 'surround_replace'        	# (🗘) Replace surround character <from> with <to>	 「  r」 「」
    'x'  	= 'surround_delete'         	# (×)  Delete  surround character <char>         	 「  d」 「」
    'e'  	= 'select_textobject_around'	# 🢔O🢖  Select around textobject                  	 「  a」 「」
    'a'  	= 'select_textobject_inner' 	# 🢖O🢔  Select inside textobject                  	 「  i」 「」
    'A-n'	= 'match_brackets'          	# 🢔()🢖 Goto matching   bracket (TS)              	 「  m」 「」
    'A-.'	= 'match_brackets'          	# 🢔(   Goto next left  bracket (TS) !!!missing   	 「  」 「」
    'A-/'	= 'match_brackets'          	#   )🢖 Goto next right bracket (TS) !!!missing   	 「  」 「」
    'A-i'	= 'surround_add'            	# (+)  Surround current selection with <char>    	 「  s」 「」
    'A-t'	= 'surround_replace'        	# (🗘) Replace surround character <from> with <to>	 「  r」 「」
    'A-x'	= 'surround_delete'         	# (×)  Delete  surround character <char>         	 「  d」 「」
    'A-e'	= 'select_textobject_around'	# 🢔O🢖  Select around textobject                  	 「  a」 「」
    'A-a'	= 'select_textobject_inner' 	# 🢖O🢔  Select inside textobject                  	 「  i」 「」

  [keys.insert.'C-w'] #ⓘ ☰🗔  Window mode 「Ⓝ^ w」 「」
    's'      	= 'no_op'           	#                                      	   「  」 「hsplit」
    'C-s'    	= 'no_op'           	#                                      	   「  」 「hsplit」
    'v'      	= 'no_op'           	#                                      	   「  」 「vsplit」
    'C-v'    	= 'no_op'           	#                                      	   「  」 「vsplit」
    'F'      	= 'no_op'           	#                                      	  ⇧「  」 「goto_file」
    'j'      	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「  j」 「jump_view_down」
    'k'      	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「  k」 「jump_view_up」
    'l'      	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「  h」 「jump_view_right」
    ';'      	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「  l」 「」
    'C-j'    	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「 ^j」 「jump_view_down」
    'C-k'    	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「 ^k」 「jump_view_up」
    'C-l'    	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「 ^h」 「jump_view_right」
    'C-;'    	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「 ^l」 「」 #!!!fails
    'C-down' 	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	 「▼」 「」
    'C-up'   	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	 「▲」 「」
    'C-left' 	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	 「◀」 「」
    'C-right'	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	 「▶」 「」
    'w'      	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「  w」 「rotate_view」
    'C-w'    	= 'rotate_view'     	# 🗗⟳ Switch to window next             	≝「 ^w」 「rotate_view」
    'f'      	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「  v」 「vsplit」
    'C-f'    	= 'vsplit'          	# 🗗→ Split →  (Vertical)               	  ≝「 ^v」 「vsplit」
    'm'      	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「  s」 「」
    'C-m'    	= 'hsplit'          	# 🗗↓ Split ↓ (Horizontal)              	   「 ^s」 「」
    'h'      	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'C-h'    	= 'goto_file_hsplit'	# ⮋❚␜ Go to files@selection in splits ↓	   「  f」 「jump_view_left」
    'g'      	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'C-g'    	= 'goto_file_vsplit'	# ⮊❚␜ Go to files@selection in splits →	   「⇧f」 「」
    'q'      	= 'wclose'          	# ×🗔  Close         current window     	 「  q」 「wclose」
    'C-q'    	= 'wclose'          	# ×🗔  Close         current window     	 「 ^q」 「wclose」
    'o'      	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「  o」 「wonly」
    'C-o'    	= 'wonly'           	# ×∀🗔 Close all but current window     	≝「 ^o」 「wonly」
    'x'      	= 'wonly'           	# ×∀🗔 Close all but current window     	 「  o」 「」
    'C-x'    	= 'wonly'           	# ×∀🗔 Close all but current window     	 「 ^o」 「」
    'down'   	= 'jump_view_down'  	# 🗗▼ Move to Split ↓                   	≝「▼」 「jump_view_down」
    'up'     	= 'jump_view_up'    	# 🗗▲ Move to Split ↑                   	≝「▲」 「jump_view_up」
    'left'   	= 'jump_view_left'  	# 🗗◀ Move to Split ←                   	≝「◀」 「jump_view_left」
    'right'  	= 'jump_view_right' 	# 🗗▶ Move to Split →                   	≝「▶」 「jump_view_right」

  # [keys.insert.'A-space'] #ⓘ ☰␣  Space mode 「$!」 「」 !!!fails, A-space blocked by system

  [keys.insert.'A-['] #ⓘ Ⓝ[ ☰⧛ Unimpaired
    'd'    	= 'goto_prev_diag'   	# 🢔🛠  Diagnostic previous (LSP)           	 「  d」 「goto_prev_diag」
    'D'    	= 'goto_first_diag'  	# ⭰🛠 Diagnostic first    in document (LSP)	 「⇧d」 「goto_first_diag」
    'f'    	= 'goto_first_diag'  	# ⭰🛠 Diagnostic first    in document (LSP)	 「⇧d」 「」
    'space'	= 'add_newline_above'	# ⭡␤  Add newline above                   	 「 ␣」 「add_newline_above」
  [keys.insert.'A-]'] #ⓘ Ⓝ] ☰⧚
    'd'    	= 'goto_next_diag'   	# 🛠🢖  Diagnostic next (LSP)            	「  d」 「goto_next_diag」
    'D'    	= 'goto_last_diag'   	# 🛠⭲ Diagnostic last  in document (LSP)	「 ⇧」 「goto_last_diag」
    'f'    	= 'goto_last_diag'   	# 🛠⭲ Diagnostic last  in document (LSP)	「 ⇧」 「」
    'space'	= 'add_newline_below'	# ⭣␤  Add newline below                	 「 ␣」 「add_newline_below」



# —————————————————————————————————————————————————————————————————————————————————————————————————



  # Picker  Keys to use within picker. Remapping currently not supported.
  # 'Up, C-k, C-p'  	= Previous entry
  # 'Down, C-j, C-n'	= Next     entry
  # 'C-space'       	= Filter options
  # 'Enter'         	= Open selected
  # 'C-s'           	= Open horizontally
  # 'C-v'           	= Open vertically
  # 'Escape, C-c'   	= Close picker

  # Prompt Keys to use within prompt, Remapping currently not supported.
  # 'Escape, C-c'   	= Close prompt
  # 'A-b, A-Left'   	= Backward a word
  # 'C-b, Left'     	= Backward a char
  # 'A-f, A-Right'  	= Forward  a word
  # 'C-f, Right'    	= Forward  a char
  # 'C-e, End'      	= Move prompt end
  # 'C-a, Home'     	= Move prompt start
  # 'C-w'           	= Delete previous word
  # 'A-d'           	= Delete next     word
  # 'C-u'           	= Delete to line start
  # 'C-k'           	= Delete to line end
  # 'backspace, C-h'	= Delete previous char
  # 'del, C-d'      	= Delete next     char
  # 'C-s'           	= Insert a word under doc cursor, may be changed to C-r C-w later
  # 'C-p, Up'       	= Select previous history
  # 'C-n, Down'     	= Select next     history
  # 'Tab'           	= Select next     completion item
  # 'BackTab'       	= Select previous completion item
  # 'Enter'         	= Open selected



# Help —————————————————————————————————————————————————————————————————————————————————————————————
  # At most one section each of 'keys.normal', 'keys.insert' and 'keys.select'
  # ®registers /LastSearch :LastCommand "LastCopiedText _BlackHole
  # g = { a = 'code_action' } # Maps `ga` to show possible code actions
  # Default commands @ github.com/helix-editor/helix/blob/master/helix-term/src/commands.rs at the invocation of static_commands! macro and the TypableCommandList
  # [keys.normal.g.l]
  # 'd' = 'cmd1'  # gld
  # 'r' = 'cmd2'  # glr
  # [keys.normal.z]
  # '$' = 'cmd1'  # z$

  # Key name          	Representation
  # Control Shift Alt 	'C-' 'S-' 'A-' # prefix-only
  # Escape            	'esc'
  # Backspace         	'backspace'
  # Space             	'space'
  # Return/Enter      	'ret'
  # < >               	'lt' 'gt'
  # + -               	'plus' 'minus'
  # ;                 	'semicolon'
  # %                 	'percent'
  # Left Right Up Down	'left' 'right' 'up' 'down'
  # Home End          	'home' 'end'
  # PageUp            	'pageup'
  # PageDown          	'pagedown'
  # Tab               	'tab'
  # Delete            	'del'
  # Insert            	'ins'
  # Null              	'null'
  # Keys can be disabled by binding them to the no_op command
